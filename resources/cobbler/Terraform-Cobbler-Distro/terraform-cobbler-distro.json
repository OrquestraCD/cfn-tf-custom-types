{
    "typeName": "Terraform::Cobbler::Distro",
    "description": "Manages a distribution within Cobbler.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/cobbler/Terraform-Cobbler-Distro/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arch": {
            "type": "string",
            "description": "The architecture of the distro. Valid options\nare: i386, x86_64, ia64, ppc, ppc64, s390, arm."
        },
        "BootFiles": {
            "type": "string",
            "description": "Files copied into tftpboot beyond the\nkernel/initrd."
        },
        "Breed": {
            "type": "string",
            "description": "The \"breed\" of distribution. Valid options\nare: redhat, fedora, centos, scientific linux, suse, debian, and\nubuntu. These choices may vary depending on the version of Cobbler\nin use."
        },
        "Comment": {
            "type": "string",
            "description": "Free form text description."
        },
        "FetchableFiles": {
            "type": "string",
            "description": "Templates for tftp or wget."
        },
        "Id": {
            "type": "string"
        },
        "Initrd": {
            "type": "string",
            "description": "Absolute path to initrd on filesystem. This\nmust already exist prior to creating the distro."
        },
        "Kernel": {
            "type": "string",
            "description": "Absolute path to kernel on filesystem. This\nmust already exist prior to creating the distro."
        },
        "KernelOptions": {
            "type": "string",
            "description": "Kernel options to use with the\nkernel."
        },
        "KernelOptionsPost": {
            "type": "string",
            "description": "Post install Kernel options to\nuse with the kernel after installation."
        },
        "MgmtClasses": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "Management classes for external config\nmanagement."
        },
        "Name": {
            "type": "string",
            "description": "A name for the distro."
        },
        "OsVersion": {
            "type": "string",
            "description": "The version of the distro you are\ncreating. This varies with the version of Cobbler you are using.\nAn updated signature list may need to be obtained in order to\nsupport a newer version. Example: `trusty`."
        },
        "Owners": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "Owners list for authz_ownership."
        },
        "RedhatManagementKey": {
            "type": "string",
            "description": "Red Hat Management key."
        },
        "RedhatManagementServer": {
            "type": "string",
            "description": "Red Hat Management server."
        },
        "TemplateFiles": {
            "type": "string",
            "description": "File mappings for built-in config\nmanagement."
        }
    },
    "additionalProperties": false,
    "required": [
        "Breed",
        "Initrd",
        "Kernel",
        "Name",
        "OsVersion"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}