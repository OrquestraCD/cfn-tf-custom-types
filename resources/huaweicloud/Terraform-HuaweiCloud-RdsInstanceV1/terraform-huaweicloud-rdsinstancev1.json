{
    "typeName": "Terraform::HuaweiCloud::RdsInstanceV1",
    "description": "Manages rds instance resource within HuaweiCloud",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/huaweicloud/Terraform-HuaweiCloud-RdsInstanceV1/docs/README.md",
    "definitions": {
        "Backupstrategy": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Keepdays": {
                    "type": "number"
                },
                "Starttime": {
                    "type": "string"
                }
            },
            "required": []
        },
        "Datastore": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Type": {
                    "type": "string",
                    "description": "Specifies the DB engine. Currently, MySQL, PostgreSQL, and\nMicrosoft SQL Server are supported. The value is MySQL, PostgreSQL, or SQLServer."
                },
                "Version": {
                    "type": "string",
                    "description": "Specifies the DB instance version."
                }
            },
            "required": [
                "Type",
                "Version"
            ]
        },
        "Ha": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enable": {
                    "type": "boolean",
                    "description": "Specifies the configured parameters on the HA.\nValid value: The value is true or false. The value true indicates creating\nHA DB instances. The value false indicates creating a single DB instance."
                },
                "Replicationmode": {
                    "type": "string",
                    "description": "Specifies the replication mode for the standby DB instance.\nThe value cannot be empty.\nFor MySQL, the value is async or semisync.\nFor PostgreSQL, the value is async or sync."
                }
            },
            "required": []
        },
        "Nics": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Subnetid": {
                    "type": "string"
                }
            },
            "required": [
                "Subnetid"
            ]
        },
        "Securitygroup": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "string"
                }
            },
            "required": [
                "Id"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        },
        "Volume": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Size": {
                    "type": "number",
                    "description": "Specifies the volume size.\nIts value must be a multiple of 10 and the value range is 100 GB to 2000 GB."
                },
                "Type": {
                    "type": "string",
                    "description": "Specifies the volume type. Valid value:\nIt must be COMMON (SATA) or ULTRAHIGH (SSD) and is case-sensitive."
                }
            },
            "required": [
                "Size",
                "Type"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Availabilityzone": {
            "type": "string",
            "description": "Specifies the ID of the AZ."
        },
        "Created": {
            "type": "string"
        },
        "Dbport": {
            "type": "string",
            "description": "Specifies the database port number."
        },
        "Dbrtpd": {
            "type": "string",
            "description": "Specifies the password for user root of the database."
        },
        "Flavorref": {
            "type": "string",
            "description": "Specifies the specification ID (flavors.id in the\nresponse message in Obtaining All DB Instance Specifications)."
        },
        "Hostname": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Specifies the DB instance name. The DB instance name of\nthe same type is unique in the same tenant."
        },
        "Region": {
            "type": "string",
            "description": "Specifies the region ID."
        },
        "Status": {
            "type": "string"
        },
        "Type": {
            "type": "string"
        },
        "Updated": {
            "type": "string"
        },
        "Vpc": {
            "type": "string",
            "description": "Specifies the VPC ID. For details about how to obtain this\nparameter value, see section \"Virtual Private Cloud\" in the Virtual Private\nCloud API Reference."
        },
        "Backupstrategy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Backupstrategy"
            },
            "maxItems": 1
        },
        "Datastore": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Datastore"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Ha": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Ha"
            },
            "maxItems": 1
        },
        "Nics": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Nics"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Securitygroup": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Securitygroup"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        },
        "Volume": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Volume"
            },
            "maxItems": 1,
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Availabilityzone",
        "Dbrtpd",
        "Flavorref",
        "Vpc"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}