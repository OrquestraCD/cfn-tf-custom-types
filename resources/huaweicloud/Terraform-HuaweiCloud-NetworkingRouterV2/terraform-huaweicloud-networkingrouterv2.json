{
    "typeName": "Terraform::HuaweiCloud::NetworkingRouterV2",
    "description": "Manages a V2 router resource within HuaweiCloud.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "ExternalFixedIp": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IpAddress": {
                    "type": "string",
                    "description": "The IP address to set on the router."
                },
                "SubnetId": {
                    "type": "string",
                    "description": "Subnet in which the fixed IP belongs to."
                }
            },
            "required": []
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdminStateUp": {
            "type": "boolean",
            "description": "Administrative up/down status for the router\n(must be \"true\" or \"false\" if provided). Changing this updates the\n`admin_state_up` of an existing router."
        },
        "Distributed": {
            "type": "boolean",
            "description": "Indicates whether or not to create a\ndistributed router. The default policy setting in Neutron restricts\nusage of this property to administrative users only."
        },
        "EnableSnat": {
            "type": "boolean",
            "description": "Enable Source NAT for the router. Valid values are\n\"true\" or \"false\". An `external_network_id` has to be set in order to\nset this property. Changing this updates the `enable_snat` of the router."
        },
        "ExternalNetworkId": {
            "type": "string",
            "description": "The network UUID of an external gateway\nfor the router. A router with an external gateway is required if any\ncompute instances or load balancers will be using floating IPs. Changing\nthis updates the external gateway of the router."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "A unique name for the router. Changing this\nupdates the `name` of an existing router."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the V2 networking client.\nA networking client is needed to create a router. If omitted, the\n`region` argument of the provider is used. Changing this creates a new\nrouter."
        },
        "TenantId": {
            "type": "string",
            "description": "The owner of the floating IP. Required if admin wants\nto create a router for another tenant. Changing this creates a new router."
        },
        "ValueSpecs": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Map of additional driver-specific options."
        },
        "ExternalFixedIp": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ExternalFixedIp"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}