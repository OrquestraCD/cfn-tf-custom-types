{
    "typeName": "Terraform::HuaweiCloud::LbPoolV2",
    "description": "Manages a V2 pool resource within HuaweiCloud.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Persistence": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CookieName": {
                    "type": "string",
                    "description": "The name of the cookie if persistence mode is set\nappropriately. Required if `type = APP_COOKIE`."
                },
                "Type": {
                    "type": "string",
                    "description": "The type of persistence mode. The current specification\nsupports SOURCE_IP, HTTP_COOKIE, and APP_COOKIE."
                }
            },
            "required": [
                "Type"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdminStateUp": {
            "type": "boolean",
            "description": "The administrative state of the pool.\nA valid value is true (UP) or false (DOWN)."
        },
        "Description": {
            "type": "string",
            "description": "Human-readable description for the pool."
        },
        "Id": {
            "type": "string"
        },
        "LbMethod": {
            "type": "string",
            "description": "The load balancing algorithm to\ndistribute traffic to the pool's members. Must be one of\nROUND_ROBIN, LEAST_CONNECTIONS, or SOURCE_IP."
        },
        "ListenerId": {
            "type": "string",
            "description": "The Listener on which the members of the pool\nwill be associated with. Changing this creates a new pool.\nNote:  One of LoadbalancerID or ListenerID must be provided."
        },
        "LoadbalancerId": {
            "type": "string",
            "description": "The load balancer on which to provision this\npool. Changing this creates a new pool.\nNote:  One of LoadbalancerID or ListenerID must be provided."
        },
        "Name": {
            "type": "string",
            "description": "Human-readable name for the pool."
        },
        "Protocol": {
            "type": "string",
            "description": "The protocol - can either be TCP, HTTP or HTTPS.\nChanging this creates a new pool."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the V2 Networking client.\nA Networking client is needed to create an . If omitted, the\n`region` argument of the provider is used. Changing this creates a new\npool."
        },
        "TenantId": {
            "type": "string",
            "description": "Required for admins. The UUID of the tenant who owns\nthe pool.  Only administrative users can specify a tenant UUID\nother than their own. Changing this creates a new pool."
        },
        "Persistence": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Persistence"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "LbMethod",
        "Protocol"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}