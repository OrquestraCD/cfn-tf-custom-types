{
    "typeName": "Terraform::UCloud::LbAttachment",
    "description": "Provides a Load Balancer Attachment resource for attaching Load Balancer to UHost Instance, etc.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "ListenerId": {
            "type": "string",
            "description": "The ID of a listener server."
        },
        "LoadBalancerId": {
            "type": "string",
            "description": "The ID of a load balancer."
        },
        "Port": {
            "type": "number",
            "description": "The listening port of the backend server, range: 1-65535, (Default: `80`). Backend server port have the following restrictions: If the LB listener type is `request_proxy`, the backend serve can add different ports to implement different service instances of the same IP. Else if LB listener type is `packets_transmit`, the port of the backend server must be consistent with the LB listening port."
        },
        "PrivateIp": {
            "type": "string"
        },
        "ResourceId": {
            "type": "string",
            "description": "The ID of a backend server."
        },
        "ResourceType": {
            "type": "string",
            "description": "**Deprecated**, attribute `resource_type` is deprecated for optimizing parameters."
        },
        "Status": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "ListenerId",
        "LoadBalancerId",
        "ResourceId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/PrivateIp",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}