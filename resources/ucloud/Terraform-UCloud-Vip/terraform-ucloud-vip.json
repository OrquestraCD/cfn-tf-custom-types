{
    "typeName": "Terraform::UCloud::Vip",
    "description": "Provides a VIP resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/ucloud/Terraform-UCloud-Vip/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CreateTime": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IpAddress": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The name of VIP. If not specified, terraform will auto-generate a name beginning with `tf-vip-`."
        },
        "Remark": {
            "type": "string",
            "description": "The remarks of the VIP. (Default: `\"\"`)."
        },
        "SubnetId": {
            "type": "string",
            "description": "The ID of subnet. If defined `vpc_id`, the `subnet_id` is Required."
        },
        "Tag": {
            "type": "string",
            "description": "A tag assigned to VIP, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`)."
        },
        "VpcId": {
            "type": "string",
            "description": "The ID of VPC linked to the VIP."
        }
    },
    "additionalProperties": false,
    "required": [
        "SubnetId",
        "VpcId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CreateTime",
        "/properties/Id",
        "/properties/IpAddress"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}