{
    "typeName": "Terraform::VCD::VappVm",
    "description": "Provides a vCloud Director VM resource. This can be used to create,\nmodify, and delete VMs within a vApp.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Customization": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AdminPassword": {
                    "type": "string"
                },
                "AllowLocalAdminPassword": {
                    "type": "boolean"
                },
                "AutoGeneratePassword": {
                    "type": "boolean"
                },
                "ChangeSid": {
                    "type": "boolean"
                },
                "Enabled": {
                    "type": "boolean"
                },
                "Force": {
                    "type": "boolean"
                },
                "Initscript": {
                    "type": "string"
                },
                "JoinDomain": {
                    "type": "boolean"
                },
                "JoinDomainAccountOu": {
                    "type": "string"
                },
                "JoinDomainName": {
                    "type": "string"
                },
                "JoinDomainPassword": {
                    "type": "string"
                },
                "JoinDomainUser": {
                    "type": "string"
                },
                "JoinOrgDomain": {
                    "type": "boolean"
                },
                "MustChangePasswordOnFirstLogin": {
                    "type": "boolean"
                },
                "NumberOfAutoLogons": {
                    "type": "number"
                }
            },
            "required": []
        },
        "Disk": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BusNumber": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "UnitNumber": {
                    "type": "string"
                }
            },
            "required": [
                "BusNumber",
                "Name",
                "UnitNumber"
            ]
        },
        "Network": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AdapterType": {
                    "type": "string"
                },
                "Ip": {
                    "type": "string"
                },
                "IpAllocationMode": {
                    "type": "string"
                },
                "IsPrimary": {
                    "type": "boolean"
                },
                "Mac": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "required": [
                "Type"
            ]
        },
        "OverrideTemplateDisk": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BusNumber": {
                    "type": "number"
                },
                "BusType": {
                    "type": "string"
                },
                "Iops": {
                    "type": "number"
                },
                "SizeInMb": {
                    "type": "number"
                },
                "StorageProfile": {
                    "type": "string"
                },
                "UnitNumber": {
                    "type": "number"
                }
            },
            "required": [
                "BusNumber",
                "BusType",
                "SizeInMb",
                "UnitNumber"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AcceptAllEulas": {
            "type": "boolean",
            "description": "Automatically accept EULA if OVA has it. Default is `true`."
        },
        "CatalogName": {
            "type": "string",
            "description": "The catalog name in which to find the given vApp Template."
        },
        "ComputerName": {
            "type": "string",
            "description": "Computer name to assign to this virtual machine."
        },
        "CpuCores": {
            "type": "number",
            "description": "The number of cores per socket. The default is 1."
        },
        "Cpus": {
            "type": "number",
            "description": "The number of virtual CPUs to allocate to the VM. Socket count is a result of: virtual logical processors/cores per socket. The default is 1."
        },
        "Description": {
            "type": "string",
            "description": "The VM description. Note: description is read only. Currently, this field has\nthe description of the OVA used to create the VM."
        },
        "ExposeHardwareVirtualization": {
            "type": "boolean",
            "description": "Boolean for exposing full CPU virtualization to the\nguest operating system so that applications that require hardware virtualization can run on virtual machines without binary\ntranslation or paravirtualization. Useful for hypervisor nesting provided underlying hardware supports it. Default is `false`."
        },
        "GuestProperties": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Key value map of guest properties."
        },
        "Href": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Initscript": {
            "type": "string"
        },
        "InternalDisk": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "BusNumber": {
                        "type": "number"
                    },
                    "BusType": {
                        "type": "string"
                    },
                    "DiskId": {
                        "type": "string"
                    },
                    "Iops": {
                        "type": "number"
                    },
                    "SizeInMb": {
                        "type": "number"
                    },
                    "StorageProfile": {
                        "type": "string"
                    },
                    "ThinProvisioned": {
                        "type": "boolean"
                    },
                    "UnitNumber": {
                        "type": "number"
                    }
                }
            }
        },
        "Ip": {
            "type": "string",
            "description": "The IP to assign to this vApp. Must be an IP address or\none of `dhcp`, `allocated`, or `none`. If given the address must be within the\n`static_ip_pool` set for the network. If left blank, and the network has\n`dhcp_pool` set with at least one available IP then this will be set with\nDHCP."
        },
        "Mac": {
            "type": "string"
        },
        "Memory": {
            "type": "number",
            "description": "The amount of RAM (in MB) to allocate to the VM."
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Key value map of metadata to assign to this VM."
        },
        "Name": {
            "type": "string",
            "description": "A name for the VM, unique within the vApp."
        },
        "NetworkDhcpWaitSeconds": {
            "type": "number",
            "description": "Optional number of seconds to try and wait for DHCP IP (only valid\nfor adapters in `network` block with `ip_allocation_mode=DHCP`). It constantly checks if IP is present so the time given\nis a maximum. VM must be powered on and _at least one_ of the following _must be true_:\n* VM has Guest Tools. It waits for IP address to be reported by Guest Tools. This is a slower option, but\ndoes not require for the VM to use Edge Gateways DHCP service.\n* VM DHCP interface is connected to routed Org network and is using Edge Gateways DHCP service (not\nrelayed). It works by querying DHCP leases on Edge Gateway. In general it is quicker than waiting\nuntil Guest Tools report IP addresses, but is more constrained. However this is the only option if Guest\nTools are not present on the VM."
        },
        "NetworkHref": {
            "type": "string"
        },
        "NetworkName": {
            "type": "string",
            "description": "Name of the network this VM should connect to."
        },
        "Org": {
            "type": "string",
            "description": "The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organisations."
        },
        "PowerOn": {
            "type": "boolean",
            "description": "A boolean value stating if this VM should be powered on. Default is `true`."
        },
        "StorageProfile": {
            "type": "string"
        },
        "TemplateName": {
            "type": "string",
            "description": "The name of the vApp Template to use."
        },
        "VappName": {
            "type": "string",
            "description": "The vApp this VM belongs to."
        },
        "VappNetworkName": {
            "type": "string",
            "description": "Name of the vApp network this VM should connect to."
        },
        "Vdc": {
            "type": "string",
            "description": "The name of VDC to use, optional if defined at provider level."
        },
        "Customization": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Customization"
            },
            "maxItems": 1
        },
        "Disk": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Disk"
            }
        },
        "Network": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Network"
            }
        },
        "OverrideTemplateDisk": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/OverrideTemplateDisk"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "CatalogName",
        "Name",
        "TemplateName",
        "VappName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Description",
        "/properties/Id",
        "/properties/InternalDisk"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}