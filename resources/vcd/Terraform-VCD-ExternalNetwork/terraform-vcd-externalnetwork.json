{
    "typeName": "Terraform::VCD::ExternalNetwork",
    "description": "Provides a vCloud Director external network resource.  This can be used to create and delete external networks.\nRequires system administrator privileges.\n\nSupported in provider *v2.2+*",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "IpScope": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Dns1": {
                    "type": "string"
                },
                "Dns2": {
                    "type": "string"
                },
                "DnsSuffix": {
                    "type": "string"
                },
                "Gateway": {
                    "type": "string"
                },
                "Netmask": {
                    "type": "string"
                },
                "StaticIpPool": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/StaticIpPool"
                    }
                }
            },
            "required": [
                "Gateway",
                "Netmask"
            ]
        },
        "VsphereNetwork": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Vcenter": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "Type",
                "Vcenter"
            ]
        },
        "StaticIpPool": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EndAddress": {
                    "type": "string"
                },
                "StartAddress": {
                    "type": "string"
                }
            },
            "required": [
                "EndAddress",
                "StartAddress"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "Network friendly description."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "A unique name for the network."
        },
        "RetainNetInfoAcrossDeployments": {
            "type": "boolean",
            "description": "Specifies whether the network resources such as IP/MAC of router will be retained across deployments. Default is false."
        },
        "IpScope": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IpScope"
            },
            "minItems": 1
        },
        "VsphereNetwork": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/VsphereNetwork"
            },
            "minItems": 1
        },
        "StaticIpPool": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/StaticIpPool"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}