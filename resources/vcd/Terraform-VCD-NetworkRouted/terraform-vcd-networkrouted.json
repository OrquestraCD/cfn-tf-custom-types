{
    "typeName": "Terraform::VCD::NetworkRouted",
    "description": "Provides a vCloud Director Org VDC routed Network. This can be used to create,\nmodify, and delete internal networks for vApps to connect.\n\nSupported in provider *v2.0+*",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/vcd/Terraform-VCD-NetworkRouted/docs/README.md",
    "definitions": {
        "DhcpPool": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DefaultLeaseTime": {
                    "type": "number"
                },
                "EndAddress": {
                    "type": "string"
                },
                "MaxLeaseTime": {
                    "type": "number"
                },
                "StartAddress": {
                    "type": "string"
                }
            },
            "required": [
                "EndAddress",
                "StartAddress"
            ]
        },
        "StaticIpPool": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EndAddress": {
                    "type": "string"
                },
                "StartAddress": {
                    "type": "string"
                }
            },
            "required": [
                "EndAddress",
                "StartAddress"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "An optional description of the network."
        },
        "Dns1": {
            "type": "string",
            "description": "First DNS server to use."
        },
        "Dns2": {
            "type": "string",
            "description": "Second DNS server to use."
        },
        "DnsSuffix": {
            "type": "string",
            "description": "A FQDN for the virtual machines on this network."
        },
        "EdgeGateway": {
            "type": "string",
            "description": "The name of the edge gateway."
        },
        "Gateway": {
            "type": "string"
        },
        "Href": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "InterfaceType": {
            "type": "string",
            "description": "An interface for the network. One of `internal` (default), `subinterface`,\n`distributed` (requires the edge gateway to support distributed networks)."
        },
        "Name": {
            "type": "string",
            "description": "A unique name for the network."
        },
        "Netmask": {
            "type": "string",
            "description": "The netmask for the new network. Defaults to `255.255.255.0`."
        },
        "Org": {
            "type": "string",
            "description": "The name of organization to use, optional if defined at provider level. Useful when\nconnected as sysadmin working across different organisations."
        },
        "Shared": {
            "type": "boolean",
            "description": "Defines if this network is shared between multiple VDCs\nin the Org.  Defaults to `false`."
        },
        "Vdc": {
            "type": "string",
            "description": "The name of VDC to use, optional if defined at provider level."
        },
        "DhcpPool": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/DhcpPool"
            }
        },
        "StaticIpPool": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/StaticIpPool"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "EdgeGateway",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}