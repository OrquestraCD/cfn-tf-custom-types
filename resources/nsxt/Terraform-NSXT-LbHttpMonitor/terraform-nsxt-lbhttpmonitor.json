{
    "typeName": "Terraform::NSXT::LbHttpMonitor",
    "description": "Provides a resource to configure lb http monitor on NSX-T manager\n\n~> **NOTE:** This resource requires NSX version 2.3 or higher.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "RequestHeader": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "Value"
            ]
        },
        "Tag": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Scope": {
                    "type": "string"
                },
                "Tag": {
                    "type": "string"
                }
            },
            "required": [
                "Scope",
                "Tag"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "Description of this resource."
        },
        "DisplayName": {
            "type": "string",
            "description": "The display name of this resource. Defaults to ID if not set."
        },
        "FallCount": {
            "type": "number",
            "description": "Number of consecutive checks that must fail before marking it down."
        },
        "Id": {
            "type": "string"
        },
        "Interval": {
            "type": "number",
            "description": "The frequency at which the system issues the monitor check (in seconds)."
        },
        "MonitorPort": {
            "type": "string",
            "description": "If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not supported."
        },
        "RequestBody": {
            "type": "string",
            "description": "String to send as HTTP health check request body. Valid only for certain HTTP methods like POST."
        },
        "RequestMethod": {
            "type": "string",
            "description": "Health check method for HTTP monitor type. Valid values are GET, HEAD, PUT, POST and OPTIONS."
        },
        "RequestUrl": {
            "type": "string",
            "description": "URL used for HTTP monitor."
        },
        "RequestVersion": {
            "type": "string",
            "description": "HTTP request version. Valid values are HTTP_VERSION_1_0 and HTTP_VERSION_1_1."
        },
        "ResponseBody": {
            "type": "string",
            "description": "If response body is specified, healthcheck HTTP response body is matched against the specified string and server is considered healthy only if there is a match (regular expressions not supported). If response body string is not specified, HTTP healthcheck is considered successful if the HTTP response status code is among configured values."
        },
        "ResponseStatusCodes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "number"
            },
            "description": "HTTP response status code should be a valid HTTP status code."
        },
        "Revision": {
            "type": "number"
        },
        "RiseCount": {
            "type": "number",
            "description": "Number of consecutive checks that must pass before marking it up."
        },
        "Timeout": {
            "type": "number",
            "description": "Number of seconds the target has to respond to the monitor request."
        },
        "RequestHeader": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/RequestHeader"
            }
        },
        "Tag": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Tag"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/Revision"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}