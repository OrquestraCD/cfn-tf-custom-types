{
    "typeName": "Terraform::NSXT::DhcpServerIpPool",
    "description": "CloudFormation equivalent of nsxt_dhcp_server_ip_pool",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "DhcpGenericOption": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Code": {
                    "type": "number"
                },
                "Values": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "Code",
                "Values"
            ]
        },
        "DhcpOption121": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Network": {
                    "type": "string"
                },
                "NextHop": {
                    "type": "string"
                }
            },
            "required": [
                "Network",
                "NextHop"
            ]
        },
        "IpRange": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "End": {
                    "type": "string"
                },
                "Start": {
                    "type": "string"
                }
            },
            "required": [
                "End",
                "Start"
            ]
        },
        "Tag": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Scope": {
                    "type": "string"
                },
                "Tag": {
                    "type": "string"
                }
            },
            "required": [
                "Scope",
                "Tag"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "DisplayName": {
            "type": "string"
        },
        "ErrorThreshold": {
            "type": "number"
        },
        "GatewayIp": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "LeaseTime": {
            "type": "number"
        },
        "LogicalDhcpServerId": {
            "type": "string"
        },
        "Revision": {
            "type": "number"
        },
        "WarningThreshold": {
            "type": "number"
        },
        "DhcpGenericOption": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DhcpGenericOption"
            }
        },
        "DhcpOption121": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DhcpOption121"
            }
        },
        "IpRange": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IpRange"
            }
        },
        "Tag": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Tag"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "LogicalDhcpServerId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Revision"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}