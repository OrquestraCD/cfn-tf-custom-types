{
    "typeName": "Terraform::NewRelic::AlertPolicyChannel",
    "description": "Use this resource to map alert policies to alert channels in New Relic.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/newrelic/Terraform-NewRelic-AlertPolicyChannel/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ChannelId": {
            "type": "number",
            "description": "**Deprecated!** (Optional\\*) The ID of the channel. Please use the `channel_ids` argument instead."
        },
        "ChannelIds": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "number"
            },
            "description": "Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift your Terraform state.\n- `channel_id` - **Deprecated!** (Optional\\*) The ID of the channel. Please use the `channel_ids` argument instead."
        },
        "Id": {
            "type": "string"
        },
        "PolicyId": {
            "type": "number",
            "description": "The ID of the policy.\n- `channel_ids` - (Optional\\*) Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift your Terraform state.\n- `channel_id` - **Deprecated!** (Optional\\*) The ID of the channel. Please use the `channel_ids` argument instead."
        }
    },
    "additionalProperties": false,
    "required": [
        "PolicyId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}