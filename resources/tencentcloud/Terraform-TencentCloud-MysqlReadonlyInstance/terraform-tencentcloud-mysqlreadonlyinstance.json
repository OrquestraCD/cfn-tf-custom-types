{
    "typeName": "Terraform::TencentCloud::MysqlReadonlyInstance",
    "description": "Provides a mysql instance resource to create read-only database instances.\n\n~> **NOTE:** The terminate operation of read only mysql does NOT take effect immediately, maybe takes for several hours. so during that time, VPCs associated with that mysql instance can't be terminated also.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AutoRenewFlag": {
            "type": "number",
            "description": "Auto renew flag. NOTES: Only supported prepay instance."
        },
        "Id": {
            "type": "string"
        },
        "InstanceName": {
            "type": "string",
            "description": "The name of a mysql instance."
        },
        "IntranetIp": {
            "type": "string"
        },
        "IntranetPort": {
            "type": "number",
            "description": "Public access port, rang form 1024 to 65535 and default value is 3306."
        },
        "Locked": {
            "type": "number"
        },
        "MasterInstanceId": {
            "type": "string",
            "description": "Indicates the master instance ID of recovery instances."
        },
        "MemSize": {
            "type": "number",
            "description": "Memory size (in MB)."
        },
        "PayType": {
            "type": "number",
            "description": "Pay type of instance, 0: prepay, 1: postpay. NOTES: Only supported prepay instance."
        },
        "Period": {
            "type": "number",
            "description": "Period of instance. NOTES: Only supported prepay instance."
        },
        "SecurityGroups": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Security groups to use."
        },
        "Status": {
            "type": "number"
        },
        "SubnetId": {
            "type": "string",
            "description": "Private network ID. If vpc_id is set, this value is required."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Instance tags."
        },
        "TaskStatus": {
            "type": "number"
        },
        "VolumeSize": {
            "type": "number",
            "description": "Disk size (in GB)."
        },
        "VpcId": {
            "type": "string",
            "description": "ID of VPC, which can be modified once every 24 hours and can't be removed."
        }
    },
    "additionalProperties": false,
    "required": [
        "InstanceName",
        "MasterInstanceId",
        "MemSize",
        "VolumeSize"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/IntranetIp",
        "/properties/Locked",
        "/properties/Status",
        "/properties/TaskStatus"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}