{
    "typeName": "Terraform::Rundeck::PublicKey",
    "description": "The public key resource allows SSH public keys to be stored into Rundeck's key store.\nThe key store is where Rundeck keeps credentials that are needed to access the nodes on which\nit runs commands.\n\nThis resource also allows the retrieval of an existing public key from the store, so that it\nmay be used in the configuration of other resources such as ``aws_key_pair``.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Delete": {
            "type": "boolean",
            "description": "True if the key should be deleted when the resource is deleted.\nDefaults to true if key_material is provided in the configuration."
        },
        "Id": {
            "type": "string"
        },
        "KeyMaterial": {
            "type": "string",
            "description": "The public key string to store, serialized in any way that is accepted\nby OpenSSH. If this is not included, ``key_material`` becomes an attribute that can be used\nto read the already-existing key material in the Rundeck store."
        },
        "Path": {
            "type": "string",
            "description": "The path within the key store where the key will be stored. By convention\nthis path name normally ends with \".pub\" and otherwise has the same name as the associated\nprivate key."
        },
        "Url": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "Path"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Delete",
        "/properties/Id",
        "/properties/Url"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}