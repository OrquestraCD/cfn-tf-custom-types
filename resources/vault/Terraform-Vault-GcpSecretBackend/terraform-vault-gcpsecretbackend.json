{
    "typeName": "Terraform::Vault::GcpSecretBackend",
    "description": "Creates an GCP Secret Backend for Vault. GCP secret backends can then issue GCP\nOAuth token or Service Account keys, once a role has been added to the backend.\n\n~> **Important** All data provided in the resource configuration will be\nwritten in cleartext to state and plan files generated by Terraform, and\nwill appear in the console output when Terraform runs. Protect these\nartifacts accordingly. See\n[the main provider documentation](../index.html)\nfor more details.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Credentials": {
            "type": "string",
            "description": "The GCP service account credentials in JSON format."
        },
        "DefaultLeaseTtlSeconds": {
            "type": "number",
            "description": "The default TTL for credentials\nissued by this backend. Defaults to '0'."
        },
        "Description": {
            "type": "string",
            "description": "A human-friendly description for this backend."
        },
        "Id": {
            "type": "string"
        },
        "MaxLeaseTtlSeconds": {
            "type": "number",
            "description": "The maximum TTL that can be requested\nfor credentials issued by this backend. Defaults to '0'."
        },
        "Path": {
            "type": "string",
            "description": "The unique path this backend should be mounted at. Must\nnot begin or end with a `/`. Defaults to `gcp`."
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}