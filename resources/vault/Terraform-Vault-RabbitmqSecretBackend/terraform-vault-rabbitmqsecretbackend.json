{
    "typeName": "Terraform::Vault::RabbitmqSecretBackend",
    "description": "Creates an RabbitMQ Secret Backend for Vault. RabbitMQ secret backends can then issue RabbitMQ credentials,\n once a role has been added to the backend.\n\n~> **Important** All data provided in the resource configuration will be\nwritten in cleartext to state and plan files generated by Terraform, and\nwill appear in the console output when Terraform runs. Protect these\nartifacts accordingly. See\n[the main provider documentation](../index.html)\nfor more details.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ConnectionUri": {
            "type": "string",
            "description": "Specifies the RabbitMQ connection URI."
        },
        "DefaultLeaseTtlSeconds": {
            "type": "number",
            "description": "The default TTL for credentials\nissued by this backend."
        },
        "Description": {
            "type": "string",
            "description": "A human-friendly description for this backend."
        },
        "Id": {
            "type": "string"
        },
        "MaxLeaseTtlSeconds": {
            "type": "number",
            "description": "The maximum TTL that can be requested\nfor credentials issued by this backend."
        },
        "Password": {
            "type": "string",
            "description": "Specifies the RabbitMQ management administrator password."
        },
        "Path": {
            "type": "string",
            "description": "The unique path this backend should be mounted at. Must\nnot begin or end with a `/`. Defaults to `aws`."
        },
        "Username": {
            "type": "string",
            "description": "Specifies the RabbitMQ management administrator username."
        },
        "VerifyConnection": {
            "type": "boolean",
            "description": "Specifies whether to verify connection URI, username, and password.\nDefaults to `true`."
        }
    },
    "additionalProperties": false,
    "required": [
        "ConnectionUri",
        "Password",
        "Username"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}