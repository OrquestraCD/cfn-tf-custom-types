{
    "typeName": "Terraform::Gitlab::ProjectPushRules",
    "description": "This resource allows you to create and manage push rules for your GitLab projects.\nFor further information on push rules, consult the [gitlab\ndocumentation](https://docs.gitlab.com/ce/push_rules/push_rules.html#push-rules).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AuthorEmailRegex": {
            "type": "string",
            "description": "All commit author emails must match this regex, e.g. \"@my-company.com$\"."
        },
        "BranchNameRegex": {
            "type": "string",
            "description": "All branch names must match this regex, e.g. \"(feature|hotfix)\\/*\"."
        },
        "CommitMessageRegex": {
            "type": "string",
            "description": "All commit messages must match this regex, e.g. \"Fixed \\d+\\..*\"."
        },
        "DenyDeleteTag": {
            "type": "boolean",
            "description": "Deny deleting a tag."
        },
        "FileNameRegex": {
            "type": "string",
            "description": "All commited filenames must not match this regex, e.g. \"(jar|exe)$\"."
        },
        "Id": {
            "type": "string"
        },
        "MaxFileSize": {
            "type": "number",
            "description": "Maximum file size (MB)."
        },
        "MemberCheck": {
            "type": "boolean",
            "description": "Restrict commits by author (email) to existing GitLab users."
        },
        "PreventSecrets": {
            "type": "boolean",
            "description": "GitLab will reject any files that are likely to contain secrets."
        },
        "Project": {
            "type": "string",
            "description": "The name or id of the project to add the push rules to."
        }
    },
    "additionalProperties": false,
    "required": [
        "Project"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}