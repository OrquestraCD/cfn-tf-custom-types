{
    "typeName": "Terraform::OpenStack::FwFirewallV1",
    "description": "Manages a v1 firewall resource within OpenStack.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdminStateUp": {
            "type": "boolean",
            "description": "Administrative up/down status for the firewall\n(must be \"true\" or \"false\" if provided - defaults to \"true\").\nChanging this updates the `admin_state_up` of an existing firewall."
        },
        "AssociatedRouters": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Router(s) to associate this firewall instance\nwith. Must be a list of strings. Changing this updates the associated routers\nof an existing firewall. Conflicts with `no_routers`."
        },
        "Description": {
            "type": "string",
            "description": "A description for the firewall. Changing this\nupdates the `description` of an existing firewall."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "A name for the firewall. Changing this\nupdates the `name` of an existing firewall."
        },
        "NoRouters": {
            "type": "boolean",
            "description": "Should this firewall not be associated with any routers\n(must be \"true\" or \"false\" if provide - defaults to \"false\").\nConflicts with `associated_routers`."
        },
        "PolicyId": {
            "type": "string",
            "description": "The policy resource id for the firewall. Changing\nthis updates the `policy_id` of an existing firewall."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the v1 networking client.\nA networking client is needed to create a firewall. If omitted, the\n`region` argument of the provider is used. Changing this creates a new\nfirewall."
        },
        "TenantId": {
            "type": "string",
            "description": "The owner of the floating IP. Required if admin wants\nto create a firewall for another tenant. Changing this creates a new\nfirewall."
        },
        "ValueSpecs": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Map of additional options."
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "PolicyId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}