{
    "typeName": "Terraform::OpenStack::NetworkingFloatingipAssociateV2",
    "description": "Associates a floating IP to a port. This is useful for situations\nwhere you have a pre-allocated floating IP or are unable to use the\n`openstack_networking_floatingip_v2` resource to create a floating IP.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/openstack/Terraform-OpenStack-NetworkingFloatingipAssociateV2/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "FixedIp": {
            "type": "string"
        },
        "FloatingIp": {
            "type": "string",
            "description": "IP Address of an existing floating IP."
        },
        "Id": {
            "type": "string"
        },
        "PortId": {
            "type": "string",
            "description": "ID of an existing port with at least one IP address to\nassociate with this floating IP."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the V2 Networking client.\nA Networking client is needed to create a floating IP that can be used with\nanother networking resource, such as a load balancer. If omitted, the\n`region` argument of the provider is used. Changing this creates a new\nfloating IP (which may or may not have a different address)."
        }
    },
    "additionalProperties": false,
    "required": [
        "FloatingIp",
        "PortId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}