{
    "typeName": "Terraform::OpenStack::SharedfilesystemShareV2",
    "description": "Use this resource to configure a share.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/openstack/Terraform-OpenStack-SharedfilesystemShareV2/docs/README.md",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AllMetadata": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            }
        },
        "AvailabilityZone": {
            "type": "string",
            "description": "The share availability zone. Changing this creates a\nnew share."
        },
        "Description": {
            "type": "string",
            "description": "The human-readable description for the share.\nChanging this updates the description of the existing share."
        },
        "ExportLocations": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Path": {
                        "type": "string"
                    },
                    "Preferred": {
                        "type": "string"
                    }
                }
            }
        },
        "HasReplicas": {
            "type": "boolean"
        },
        "Host": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IsPublic": {
            "type": "boolean",
            "description": "The level of visibility for the share. Set to true to make\nshare public. Set to false to make it private. Default value is false. Changing this\nupdates the existing share."
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "One or more metadata key and value pairs as a dictionary of\nstrings."
        },
        "Name": {
            "type": "string",
            "description": "The name of the share. Changing this updates the name\nof the existing share."
        },
        "ProjectId": {
            "type": "string"
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the V2 Shared File System client.\nA Shared File System client is needed to create a share. Changing this\ncreates a new share."
        },
        "ReplicationType": {
            "type": "string"
        },
        "ShareNetworkId": {
            "type": "string",
            "description": "The UUID of a share network where the share server exists\nor will be created. If `share_network_id` is not set and you provide a `snapshot_id`,\nthe share_network_id value from the snapshot is used. Changing this creates a new share."
        },
        "ShareProto": {
            "type": "string",
            "description": "The share protocol - can either be NFS, CIFS,\nCEPHFS, GLUSTERFS, HDFS or MAPRFS. Changing this creates a new share."
        },
        "ShareServerId": {
            "type": "string"
        },
        "ShareType": {
            "type": "string",
            "description": "The share type name. If you omit this parameter, the default\nshare type is used."
        },
        "Size": {
            "type": "number",
            "description": "The share size, in GBs. The requested share size cannot be greater\nthan the allowed GB quota. Changing this resizes the existing share."
        },
        "SnapshotId": {
            "type": "string",
            "description": "The UUID of the share's base snapshot. Changing this creates\na new share."
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "ShareProto",
        "Size"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AllMetadata",
        "/properties/ExportLocations",
        "/properties/HasReplicas",
        "/properties/Host",
        "/properties/Id",
        "/properties/ProjectId",
        "/properties/ReplicationType",
        "/properties/ShareServerId"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}