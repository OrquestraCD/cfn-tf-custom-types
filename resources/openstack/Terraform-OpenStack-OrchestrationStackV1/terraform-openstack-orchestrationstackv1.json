{
    "typeName": "Terraform::OpenStack::OrchestrationStackV1",
    "description": "Manages a V1 stack resource within OpenStack.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Outputs": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Description": {
                    "type": "string"
                },
                "OutputKey": {
                    "type": "string"
                },
                "OutputValue": {
                    "type": "string"
                }
            },
            "required": [
                "OutputKey",
                "OutputValue"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Capabilities": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "CreationTime": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "DisableRollback": {
            "type": "boolean",
            "description": "Enables or disables deletion of all stack\nresources when a stack creation fails. Default is true, meaning all\nresources are not deleted when stack creation fails."
        },
        "EnvironmentOpts": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Environment key/value pairs to associate with\nthe stack which contains details for the environment of the stack.\nAllowed keys: Bin, URL, Files. Changing this updates the existing stack\nEnvironment Opts."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "A unique name for the stack. It must start with an\nalphabetic character. Changing this updates the stack's name."
        },
        "NotificationTopics": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "Parameters": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "User-defined key/value pairs as parameters to pass\nto the template. Changing this updates the existing stack parameters."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to create the stack. If\nomitted, the `region` argument of the provider is used. Changing this\ncreates a new stack."
        },
        "Status": {
            "type": "string"
        },
        "StatusReason": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "A list of tags to assosciate with the Stack."
        },
        "TemplateDescription": {
            "type": "string"
        },
        "TemplateOpts": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Template key/value pairs to associate with the\nstack which contains either the template file or url.\nAllowed keys: Bin, URL, Files. Changing this updates the existing stack\nTemplate Opts."
        },
        "Timeout": {
            "type": "number",
            "description": "The timeout for stack action in minutes."
        },
        "UpdatedTime": {
            "type": "string"
        },
        "Outputs": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Outputs"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "TemplateOpts"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}