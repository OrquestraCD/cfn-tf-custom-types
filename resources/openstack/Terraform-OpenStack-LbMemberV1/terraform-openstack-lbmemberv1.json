{
    "typeName": "Terraform::OpenStack::LbMemberV1",
    "description": "Manages a V1 load balancer member resource within OpenStack.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Address": {
            "type": "string",
            "description": "The IP address of the member. Changing this creates a\nnew member."
        },
        "AdminStateUp": {
            "type": "boolean",
            "description": "The administrative state of the member.\nAcceptable values are 'true' and 'false'. Changing this value updates the\nstate of the existing member."
        },
        "Id": {
            "type": "string"
        },
        "PoolId": {
            "type": "string",
            "description": "The ID of the LB pool. Changing this creates a new\nmember."
        },
        "Port": {
            "type": "number",
            "description": "An integer representing the port on which the member is\nhosted. Changing this creates a new member."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the V2 Networking client.\nA Networking client is needed to create an LB member. If omitted, the\n`region` argument of the provider is used. Changing this creates a new\nLB member."
        },
        "TenantId": {
            "type": "string",
            "description": "The owner of the member. Required if admin wants to\ncreate a member for another tenant. Changing this creates a new member."
        },
        "Weight": {
            "type": "number"
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Address",
        "PoolId",
        "Port"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}