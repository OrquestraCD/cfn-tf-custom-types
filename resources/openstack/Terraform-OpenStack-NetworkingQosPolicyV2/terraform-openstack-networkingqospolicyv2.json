{
    "typeName": "Terraform::OpenStack::NetworkingQosPolicyV2",
    "description": "Manages a V2 Neutron QoS policy resource within OpenStack.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AllTags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "CreatedAt": {
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "The human-readable description for the QoS policy.\nChanging this updates the description of the existing QoS policy."
        },
        "IsDefault": {
            "type": "boolean",
            "description": "Indicates whether the QoS policy is default\nQoS policy or not. Changing this updates the default status of the existing\nQoS policy."
        },
        "Name": {
            "type": "string",
            "description": "The name of the QoS policy. Changing this updates the name of\nthe existing QoS policy."
        },
        "ProjectId": {
            "type": "string",
            "description": "The owner of the QoS policy. Required if admin wants to\ncreate a QoS policy for another project. Changing this creates a new QoS policy."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the V2 Networking client.\nA Networking client is needed to create a Neutron Qos policy. If omitted, the\n`region` argument of the provider is used. Changing this creates a new\nQoS policy."
        },
        "RevisionNumber": {
            "type": "number"
        },
        "Shared": {
            "type": "boolean",
            "description": "Indicates whether this QoS policy is shared across\nall projects. Changing this updates the shared status of the existing\nQoS policy."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A set of string tags for the QoS policy."
        },
        "UpdatedAt": {
            "type": "string"
        },
        "ValueSpecs": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Key": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ]
            },
            "description": "Map of additional options."
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AllTags",
        "/properties/CreatedAt",
        "/properties/RevisionNumber",
        "/properties/UpdatedAt"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}