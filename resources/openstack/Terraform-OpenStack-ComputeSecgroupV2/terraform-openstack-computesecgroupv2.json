{
    "typeName": "Terraform::OpenStack::ComputeSecgroupV2",
    "description": "Manages a V2 security group resource within OpenStack.\n\nPlease note that managing security groups through the OpenStack Compute API\nhas been deprecated. Unless you are using an older OpenStack environment, it is\nrecommended to use the [`openstack_networking_secgroup_v2`](networking_secgroup_v2.html)\nand [`openstack_networking_secgroup_rule_v2`](networking_secgroup_rule_v2.html)\nresources instead, which uses the OpenStack Networking API.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/openstack/Terraform-OpenStack-ComputeSecgroupV2/docs/README.md",
    "definitions": {
        "Rule": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Cidr": {
                    "type": "string",
                    "description": "Required if `from_group_id` or `self` is empty. The IP range\nthat will be the source of network traffic to the security group. Use 0.0.0.0/0\nto allow all IP addresses. Changing this creates a new security group rule. Cannot\nbe combined with `from_group_id` or `self`."
                },
                "FromGroupId": {
                    "type": "string",
                    "description": "Required if `cidr` or `self` is empty. The ID of a\ngroup from which to forward traffic to the parent group. Changing this creates a\nnew security group rule. Cannot be combined with `cidr` or `self`."
                },
                "FromPort": {
                    "type": "number",
                    "description": "An integer representing the lower bound of the port\nrange to open. Changing this creates a new security group rule."
                },
                "IpProtocol": {
                    "type": "string",
                    "description": "The protocol type that will be allowed. Changing\nthis creates a new security group rule."
                },
                "Self": {
                    "type": "boolean",
                    "description": "Required if `cidr` and `from_group_id` is empty. If true,\nthe security group itself will be added as a source to this ingress rule. Cannot\nbe combined with `cidr` or `from_group_id`."
                },
                "ToPort": {
                    "type": "number",
                    "description": "An integer representing the upper bound of the port\nrange to open. Changing this creates a new security group rule."
                }
            },
            "required": [
                "FromPort",
                "IpProtocol",
                "ToPort"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "A description for the security group. Changing this\nupdates the `description` of an existing security group."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "A unique name for the security group. Changing this\nupdates the `name` of an existing security group."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the V2 Compute client.\nA Compute client is needed to create a security group. If omitted, the\n`region` argument of the provider is used. Changing this creates a new\nsecurity group."
        },
        "Rule": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Rule"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Description",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}