{
    "typeName": "Terraform::OpenStack::ComputeFloatingipV2",
    "description": "Manages a V2 floating IP resource within OpenStack Nova (compute)\nthat can be used for compute instances.\n\nPlease note that managing floating IPs through the OpenStack Compute API has\nbeen deprecated. Unless you are using an older OpenStack environment, it is\nrecommended to use the [`openstack_networking_floatingip_v2`](networking_floatingip_v2.html)\nresource instead, which uses the OpenStack Networking API.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Address": {
            "type": "string"
        },
        "FixedIp": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "InstanceId": {
            "type": "string"
        },
        "Pool": {
            "type": "string",
            "description": "The name of the pool from which to obtain the floating\nIP. Changing this creates a new floating IP."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the V2 Compute client.\nA Compute client is needed to create a floating IP that can be used with\na compute instance. If omitted, the `region` argument of the provider\nis used. Changing this creates a new floating IP (which may or may not\nhave a different address)."
        }
    },
    "additionalProperties": false,
    "required": [
        "Pool"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Address",
        "/properties/FixedIp",
        "/properties/Id",
        "/properties/InstanceId"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}