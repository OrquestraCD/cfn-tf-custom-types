{
    "typeName": "Terraform::OpenStack::NetworkingTrunkV2",
    "description": "Manages a networking V2 trunk resource within OpenStack.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/openstack/Terraform-OpenStack-NetworkingTrunkV2/docs/README.md",
    "definitions": {
        "SubPort": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PortId": {
                    "type": "string",
                    "description": "The ID of the port to be made a subport of the trunk."
                },
                "SegmentationId": {
                    "type": "number",
                    "description": "The numeric id of the subport segment."
                },
                "SegmentationType": {
                    "type": "string",
                    "description": "The segmentation technology to use, e.g., \"vlan\"."
                }
            },
            "required": [
                "PortId",
                "SegmentationId",
                "SegmentationType"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdminStateUp": {
            "type": "boolean",
            "description": "Administrative up/down status for the trunk\n(must be \"true\" or \"false\" if provided). Changing this updates the\n`admin_state_up` of an existing trunk."
        },
        "AllTags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "Description": {
            "type": "string",
            "description": "Human-readable description of the trunk. Changing this\nupdates the name of the existing trunk."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "A unique name for the trunk. Changing this\nupdates the `name` of an existing trunk."
        },
        "PortId": {
            "type": "string",
            "description": "The ID of the port to be used as the parent port of the\ntrunk. This is the port that should be used as the compute instance network\nport. Changing this creates a new trunk."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the V2 networking client.\nA networking client is needed to create a trunk. If omitted, the\n`region` argument of the provider is used. Changing this creates a new\ntrunk."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A set of string tags for the port."
        },
        "TenantId": {
            "type": "string",
            "description": "The owner of the Trunk. Required if admin wants\nto create a trunk on behalf of another tenant. Changing this creates a new trunk."
        },
        "SubPort": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/SubPort"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "PortId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AllTags",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}