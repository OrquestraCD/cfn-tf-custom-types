{
    "typeName": "Terraform::FlexibleEngine::NetworkingSubnetV2",
    "description": "CloudFormation equivalent of flexibleengine_networking_subnet_v2",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "AllocationPools": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "End": {
                    "type": "string"
                },
                "Start": {
                    "type": "string"
                }
            },
            "required": [
                "End",
                "Start"
            ]
        },
        "HostRoutes": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DestinationCidr": {
                    "type": "string"
                },
                "NextHop": {
                    "type": "string"
                }
            },
            "required": [
                "DestinationCidr",
                "NextHop"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Cidr": {
            "type": "string"
        },
        "DnsNameservers": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "EnableDhcp": {
            "type": "boolean"
        },
        "GatewayIp": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IpVersion": {
            "type": "number"
        },
        "Name": {
            "type": "string"
        },
        "NetworkId": {
            "type": "string"
        },
        "NoGateway": {
            "type": "boolean"
        },
        "Region": {
            "type": "string"
        },
        "TenantId": {
            "type": "string"
        },
        "ValueSpecs": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Key": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ]
            }
        },
        "AllocationPools": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AllocationPools"
            }
        },
        "HostRoutes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HostRoutes"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Cidr",
        "NetworkId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}