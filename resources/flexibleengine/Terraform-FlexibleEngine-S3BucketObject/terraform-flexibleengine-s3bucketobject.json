{
    "typeName": "Terraform::FlexibleEngine::S3BucketObject",
    "description": "Provides a S3 bucket object resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/flexibleengine/Terraform-FlexibleEngine-S3BucketObject/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Acl": {
            "type": "string",
            "description": "The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to \"private\"."
        },
        "Bucket": {
            "type": "string",
            "description": "The name of the bucket to put the file in."
        },
        "CacheControl": {
            "type": "string",
            "description": "Specifies caching behavior along the request/reply chain Read [w3c cache_control](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9) for further details."
        },
        "Content": {
            "type": "string",
            "description": "The literal content being uploaded to the bucket."
        },
        "ContentDisposition": {
            "type": "string",
            "description": "Specifies presentational information for the object. Read [wc3 content_disposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) for further information."
        },
        "ContentEncoding": {
            "type": "string",
            "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [w3c content encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) for further information."
        },
        "ContentLanguage": {
            "type": "string",
            "description": "The language the content is in e.g. en-US or en-GB."
        },
        "ContentType": {
            "type": "string",
            "description": "A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input."
        },
        "Etag": {
            "type": "string",
            "description": "Used to trigger updates. The only meaningful value is `${md5(file(\"path/to/file\"))}`.\nThis attribute is not compatible with `kms_key_id`."
        },
        "Id": {
            "type": "string"
        },
        "Key": {
            "type": "string",
            "description": "The name of the object once it is in the bucket."
        },
        "ServerSideEncryption": {
            "type": "string",
            "description": "Specifies server-side encryption of the object in S3. Valid values are \"`AES256`\" and \"`aws:kms`\"."
        },
        "Source": {
            "type": "string",
            "description": "The path to the source file being uploaded to the bucket."
        },
        "VersionId": {
            "type": "string"
        },
        "WebsiteRedirect": {
            "type": "string",
            "description": "Specifies a target URL for [website redirect](http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html)."
        }
    },
    "additionalProperties": false,
    "required": [
        "Bucket",
        "Key"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/VersionId"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}