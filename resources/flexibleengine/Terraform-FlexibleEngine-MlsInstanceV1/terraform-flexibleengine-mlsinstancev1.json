{
    "typeName": "Terraform::FlexibleEngine::MlsInstanceV1",
    "description": "Manages mls instance resource within FlexibleEngine",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/flexibleengine/Terraform-FlexibleEngine-MlsInstanceV1/docs/README.md",
    "definitions": {
        "MrsCluster": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "string",
                    "description": "Specifies the ID of the MRS cluster. Changing this creates a new instance."
                },
                "UserName": {
                    "type": "string",
                    "description": "Specifies the MRS cluster username. This parameter is mandatory\nonly when the MRS cluster is in the security mode. Changing this creates a new instance."
                },
                "UserPassword": {
                    "type": "string",
                    "description": "Specifies the password of the MRS cluster user. The password\nand username work in a pair. Changing this creates a new instance."
                }
            },
            "required": [
                "Id"
            ]
        },
        "Network": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AvailableZone": {
                    "type": "string",
                    "description": "Specifies the AZ of the instance.\nChanging this creates a new instance."
                },
                "SecurityGroup": {
                    "type": "string",
                    "description": "Specifies the ID of the security group of the instance.\nChanging this creates a new instance."
                },
                "SubnetId": {
                    "type": "string",
                    "description": "Specifies the ID of the subnet where the instance resides.\nChanging this creates a new instance."
                },
                "VpcId": {
                    "type": "string",
                    "description": "Specifies the ID of the virtual private cloud (VPC) where the\ninstance resides. Changing this creates a new instance."
                },
                "PublicIp": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/PublicIp"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": [
                "AvailableZone",
                "SubnetId",
                "VpcId"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        },
        "PublicIp": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BindType": {
                    "type": "string",
                    "description": "Specifies the bind type. Possible values: `auto_assign` and\n`not_use`. Changing this creates a new instance."
                },
                "EipId": {
                    "type": "string"
                }
            },
            "required": [
                "BindType"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Agency": {
            "type": "string",
            "description": "Specifies the agency name. This parameter is mandatory only\nwhen you bind an instance to an elastic IP address (EIP). An instance must be\nbound to an EIP to grant MLS rights to abtain a tenant's token. NOTE: The tenant\nmust create an agency on the Identity and Access Management (IAM) interface in\nadvance. Changing this creates a new instance."
        },
        "Created": {
            "type": "string"
        },
        "Flavor": {
            "type": "string",
            "description": "Specifies the instance flavor, only `mls.c2.2xlarge.common`\nis supported now. Changing this creates a new instance."
        },
        "Id": {
            "type": "string"
        },
        "InnerEndpoint": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Specifies the MLS instance name. The DB instance name of\nthe same type is unique in the same tenant. Changing this creates a new instance."
        },
        "PublicEndpoint": {
            "type": "string"
        },
        "Region": {
            "type": "string",
            "description": "The region in which to create the MLS instance. If\nomitted, the `region` argument of the provider is used. Changing this\ncreates a new instance."
        },
        "Status": {
            "type": "string"
        },
        "Updated": {
            "type": "string"
        },
        "Version": {
            "type": "string",
            "description": "Specifies MLS Software version, only `1.2.0` is supported\nnow. Changing this creates a new instance."
        },
        "MrsCluster": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MrsCluster"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Network": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Network"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        },
        "PublicIp": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PublicIp"
            },
            "maxItems": 1,
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Flavor",
        "Name",
        "Version"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}