{
    "typeName": "Terraform::FlexibleEngine::S3Bucket",
    "description": "Provides a S3 bucket resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "CorsRule": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AllowedHeaders": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "AllowedMethods": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "AllowedOrigins": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "ExposeHeaders": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "MaxAgeSeconds": {
                    "type": "number"
                }
            },
            "required": [
                "AllowedMethods",
                "AllowedOrigins"
            ]
        },
        "LifecycleRule": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AbortIncompleteMultipartUploadDays": {
                    "type": "number"
                },
                "Enabled": {
                    "type": "boolean",
                    "description": "Specifies lifecycle rule status."
                },
                "Id": {
                    "type": "string",
                    "description": "Unique identifier for the rule."
                },
                "Prefix": {
                    "type": "string",
                    "description": "Object key prefix identifying one or more objects to which the rule applies."
                },
                "Expiration": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/Expiration"
                    }
                },
                "NoncurrentVersionExpiration": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/NoncurrentVersionExpiration"
                    }
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "Logging": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "TargetBucket": {
                    "type": "string",
                    "description": "The name of the bucket that will receive the log objects."
                },
                "TargetPrefix": {
                    "type": "string",
                    "description": "To specify a key prefix for log objects."
                }
            },
            "required": [
                "TargetBucket"
            ]
        },
        "Versioning": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket."
                },
                "MfaDelete": {
                    "type": "boolean",
                    "description": "Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`."
                }
            },
            "required": []
        },
        "Website": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ErrorDocument": {
                    "type": "string",
                    "description": "An absolute path to the document to return in case of a 4XX error."
                },
                "IndexDocument": {
                    "type": "string",
                    "description": "Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders."
                },
                "RedirectAllRequestsTo": {
                    "type": "string",
                    "description": "A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request."
                },
                "RoutingRules": {
                    "type": "string",
                    "description": "A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)\ndescribing redirect behavior and when redirects are applied."
                }
            },
            "required": []
        },
        "Expiration": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Date": {
                    "type": "string"
                },
                "Days": {
                    "type": "number"
                },
                "ExpiredObjectDeleteMarker": {
                    "type": "boolean"
                }
            },
            "required": []
        },
        "NoncurrentVersionExpiration": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Days": {
                    "type": "number"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Acl": {
            "type": "string",
            "description": "The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to \"private\"."
        },
        "Arn": {
            "type": "string"
        },
        "Bucket": {
            "type": "string",
            "description": "The name of the bucket. If omitted, Terraform will assign a random, unique name."
        },
        "BucketDomainName": {
            "type": "string"
        },
        "BucketPrefix": {
            "type": "string",
            "description": "Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`."
        },
        "ForceDestroy": {
            "type": "boolean",
            "description": "A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable."
        },
        "HostedZoneId": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Policy": {
            "type": "string",
            "description": "A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a `terraform plan`. In this case, please make sure you use the verbose/specific version of the policy."
        },
        "Region": {
            "type": "string",
            "description": "If specified, the region this bucket should reside in. Otherwise, the region used by the callee."
        },
        "WebsiteDomain": {
            "type": "string"
        },
        "WebsiteEndpoint": {
            "type": "string"
        },
        "CorsRule": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CorsRule"
            }
        },
        "LifecycleRule": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LifecycleRule"
            }
        },
        "Logging": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Logging"
            }
        },
        "Versioning": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Versioning"
            },
            "maxItems": 1
        },
        "Website": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Website"
            }
        },
        "Expiration": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Expiration"
            }
        },
        "NoncurrentVersionExpiration": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/NoncurrentVersionExpiration"
            }
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/BucketDomainName",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}