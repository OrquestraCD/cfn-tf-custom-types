{
    "typeName": "Terraform::FlexibleEngine::FwPolicyV2",
    "description": "Manages a v2 firewall policy resource within FlexibleEngine.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Audited": {
            "type": "boolean",
            "description": "Audit status of the firewall policy\n(must be \"true\" or \"false\" if provided - defaults to \"false\").\nThis status is set to \"false\" whenever the firewall policy or any of its\nrules are changed. Changing this updates the `audited` status of an existing\nfirewall policy."
        },
        "Description": {
            "type": "string",
            "description": "A description for the firewall policy. Changing\nthis updates the `description` of an existing firewall policy."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "A name for the firewall policy. Changing this\nupdates the `name` of an existing firewall policy."
        },
        "Region": {
            "type": "string",
            "description": "The region in which to obtain the v2 networking client.\nA networking client is needed to create a firewall policy. If omitted, the\n`region` argument of the provider is used. Changing this creates a new\nfirewall policy."
        },
        "Rules": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "An array of one or more firewall rules that comprise\nthe policy. Changing this results in adding/removing rules from the\nexisting firewall policy."
        },
        "Shared": {
            "type": "boolean",
            "description": "Sharing status of the firewall policy (must be \"true\"\nor \"false\" if provided). If this is \"true\" the policy is visible to, and\ncan be used in, firewalls in other tenants. Changing this updates the\n`shared` status of an existing firewall policy. Only administrative users\ncan specify if the policy should be shared."
        },
        "TenantId": {
            "type": "string"
        },
        "ValueSpecs": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Map of additional options."
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}