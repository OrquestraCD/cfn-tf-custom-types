{
    "typeName": "Terraform::AWS::VpcEndpoint",
    "description": "Provides a VPC Endpoint resource.\n\n~> **NOTE on VPC Endpoints and VPC Endpoint Associations:** Terraform provides both standalone VPC Endpoint Associations for\n[Route Tables](vpc_endpoint_route_table_association.html) - (an association between a VPC endpoint and a single `route_table_id`) and\n[Subnets](vpc_endpoint_subnet_association.html) - (an association between a VPC endpoint and a single `subnet_id`) and\na VPC Endpoint resource with `route_table_ids` and `subnet_ids` attributes.\nDo not use the same resource ID in both a VPC Endpoint resource and a VPC Endpoint Association resource.\nDoing so will cause a conflict of associations and will overwrite the association.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AutoAccept": {
            "type": "boolean",
            "description": "Accept the VPC endpoint (the VPC endpoint and service need to be in the same AWS account)."
        },
        "CidrBlocks": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "DnsEntry": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "DnsName": {
                        "type": "string"
                    },
                    "HostedZoneId": {
                        "type": "string"
                    }
                }
            }
        },
        "Id": {
            "type": "string"
        },
        "NetworkInterfaceIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "OwnerId": {
            "type": "string"
        },
        "Policy": {
            "type": "string",
            "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)."
        },
        "PrefixListId": {
            "type": "string"
        },
        "PrivateDnsEnabled": {
            "type": "boolean",
            "description": "Whether or not to associate a private hosted zone with the specified VPC. Applicable for endpoints of type `Interface`.\nDefaults to `false`."
        },
        "RequesterManaged": {
            "type": "boolean"
        },
        "RouteTableIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "One or more route table IDs. Applicable for endpoints of type `Gateway`."
        },
        "SecurityGroupIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The ID of one or more security groups to associate with the network interface. Required for endpoints of type `Interface`."
        },
        "ServiceName": {
            "type": "string",
            "description": "The service name. For AWS services the service name is usually in the form `com.amazonaws.<region>.<service>` (the SageMaker Notebook service is an exception to this rule, the service name is in the form `aws.sagemaker.<region>.notebook`)."
        },
        "State": {
            "type": "string"
        },
        "SubnetIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The ID of one or more subnets in which to create a network interface for the endpoint. Applicable for endpoints of type `Interface`."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "VpcEndpointType": {
            "type": "string",
            "description": "The VPC endpoint type, `Gateway` or `Interface`. Defaults to `Gateway`."
        },
        "VpcId": {
            "type": "string",
            "description": "The ID of the VPC in which the endpoint will be used."
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "ServiceName",
        "VpcId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CidrBlocks",
        "/properties/DnsEntry",
        "/properties/Id",
        "/properties/NetworkInterfaceIds",
        "/properties/OwnerId",
        "/properties/PrefixListId",
        "/properties/RequesterManaged",
        "/properties/State"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "*"
            ]
        },
        "read": {
            "permissions": [
                "*"
            ]
        },
        "update": {
            "permissions": [
                "*"
            ]
        },
        "delete": {
            "permissions": [
                "*"
            ]
        },
        "list": {
            "permissions": [
                "*"
            ]
        }
    }
}