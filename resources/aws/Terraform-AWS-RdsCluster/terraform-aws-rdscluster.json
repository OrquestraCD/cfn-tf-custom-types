{
    "typeName": "Terraform::AWS::RdsCluster",
    "description": "Manages a [RDS Aurora Cluster][2]. To manage cluster instances that inherit configuration from the cluster (when not running the cluster in `serverless` engine mode), see the [`aws_rds_cluster_instance` resource](/docs/providers/aws/r/rds_cluster_instance.html). To manage non-Aurora databases (e.g. MySQL, PostgreSQL, SQL Server, etc.), see the [`aws_db_instance` resource](/docs/providers/aws/r/db_instance.html).\n\nFor information on the difference between the available Aurora MySQL engines\nsee [Comparison between Aurora MySQL 1 and Aurora MySQL 2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Updates.20180206.html)\nin the Amazon RDS User Guide.\n\nChanges to a RDS Cluster can occur when you manually change a\nparameter, such as `port`, and are reflected in the next maintenance\nwindow. Because of this, Terraform may report a difference in its planning\nphase because a modification has not yet taken place. You can use the\n`apply_immediately` flag to instruct the service to apply the change immediately\n(see documentation below).\n\n~> **Note:** using `apply_immediately` can result in a\nbrief downtime as the server reboots. See the AWS Docs on [RDS Maintenance][4]\nfor more information.\n\n~> **Note:** All arguments including the username and password will be stored in the raw state as plain-text.\n[Read more about sensitive data in state](/docs/state/sensitive-data.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "S3Import": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BucketName": {
                    "type": "string"
                },
                "BucketPrefix": {
                    "type": "string"
                },
                "IngestionRole": {
                    "type": "string"
                },
                "SourceEngine": {
                    "type": "string"
                },
                "SourceEngineVersion": {
                    "type": "string"
                }
            },
            "required": [
                "BucketName",
                "IngestionRole",
                "SourceEngine",
                "SourceEngineVersion"
            ]
        },
        "ScalingConfiguration": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AutoPause": {
                    "type": "boolean"
                },
                "MaxCapacity": {
                    "type": "number"
                },
                "MinCapacity": {
                    "type": "number"
                },
                "SecondsUntilAutoPause": {
                    "type": "number"
                },
                "TimeoutAction": {
                    "type": "string"
                }
            },
            "required": []
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ApplyImmediately": {
            "type": "boolean",
            "description": "Specifies whether any cluster modifications\nare applied immediately, or during the next maintenance window. Default is\n`false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)."
        },
        "Arn": {
            "type": "string"
        },
        "AvailabilityZones": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next Terraform apply. It is recommended to specify 3 AZs or use [the `lifecycle` configuration block `ignore_changes` argument](/docs/configuration/resources.html#ignore_changes) if necessary."
        },
        "BacktrackWindow": {
            "type": "number",
            "description": "The target backtrack window, in seconds. Only available for `aurora` engine currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)."
        },
        "BackupRetentionPeriod": {
            "type": "number",
            "description": "The days to retain backups for. Default `1`."
        },
        "ClusterIdentifier": {
            "type": "string",
            "description": "The cluster identifier. If omitted, Terraform will assign a random, unique identifier."
        },
        "ClusterIdentifierPrefix": {
            "type": "string",
            "description": "Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`."
        },
        "ClusterMembers": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "ClusterResourceId": {
            "type": "string"
        },
        "CopyTagsToSnapshot": {
            "type": "boolean"
        },
        "DatabaseName": {
            "type": "string",
            "description": "Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints][5]."
        },
        "DbClusterParameterGroupName": {
            "type": "string",
            "description": "A cluster parameter group to associate with the cluster."
        },
        "DbSubnetGroupName": {
            "type": "string",
            "description": "A DB subnet group to associate with this DB instance. **NOTE:** This must match the `db_subnet_group_name` specified on every [`aws_rds_cluster_instance`](/docs/providers/aws/r/rds_cluster_instance.html) in the cluster."
        },
        "DeletionProtection": {
            "type": "boolean",
            "description": "If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`."
        },
        "EnableHttpEndpoint": {
            "type": "boolean",
            "description": "Enable HTTP endpoint (data API). Only valid when `engine_mode` is set to `serverless`."
        },
        "EnabledCloudwatchLogsExports": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "List of log types to export to cloudwatch. If omitted, no logs will be exported.\nThe following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL)."
        },
        "Endpoint": {
            "type": "string"
        },
        "Engine": {
            "type": "string",
            "description": "The name of the database engine to be used for this DB cluster. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`."
        },
        "EngineMode": {
            "type": "string",
            "description": "The database engine mode. Valid values: `global`, `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`."
        },
        "EngineVersion": {
            "type": "string",
            "description": "The database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`."
        },
        "FinalSnapshotIdentifier": {
            "type": "string",
            "description": "The name of your final DB snapshot\nwhen this DB cluster is deleted. If omitted, no final snapshot will be\nmade."
        },
        "GlobalClusterIdentifier": {
            "type": "string",
            "description": "The global cluster identifier specified on [`aws_rds_global_cluster`](/docs/providers/aws/r/rds_global_cluster.html)."
        },
        "HostedZoneId": {
            "type": "string"
        },
        "IamDatabaseAuthenticationEnabled": {
            "type": "boolean",
            "description": "Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations."
        },
        "IamRoles": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A List of ARNs for the IAM roles to associate to the RDS Cluster."
        },
        "Id": {
            "type": "string"
        },
        "KmsKeyId": {
            "type": "string",
            "description": "The ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true."
        },
        "MasterPassword": {
            "type": "string",
            "description": "Password for the master DB user. Note that this may\nshow up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints][5]."
        },
        "MasterUsername": {
            "type": "string",
            "description": "Username for the master DB user. Please refer to the [RDS Naming Constraints][5]. This argument does not support in-place updates and cannot be changed during a restore from snapshot."
        },
        "Port": {
            "type": "number",
            "description": "The port on which the DB accepts connections."
        },
        "PreferredBackupWindow": {
            "type": "string",
            "description": "The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC\nDefault: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00."
        },
        "PreferredMaintenanceWindow": {
            "type": "string",
            "description": "The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30."
        },
        "ReaderEndpoint": {
            "type": "string"
        },
        "ReplicationSourceIdentifier": {
            "type": "string",
            "description": "ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica."
        },
        "SkipFinalSnapshot": {
            "type": "boolean",
            "description": "Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`."
        },
        "SnapshotIdentifier": {
            "type": "string",
            "description": "Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot."
        },
        "SourceRegion": {
            "type": "string",
            "description": "The source region for an encrypted replica DB cluster."
        },
        "StorageEncrypted": {
            "type": "boolean",
            "description": "Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engine_mode` and `true` for `serverless` `engine_mode`."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the DB cluster."
        },
        "VpcSecurityGroupIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of VPC security groups to associate\nwith the Cluster."
        },
        "S3Import": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/S3Import"
            },
            "maxItems": 1
        },
        "ScalingConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ScalingConfiguration"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/ClusterResourceId",
        "/properties/Endpoint",
        "/properties/HostedZoneId",
        "/properties/Id",
        "/properties/ReaderEndpoint"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "*"
            ]
        },
        "read": {
            "permissions": [
                "*"
            ]
        },
        "update": {
            "permissions": [
                "*"
            ]
        },
        "delete": {
            "permissions": [
                "*"
            ]
        },
        "list": {
            "permissions": [
                "*"
            ]
        }
    }
}