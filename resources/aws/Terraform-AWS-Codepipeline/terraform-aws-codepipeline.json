{
    "typeName": "Terraform::AWS::Codepipeline",
    "description": "Provides a CodePipeline.\n\n~> **NOTE on `aws_codepipeline`:** - the `GITHUB_TOKEN` environment variable must be set if the GitHub provider is specified.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/aws/Terraform-AWS-Codepipeline/docs/README.md",
    "definitions": {
        "ArtifactStore": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Location": {
                    "type": "string",
                    "description": "The location where AWS CodePipeline stores artifacts for a pipeline, such as an S3 bucket."
                },
                "Type": {
                    "type": "string",
                    "description": "The type of the artifact store, such as Amazon S3."
                },
                "EncryptionKey": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/EncryptionKey"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Location",
                "Type"
            ]
        },
        "Stage": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "The name of the stage."
                },
                "Action": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Action"
                    },
                    "minItems": 1
                }
            },
            "required": [
                "Name"
            ]
        },
        "EncryptionKey": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "string",
                    "description": "The KMS key ARN or ID."
                },
                "Type": {
                    "type": "string",
                    "description": "The type of key; currently only `KMS` is supported."
                }
            },
            "required": [
                "Id",
                "Type"
            ]
        },
        "Action": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Category": {
                    "type": "string",
                    "description": "A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`."
                },
                "Configuration": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "MapKey": {
                                "type": "string"
                            },
                            "MapValue": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "MapKey",
                            "MapValue"
                        ]
                    },
                    "description": "A Map of the action declaration's configuration. Find out more about configuring action configurations in the [Reference Pipeline Structure documentation](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements)."
                },
                "InputArtifacts": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of artifact names to be worked on."
                },
                "Name": {
                    "type": "string",
                    "description": "The action declaration's name."
                },
                "OutputArtifacts": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of artifact names to output. Output artifact names must be unique within a pipeline."
                },
                "Owner": {
                    "type": "string",
                    "description": "The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`."
                },
                "Provider": {
                    "type": "string",
                    "description": "The provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy."
                },
                "RoleArn": {
                    "type": "string",
                    "description": "The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline."
                },
                "RunOrder": {
                    "type": "number",
                    "description": "The order in which actions are run."
                },
                "Version": {
                    "type": "string",
                    "description": "A string that identifies the action type."
                }
            },
            "required": [
                "Category",
                "Name",
                "Owner",
                "Provider",
                "Version"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The name of the pipeline."
        },
        "RoleArn": {
            "type": "string",
            "description": "A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "ArtifactStore": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ArtifactStore"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Stage": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Stage"
            },
            "minItems": 2
        },
        "EncryptionKey": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EncryptionKey"
            },
            "maxItems": 1
        },
        "Action": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Action"
            },
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "RoleArn"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "*"
            ]
        },
        "read": {
            "permissions": [
                "*"
            ]
        },
        "update": {
            "permissions": [
                "*"
            ]
        },
        "delete": {
            "permissions": [
                "*"
            ]
        },
        "list": {
            "permissions": [
                "*"
            ]
        }
    }
}