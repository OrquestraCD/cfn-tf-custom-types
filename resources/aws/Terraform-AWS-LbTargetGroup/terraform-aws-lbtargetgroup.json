{
    "typeName": "Terraform::AWS::LbTargetGroup",
    "description": "Provides a Target Group resource for use with Load Balancer resources.\n\n~> **Note:** `aws_alb_target_group` is known as `aws_lb_target_group`. The functionality is identical.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "HealthCheck": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Indicates whether  health checks are enabled. Defaults to true."
                },
                "HealthyThreshold": {
                    "type": "number",
                    "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy. Defaults to 3."
                },
                "Interval": {
                    "type": "number",
                    "description": "The approximate amount of time, in seconds, between health checks of an individual target. Minimum value 5 seconds, Maximum value 300 seconds. For `lambda` target groups, it needs to be greater as the `timeout` of the underlying `lambda`. Default 30 seconds."
                },
                "Matcher": {
                    "type": "string"
                },
                "Path": {
                    "type": "string",
                    "description": "The destination for the health check request. Applies to Application Load Balancers only (HTTP/HTTPS), not Network Load Balancers (TCP)."
                },
                "Port": {
                    "type": "string",
                    "description": "The port to use to connect with the target. Valid values are either ports 1-65535, or `traffic-port`. Defaults to `traffic-port`."
                },
                "Protocol": {
                    "type": "string",
                    "description": "The protocol to use to connect with the target. Defaults to `HTTP`. Not applicable when `target_type` is `lambda`."
                },
                "Timeout": {
                    "type": "number",
                    "description": "The amount of time, in seconds, during which no response means a failed health check. For Application Load Balancers, the range is 2 to 120 seconds, and the default is 5 seconds for the `instance` target type and 30 seconds for the `lambda` target type. For Network Load Balancers, you cannot set a custom value, and the default is 10 seconds for TCP and HTTPS health checks and 6 seconds for HTTP health checks."
                },
                "UnhealthyThreshold": {
                    "type": "number",
                    "description": "The number of consecutive health check failures required before considering the target unhealthy . For Network Load Balancers, this value must be the same as the `healthy_threshold`. Defaults to 3."
                }
            },
            "required": []
        },
        "Stickiness": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CookieDuration": {
                    "type": "number",
                    "description": "The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds)."
                },
                "Enabled": {
                    "type": "boolean",
                    "description": "Boolean to enable / disable `stickiness`. Default is `true`."
                },
                "Type": {
                    "type": "string",
                    "description": "The type of sticky sessions. The only current possible value is `lb_cookie`."
                }
            },
            "required": [
                "Type"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "ArnSuffix": {
            "type": "string"
        },
        "DeregistrationDelay": {
            "type": "number",
            "description": "The amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused. The range is 0-3600 seconds. The default value is 300 seconds."
        },
        "Id": {
            "type": "string"
        },
        "LambdaMultiValueHeadersEnabled": {
            "type": "boolean",
            "description": "Boolean whether the request and response headers exchanged between the load balancer and the Lambda function include arrays of values or strings. Only applies when `target_type` is `lambda`."
        },
        "LoadBalancingAlgorithmType": {
            "type": "string",
            "description": "Determines how the load balancer selects targets when routing requests. Only applicable for Application Load Balancer Target Groups. The value is `round_robin` or `least_outstanding_requests`. The default is `round_robin`."
        },
        "Name": {
            "type": "string",
            "description": "The name of the target group. If omitted, Terraform will assign a random, unique name."
        },
        "NamePrefix": {
            "type": "string",
            "description": "Creates a unique name beginning with the specified prefix. Conflicts with `name`. Cannot be longer than 6 characters."
        },
        "Port": {
            "type": "number",
            "description": "The port on which targets receive traffic, unless overridden when registering a specific target. Required when `target_type` is `instance` or `ip`. Does not apply when `target_type` is `lambda`."
        },
        "Protocol": {
            "type": "string",
            "description": "The protocol to use for routing traffic to the targets. Should be one of \"TCP\", \"TLS\", \"UDP\", \"TCP_UDP\", \"HTTP\" or \"HTTPS\". Required when `target_type` is `instance` or `ip`. Does not apply when `target_type` is `lambda`."
        },
        "ProxyProtocolV2": {
            "type": "boolean",
            "description": "Boolean to enable / disable support for proxy protocol v2 on Network Load Balancers. See [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#proxy-protocol) for more information."
        },
        "SlowStart": {
            "type": "number",
            "description": "The amount time for targets to warm up before the load balancer sends them a full share of requests. The range is 30-900 seconds or 0 to disable. The default value is 0 seconds."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "TargetType": {
            "type": "string",
            "description": "The type of target that you must specify when registering targets with this target group.\nThe possible values are `instance` (targets are specified by instance ID) or `ip` (targets are specified by IP address) or `lambda` (targets are specified by lambda arn).\nThe default is `instance`. Note that you can't specify targets for a target group using both instance IDs and IP addresses.\nIf the target type is `ip`, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group,\nthe RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10).\nYou can't specify publicly routable IP addresses."
        },
        "VpcId": {
            "type": "string",
            "description": "The identifier of the VPC in which to create the target group. Required when `target_type` is `instance` or `ip`. Does not apply when `target_type` is `lambda`."
        },
        "HealthCheck": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HealthCheck"
            },
            "maxItems": 1
        },
        "Stickiness": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Stickiness"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/ArnSuffix",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "*"
            ]
        },
        "read": {
            "permissions": [
                "*"
            ]
        },
        "update": {
            "permissions": [
                "*"
            ]
        },
        "delete": {
            "permissions": [
                "*"
            ]
        },
        "list": {
            "permissions": [
                "*"
            ]
        }
    }
}