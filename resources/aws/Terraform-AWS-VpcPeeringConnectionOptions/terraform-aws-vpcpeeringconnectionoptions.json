{
    "typeName": "Terraform::AWS::VpcPeeringConnectionOptions",
    "description": "Provides a resource to manage VPC peering connection options.\n\n~> **NOTE on VPC Peering Connections and VPC Peering Connection Options:** Terraform provides\nboth a standalone VPC Peering Connection Options and a [VPC Peering Connection](vpc_peering_connection.html)\nresource with `accepter` and `requester` attributes. Do not manage options for the same VPC peering\nconnection in both a VPC Peering Connection resource and a VPC Peering Connection Options resource.\nDoing so will cause a conflict of options and will overwrite the options.\nUsing a VPC Peering Connection Options resource decouples management of the connection options from\nmanagement of the VPC Peering Connection and allows options to be set correctly in cross-region and\ncross-account scenarios.\n\nBasic usage:\n\n```hcl\nresource \"aws_vpc\" \"foo\" {\n  cidr_block = \"10.0.0.0/16\"\n}\n\nresource \"aws_vpc\" \"bar\" {\n  cidr_block = \"10.1.0.0/16\"\n}\n\nresource \"aws_vpc_peering_connection\" \"foo\" {\n  vpc_id      = \"${aws_vpc.foo.id}\"\n  peer_vpc_id = \"${aws_vpc.bar.id}\"\n  auto_accept = true\n}\n\nresource \"aws_vpc_peering_connection_options\" \"foo\" {\n  vpc_peering_connection_id = \"${aws_vpc_peering_connection.foo.id}\"\n\n  accepter {\n    allow_remote_vpc_dns_resolution = true\n  }\n\n  requester {\n    allow_vpc_to_remote_classic_link = true\n    allow_classic_link_to_remote_vpc = true\n  }\n}\n```\n\nBasic cross-account usage:\n\n```hcl\nprovider \"aws\" {\n  alias = \"requester\"\n\n  # Requester's credentials.\n}\n\nprovider \"aws\" {\n  alias = \"accepter\"\n\n  # Accepter's credentials.\n}\n\nresource \"aws_vpc\" \"main\" {\n  provider = \"aws.requester\"\n\n  cidr_block = \"10.0.0.0/16\"\n\n  enable_dns_support   = true\n  enable_dns_hostnames = true\n}\n\nresource \"aws_vpc\" \"peer\" {\n  provider = \"aws.accepter\"\n\n  cidr_block = \"10.1.0.0/16\"\n\n  enable_dns_support   = true\n  enable_dns_hostnames = true\n}\n\ndata \"aws_caller_identity\" \"peer\" {\n  provider = \"aws.accepter\"\n}\n\n# Requester's side of the connection.\nresource \"aws_vpc_peering_connection\" \"peer\" {\n  provider = \"aws.requester\"\n\n  vpc_id        = \"${aws_vpc.main.id}\"\n  peer_vpc_id   = \"${aws_vpc.peer.id}\"\n  peer_owner_id = \"${data.aws_caller_identity.peer.account_id}\"\n  auto_accept   = false\n\n  tags = {\n    Side = \"Requester\"\n  }\n}\n\n# Accepter's side of the connection.\nresource \"aws_vpc_peering_connection_accepter\" \"peer\" {\n  provider = \"aws.accepter\"\n\n  vpc_peering_connection_id = \"${aws_vpc_peering_connection.peer.id}\"\n  auto_accept               = true\n\n  tags = {\n    Side = \"Accepter\"\n  }\n}\n\nresource \"aws_vpc_peering_connection_options\" \"requester\" {\n  provider = \"aws.requester\"\n\n  # As options can't be set until the connection has been accepted\n  # create an explicit dependency on the accepter.\n  vpc_peering_connection_id = \"${aws_vpc_peering_connection_accepter.peer.id}\"\n\n  requester {\n    allow_remote_vpc_dns_resolution = true\n  }\n}\n\nresource \"aws_vpc_peering_connection_options\" \"accepter\" {\n  provider = \"aws.accepter\"\n\n  vpc_peering_connection_id = \"${aws_vpc_peering_connection_accepter.peer.id}\"\n\n  accepter {\n    allow_remote_vpc_dns_resolution = true\n  }\n}\n```",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Accepter": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AllowClassicLinkToRemoteVpc": {
                    "type": "boolean"
                },
                "AllowRemoteVpcDnsResolution": {
                    "type": "boolean"
                },
                "AllowVpcToRemoteClassicLink": {
                    "type": "boolean"
                }
            },
            "required": []
        },
        "Requester": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AllowClassicLinkToRemoteVpc": {
                    "type": "boolean"
                },
                "AllowRemoteVpcDnsResolution": {
                    "type": "boolean"
                },
                "AllowVpcToRemoteClassicLink": {
                    "type": "boolean"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "VpcPeeringConnectionId": {
            "type": "string",
            "description": "The ID of the requester VPC peering connection."
        },
        "Accepter": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Accepter"
            },
            "maxItems": 1
        },
        "Requester": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Requester"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "VpcPeeringConnectionId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "*"
            ]
        },
        "read": {
            "permissions": [
                "*"
            ]
        },
        "update": {
            "permissions": [
                "*"
            ]
        },
        "delete": {
            "permissions": [
                "*"
            ]
        },
        "list": {
            "permissions": [
                "*"
            ]
        }
    }
}