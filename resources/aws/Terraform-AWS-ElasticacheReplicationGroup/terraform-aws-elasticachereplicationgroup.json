{
    "typeName": "Terraform::AWS::ElasticacheReplicationGroup",
    "description": "Provides an ElastiCache Replication Group resource.\nFor working with Memcached or single primary Redis instances (Cluster Mode Disabled), see the\n[`aws_elasticache_cluster` resource](/docs/providers/aws/r/elasticache_cluster.html).\n\n~> **Note:** When you change an attribute, such as `engine_version`, by\ndefault the ElastiCache API applies it in the next maintenance window. Because\nof this, Terraform may report a difference in its planning phase because the\nactual modification has not yet taken place. You can use the\n`apply_immediately` flag to instruct the service to apply the change\nimmediately. Using `apply_immediately` can result in a brief downtime as\nservers reboots.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "ClusterMode": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "NumNodeGroups": {
                    "type": "number",
                    "description": "Specify the number of node groups (shards) for this Redis replication group. Changing this number will trigger an online resizing operation before other settings modifications."
                },
                "ReplicasPerNodeGroup": {
                    "type": "number",
                    "description": "Specify the number of replica nodes in each node group. Valid values are 0 to 5. Changing this number will force a new resource."
                }
            },
            "required": [
                "NumNodeGroups",
                "ReplicasPerNodeGroup"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ApplyImmediately": {
            "type": "boolean",
            "description": "Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is `false`."
        },
        "AtRestEncryptionEnabled": {
            "type": "boolean",
            "description": "Whether to enable encryption at rest."
        },
        "AuthToken": {
            "type": "string",
            "description": "The password used to access a password protected server. Can be specified only if `transit_encryption_enabled = true`."
        },
        "AutoMinorVersionUpgrade": {
            "type": "boolean",
            "description": "Specifies whether a minor engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window. Defaults to `true`."
        },
        "AutomaticFailoverEnabled": {
            "type": "boolean",
            "description": "Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If true, Multi-AZ is enabled for this replication group. If false, Multi-AZ is disabled for this replication group. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to `false`."
        },
        "AvailabilityZones": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is not important."
        },
        "ConfigurationEndpointAddress": {
            "type": "string"
        },
        "Engine": {
            "type": "string",
            "description": "The name of the cache engine to be used for the clusters in this replication group. e.g. `redis`."
        },
        "EngineVersion": {
            "type": "string",
            "description": "The version number of the cache engine to be used for the cache clusters in this replication group."
        },
        "Id": {
            "type": "string"
        },
        "KmsKeyId": {
            "type": "string",
            "description": "The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if `at_rest_encryption_enabled = true`."
        },
        "MaintenanceWindow": {
            "type": "string"
        },
        "MemberClusters": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "NodeType": {
            "type": "string",
            "description": "The compute and memory capacity of the nodes in the node group."
        },
        "NotificationTopicArn": {
            "type": "string"
        },
        "NumberCacheClusters": {
            "type": "number",
            "description": "The number of cache clusters (primary and replicas) this replication group will have. If Multi-AZ is enabled, the value of this parameter must be at least 2. Updates will occur before other modifications."
        },
        "ParameterGroupName": {
            "type": "string",
            "description": "The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used."
        },
        "Port": {
            "type": "number"
        },
        "PrimaryEndpointAddress": {
            "type": "string"
        },
        "ReplicationGroupDescription": {
            "type": "string"
        },
        "ReplicationGroupId": {
            "type": "string"
        },
        "SecurityGroupIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud."
        },
        "SecurityGroupNames": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of cache security group names to associate with this replication group."
        },
        "SnapshotArns": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "SnapshotName": {
            "type": "string",
            "description": "The name of a snapshot from which to restore data into the new node group. Changing the `snapshot_name` forces a new resource."
        },
        "SnapshotRetentionLimit": {
            "type": "number",
            "description": "The number of days for which ElastiCache will\nretain automatic cache cluster snapshots before deleting them. For example, if you set\nSnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days\nbefore being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.\nPlease note that setting a `snapshot_retention_limit` is not supported on cache.t1.micro or cache.t2.* cache nodes."
        },
        "SnapshotWindow": {
            "type": "string",
            "description": "The daily time range (in UTC) during which ElastiCache will\nbegin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: `05:00-09:00`."
        },
        "SubnetGroupName": {
            "type": "string",
            "description": "The name of the cache subnet group to be used for the replication group."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "TransitEncryptionEnabled": {
            "type": "boolean",
            "description": "Whether to enable encryption in transit."
        },
        "ClusterMode": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ClusterMode"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "ReplicationGroupDescription",
        "ReplicationGroupId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/ConfigurationEndpointAddress",
        "/properties/Id",
        "/properties/MemberClusters",
        "/properties/PrimaryEndpointAddress"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "*"
            ]
        },
        "read": {
            "permissions": [
                "*"
            ]
        },
        "update": {
            "permissions": [
                "*"
            ]
        },
        "delete": {
            "permissions": [
                "*"
            ]
        },
        "list": {
            "permissions": [
                "*"
            ]
        }
    }
}