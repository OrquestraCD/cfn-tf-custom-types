{
    "typeName": "Terraform::AWS::AppmeshVirtualNode",
    "description": "Provides an AWS App Mesh virtual node resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Spec": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Backends": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "Backend": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/Backend"
                    },
                    "maxItems": 25
                },
                "Listener": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/Listener"
                    },
                    "maxItems": 1
                },
                "Logging": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Logging"
                    },
                    "maxItems": 1
                },
                "ServiceDiscovery": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ServiceDiscovery"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "Backend": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "VirtualService": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/VirtualService"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "Listener": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "HealthCheck": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HealthCheck"
                    },
                    "maxItems": 1
                },
                "PortMapping": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/PortMapping"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": []
        },
        "Logging": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AccessLog": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AccessLog"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "ServiceDiscovery": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AwsCloudMap": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AwsCloudMap"
                    },
                    "maxItems": 1
                },
                "Dns": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Dns"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "VirtualService": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "VirtualServiceName": {
                    "type": "string",
                    "description": "The name of the virtual service that is acting as a virtual node backend."
                }
            },
            "required": [
                "VirtualServiceName"
            ]
        },
        "HealthCheck": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "HealthyThreshold": {
                    "type": "number",
                    "description": "The number of consecutive successful health checks that must occur before declaring listener healthy."
                },
                "IntervalMillis": {
                    "type": "number",
                    "description": "The time period in milliseconds between each health check execution."
                },
                "Path": {
                    "type": "string",
                    "description": "The destination path for the health check request. This is only required if the specified protocol is `http`."
                },
                "Port": {
                    "type": "number",
                    "description": "The destination port for the health check request. This port must match the port defined in the `port_mapping` for the listener."
                },
                "Protocol": {
                    "type": "string",
                    "description": "The protocol for the health check request. Valid values are `http` and `tcp`."
                },
                "TimeoutMillis": {
                    "type": "number",
                    "description": "The amount of time to wait when receiving a response from the health check, in milliseconds."
                },
                "UnhealthyThreshold": {
                    "type": "number",
                    "description": "The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy."
                }
            },
            "required": [
                "HealthyThreshold",
                "IntervalMillis",
                "Protocol",
                "TimeoutMillis",
                "UnhealthyThreshold"
            ]
        },
        "PortMapping": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Port": {
                    "type": "number",
                    "description": "The port used for the port mapping."
                },
                "Protocol": {
                    "type": "string",
                    "description": "The protocol used for the port mapping. Valid values are `http` and `tcp`."
                }
            },
            "required": [
                "Port",
                "Protocol"
            ]
        },
        "AccessLog": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "File": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/File"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "AwsCloudMap": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Attributes": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "MapKey": {
                                "type": "string"
                            },
                            "MapValue": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "MapKey",
                            "MapValue"
                        ]
                    },
                    "description": "A string map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned."
                },
                "NamespaceName": {
                    "type": "string",
                    "description": "The name of the AWS Cloud Map namespace to use.\nUse the [`aws_service_discovery_http_namespace`](/docs/providers/aws/r/service_discovery_http_namespace.html) resource to configure a Cloud Map namespace."
                },
                "ServiceName": {
                    "type": "string",
                    "description": "The name of the AWS Cloud Map service to use. Use the [`aws_service_discovery_service`](/docs/providers/aws/r/service_discovery_service.html) resource to configure a Cloud Map service."
                }
            },
            "required": [
                "NamespaceName",
                "ServiceName"
            ]
        },
        "Dns": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Hostname": {
                    "type": "string",
                    "description": "The DNS host name for your virtual node."
                },
                "ServiceName": {
                    "type": "string"
                }
            },
            "required": [
                "Hostname"
            ]
        },
        "File": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Path": {
                    "type": "string",
                    "description": "The file path to write access logs to. You can use `/dev/stdout` to send access logs to standard out."
                }
            },
            "required": [
                "Path"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "CreatedDate": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "LastUpdatedDate": {
            "type": "string"
        },
        "MeshName": {
            "type": "string",
            "description": "The name of the service mesh in which to create the virtual node."
        },
        "Name": {
            "type": "string",
            "description": "The name to use for the virtual node."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "Spec": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Spec"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Backend": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Backend"
            },
            "maxItems": 25
        },
        "Listener": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Listener"
            },
            "maxItems": 1
        },
        "Logging": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Logging"
            },
            "maxItems": 1
        },
        "ServiceDiscovery": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ServiceDiscovery"
            },
            "maxItems": 1
        },
        "VirtualService": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/VirtualService"
            },
            "maxItems": 1
        },
        "HealthCheck": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HealthCheck"
            },
            "maxItems": 1
        },
        "PortMapping": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PortMapping"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "AccessLog": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AccessLog"
            },
            "maxItems": 1
        },
        "AwsCloudMap": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AwsCloudMap"
            },
            "maxItems": 1
        },
        "Dns": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Dns"
            },
            "maxItems": 1
        },
        "File": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/File"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "MeshName",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Arn",
        "/properties/CreatedDate",
        "/properties/Id",
        "/properties/LastUpdatedDate"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "*"
            ]
        },
        "read": {
            "permissions": [
                "*"
            ]
        },
        "update": {
            "permissions": [
                "*"
            ]
        },
        "delete": {
            "permissions": [
                "*"
            ]
        },
        "list": {
            "permissions": [
                "*"
            ]
        }
    }
}