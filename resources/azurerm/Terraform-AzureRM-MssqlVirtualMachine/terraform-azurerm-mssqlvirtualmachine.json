{
    "typeName": "Terraform::AzureRM::MssqlVirtualMachine",
    "description": "Manages a Microsoft SQL Virtual Machine",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/Terraform-AzureRM-MssqlVirtualMachine/docs/README.md",
    "definitions": {
        "AutoPatching": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DayOfWeek": {
                    "type": "string",
                    "description": "The day of week to apply the patch on."
                },
                "MaintenanceWindowDurationInMinutes": {
                    "type": "number",
                    "description": "The size of the Maintenance Window in minutes."
                },
                "MaintenanceWindowStartingHour": {
                    "type": "number",
                    "description": "The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin."
                }
            },
            "required": [
                "DayOfWeek",
                "MaintenanceWindowDurationInMinutes",
                "MaintenanceWindowStartingHour"
            ]
        },
        "KeyVaultCredential": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "KeyVaultUrl": {
                    "type": "string",
                    "description": "The azure Key Vault url. Changing this forces a new resource to be created."
                },
                "Name": {
                    "type": "string",
                    "description": "The credential name."
                },
                "ServicePrincipalName": {
                    "type": "string",
                    "description": "The service principal name to access key vault. Changing this forces a new resource to be created."
                },
                "ServicePrincipalSecret": {
                    "type": "string",
                    "description": "The service principal name secret to access key vault. Changing this forces a new resource to be created."
                }
            },
            "required": [
                "KeyVaultUrl",
                "Name",
                "ServicePrincipalName",
                "ServicePrincipalSecret"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "RServicesEnabled": {
            "type": "boolean",
            "description": "Should R Services be enabled?."
        },
        "SqlConnectivityPort": {
            "type": "number",
            "description": "The SQL Server port. Defaults to `1433`."
        },
        "SqlConnectivityType": {
            "type": "string",
            "description": "The connectivity type used for this SQL Server. Defaults to `PRIVATE`."
        },
        "SqlConnectivityUpdatePassword": {
            "type": "string",
            "description": "The SQL Server sysadmin login password."
        },
        "SqlConnectivityUpdateUsername": {
            "type": "string",
            "description": "The SQL Server sysadmin login to create."
        },
        "SqlLicenseType": {
            "type": "string",
            "description": "The SQL Server license type. Possible values are `AHUB` (Azure Hybrid Benefit) and `PAYG` (Pay-As-You-Go). Changing this forces a new resource to be created."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "VirtualMachineId": {
            "type": "string",
            "description": "The ID of the Virtual Machine. Changing this forces a new resource to be created."
        },
        "AutoPatching": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AutoPatching"
            },
            "maxItems": 1
        },
        "KeyVaultCredential": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/KeyVaultCredential"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "SqlLicenseType",
        "VirtualMachineId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}