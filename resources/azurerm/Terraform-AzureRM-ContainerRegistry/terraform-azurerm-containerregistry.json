{
    "typeName": "Terraform::AzureRM::ContainerRegistry",
    "description": "Manages an Azure Container Registry.\n\n~> **Note:** All arguments including the access key will be stored in the raw state as plain-text.\n[Read more about sensitive data in state](/docs/state/sensitive-data.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdminEnabled": {
            "type": "boolean",
            "description": "Specifies whether the admin user is enabled. Defaults to `false`."
        },
        "AdminPassword": {
            "type": "string"
        },
        "AdminUsername": {
            "type": "string"
        },
        "GeoreplicationLocations": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of Azure locations where the container registry should be geo-replicated."
        },
        "Id": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created."
        },
        "LoginServer": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the Container Registry. Changing this forces a new resource to be created."
        },
        "NetworkRuleSet": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "DefaultAction": {
                        "type": "string"
                    },
                    "IpRule": {
                        "type": "array",
                        "insertionOrder": true,
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "Action": {
                                    "type": "string"
                                },
                                "IpRange": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "VirtualNetwork": {
                        "type": "array",
                        "insertionOrder": true,
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "Action": {
                                    "type": "string"
                                },
                                "SubnetId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "description": "A `network_rule_set` block as documented below."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the Container Registry. Changing this forces a new resource to be created."
        },
        "Sku": {
            "type": "string",
            "description": "The SKU name of the container registry. Possible values are  `Basic`, `Standard` and `Premium`. `Classic` (which was previously `Basic`) is supported only for existing resources."
        },
        "StorageAccountId": {
            "type": "string",
            "description": "The ID of a Storage Account which must be located in the same Azure Region as the Container Registry."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Location",
        "Name",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AdminPassword",
        "/properties/AdminUsername",
        "/properties/Id",
        "/properties/LoginServer"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}