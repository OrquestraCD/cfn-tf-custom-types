{
    "typeName": "Terraform::AzureRM::EventgridEventSubscription",
    "description": "Manages an EventGrid Event Subscription",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/Terraform-AzureRM-EventgridEventSubscription/docs/README.md",
    "definitions": {
        "EventhubEndpoint": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EventhubId": {
                    "type": "string",
                    "description": "Specifies the id of the eventhub where the Event Subscription will receive events."
                }
            },
            "required": [
                "EventhubId"
            ]
        },
        "HybridConnectionEndpoint": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "HybridConnectionId": {
                    "type": "string",
                    "description": "Specifies the id of the hybrid connection where the Event Subscription will receive events."
                }
            },
            "required": [
                "HybridConnectionId"
            ]
        },
        "RetryPolicy": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EventTimeToLive": {
                    "type": "number",
                    "description": "Specifies the time to live (in minutes) for events."
                },
                "MaxDeliveryAttempts": {
                    "type": "number",
                    "description": "Specifies the maximum number of delivery retry attempts for events."
                }
            },
            "required": [
                "EventTimeToLive",
                "MaxDeliveryAttempts"
            ]
        },
        "StorageBlobDeadLetterDestination": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "StorageAccountId": {
                    "type": "string",
                    "description": "Specifies the id of the storage account id where the storage blob is located."
                },
                "StorageBlobContainerName": {
                    "type": "string",
                    "description": "Specifies the name of the Storage blob container that is the destination of the deadletter events."
                }
            },
            "required": [
                "StorageAccountId",
                "StorageBlobContainerName"
            ]
        },
        "StorageQueueEndpoint": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "QueueName": {
                    "type": "string",
                    "description": "Specifies the name of the storage queue where the Event Subscriptio will receive events."
                },
                "StorageAccountId": {
                    "type": "string",
                    "description": "Specifies the id of the storage account id where the storage queue is located."
                }
            },
            "required": [
                "QueueName",
                "StorageAccountId"
            ]
        },
        "SubjectFilter": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CaseSensitive": {
                    "type": "boolean",
                    "description": "Specifies if `subject_begins_with` and `subject_ends_with` case sensitive. This value defaults to `false`."
                },
                "SubjectBeginsWith": {
                    "type": "string",
                    "description": "A string to filter events for an event subscription based on a resource path prefix."
                },
                "SubjectEndsWith": {
                    "type": "string",
                    "description": "A string to filter events for an event subscription based on a resource path suffix."
                }
            },
            "required": []
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "WebhookEndpoint": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Url": {
                    "type": "string",
                    "description": "Specifies the url of the webhook where the Event Subscription will receive events."
                }
            },
            "required": [
                "Url"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "EventDeliverySchema": {
            "type": "string",
            "description": "Specifies the event delivery schema for the event subscription. Possible values include: `EventGridSchema`, `CloudEventV01Schema`, `CustomInputSchema`."
        },
        "Id": {
            "type": "string"
        },
        "IncludedEventTypes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "A list of applicable event types that need to be part of the event subscription."
        },
        "Labels": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "A list of labels to assign to the event subscription."
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the EventGrid Event Subscription resource. Changing this forces a new resource to be created."
        },
        "Scope": {
            "type": "string",
            "description": "Specifies the scope at which the EventGrid Event Subscription should be created. Changing this forces a new resource to be created."
        },
        "TopicName": {
            "type": "string",
            "description": "Specifies the name of the topic to associate with the event subscription."
        },
        "EventhubEndpoint": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EventhubEndpoint"
            },
            "maxItems": 1
        },
        "HybridConnectionEndpoint": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HybridConnectionEndpoint"
            },
            "maxItems": 1
        },
        "RetryPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RetryPolicy"
            },
            "maxItems": 1
        },
        "StorageBlobDeadLetterDestination": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/StorageBlobDeadLetterDestination"
            },
            "maxItems": 1
        },
        "StorageQueueEndpoint": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/StorageQueueEndpoint"
            },
            "maxItems": 1
        },
        "SubjectFilter": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SubjectFilter"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        },
        "WebhookEndpoint": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/WebhookEndpoint"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "Scope"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}