{
    "typeName": "Terraform::AzureRM::KeyVaultCertificate",
    "description": "Manages a Key Vault Certificate.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Certificate": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Contents": {
                    "type": "string",
                    "description": "The base64-encoded certificate contents. Changing this forces a new resource to be created."
                },
                "Password": {
                    "type": "string",
                    "description": "The password associated with the certificate. Changing this forces a new resource to be created."
                }
            },
            "required": [
                "Contents"
            ]
        },
        "CertificatePolicy": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IssuerParameters": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/IssuerParameters"
                    },
                    "maxItems": 1,
                    "minItems": 1
                },
                "KeyProperties": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/KeyProperties"
                    },
                    "maxItems": 1,
                    "minItems": 1
                },
                "LifetimeAction": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LifetimeAction"
                    }
                },
                "SecretProperties": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SecretProperties"
                    },
                    "maxItems": 1,
                    "minItems": 1
                },
                "X509CertificateProperties": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/X509CertificateProperties"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                }
            },
            "required": []
        },
        "IssuerParameters": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created."
                }
            },
            "required": [
                "Name"
            ]
        },
        "KeyProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Exportable": {
                    "type": "boolean",
                    "description": "Is this Certificate Exportable? Changing this forces a new resource to be created."
                },
                "KeySize": {
                    "type": "number",
                    "description": "The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created."
                },
                "KeyType": {
                    "type": "string",
                    "description": "Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created."
                },
                "ReuseKey": {
                    "type": "boolean",
                    "description": "Is the key reusable? Changing this forces a new resource to be created."
                }
            },
            "required": [
                "Exportable",
                "KeySize",
                "KeyType",
                "ReuseKey"
            ]
        },
        "LifetimeAction": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Action": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Action"
                    },
                    "maxItems": 1,
                    "minItems": 1
                },
                "Trigger": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Trigger"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": []
        },
        "SecretProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ContentType": {
                    "type": "string",
                    "description": "The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created."
                }
            },
            "required": [
                "ContentType"
            ]
        },
        "X509CertificateProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ExtendedKeyUsage": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created."
                },
                "KeyUsage": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created."
                },
                "Subject": {
                    "type": "string",
                    "description": "The Certificate's Subject. Changing this forces a new resource to be created."
                },
                "ValidityInMonths": {
                    "type": "number",
                    "description": "The Certificates Validity Period in Months. Changing this forces a new resource to be created."
                },
                "SubjectAlternativeNames": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SubjectAlternativeNames"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "KeyUsage",
                "Subject",
                "ValidityInMonths"
            ]
        },
        "Action": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ActionType": {
                    "type": "string",
                    "description": "The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created."
                }
            },
            "required": [
                "ActionType"
            ]
        },
        "Trigger": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DaysBeforeExpiry": {
                    "type": "number",
                    "description": "The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetime_percentage`."
                },
                "LifetimePercentage": {
                    "type": "number",
                    "description": "The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `days_before_expiry`."
                }
            },
            "required": []
        },
        "SubjectAlternativeNames": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DnsNames": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created."
                },
                "Emails": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses identified by this Certificate. Changing this forces a new resource to be created."
                },
                "Upns": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created."
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CertificateData": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "KeyVaultId": {
            "type": "string",
            "description": "The ID of the Key Vault where the Certificate should be created."
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the Key Vault Certificate. Changing this forces a new resource to be created."
        },
        "SecretId": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "Thumbprint": {
            "type": "string"
        },
        "Version": {
            "type": "string"
        },
        "Certificate": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Certificate"
            },
            "maxItems": 1
        },
        "CertificatePolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/CertificatePolicy"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        },
        "IssuerParameters": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IssuerParameters"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "KeyProperties": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/KeyProperties"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "LifetimeAction": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LifetimeAction"
            }
        },
        "SecretProperties": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SecretProperties"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "X509CertificateProperties": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/X509CertificateProperties"
            },
            "maxItems": 1
        },
        "Action": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Action"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Trigger": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Trigger"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "SubjectAlternativeNames": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SubjectAlternativeNames"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "KeyVaultId",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CertificateData",
        "/properties/Id",
        "/properties/SecretId",
        "/properties/Thumbprint",
        "/properties/Version"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}