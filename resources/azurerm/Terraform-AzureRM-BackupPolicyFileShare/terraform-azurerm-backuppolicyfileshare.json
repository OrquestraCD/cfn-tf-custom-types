{
    "typeName": "Terraform::AzureRM::BackupPolicyFileShare",
    "description": "Manages an Azure File Share Backup Policy within a Recovery Services vault.\n\n-> **NOTE:** Azure Backup for Azure File Shares is currently in public preview. During the preview, the service is subject to additional limitations and unsupported backup scenarios. [Read More](https://docs.microsoft.com/en-us/azure/backup/backup-azure-files#limitations-for-azure-file-share-backup-during-preview)",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Backup": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Frequency": {
                    "type": "string",
                    "description": "Sets the backup frequency. Currently, only `Daily` is supported."
                },
                "Time": {
                    "type": "string"
                }
            },
            "required": [
                "Frequency",
                "Time"
            ]
        },
        "RetentionDaily": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Count": {
                    "type": "number",
                    "description": "The number of daily backups to keep. Must be between `1` and `180` (inclusive)."
                }
            },
            "required": [
                "Count"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the policy. Changing this forces a new resource to be created."
        },
        "RecoveryVaultName": {
            "type": "string",
            "description": "Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the policy. Changing this forces a new resource to be created."
        },
        "Timezone": {
            "type": "string",
            "description": "Specifies the timezone. Defaults to `UTC`."
        },
        "Backup": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Backup"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "RetentionDaily": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RetentionDaily"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "RecoveryVaultName",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}