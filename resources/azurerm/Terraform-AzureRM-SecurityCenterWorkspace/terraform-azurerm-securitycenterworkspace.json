{
    "typeName": "Terraform::AzureRM::SecurityCenterWorkspace",
    "description": "Manages the subscription's Security Center Workspace.\n\n~> **NOTE:** Owner access permission is required.\n\n~> **NOTE:** The subscription's pricing model can not be `Free` for this to have any affect.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Scope": {
            "type": "string",
            "description": "The scope of VMs to send their security data to the desired workspace, unless overridden by a setting with more specific scope."
        },
        "WorkspaceId": {
            "type": "string",
            "description": "The ID of the Log Analytics Workspace to save the data in."
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Scope",
        "WorkspaceId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}