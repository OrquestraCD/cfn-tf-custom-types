{
    "typeName": "Terraform::AzureRM::MysqlServer",
    "description": "Manages a MySQL Server.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/Terraform-AzureRM-MysqlServer/docs/README.md",
    "definitions": {
        "StorageProfile": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AutoGrow": {
                    "type": "string",
                    "description": "Defines whether autogrow is enabled or disabled for the storage. Valid values are `Enabled` or `Disabled`."
                },
                "BackupRetentionDays": {
                    "type": "number",
                    "description": "Backup retention days for the server, supported values are between `7` and `35` days."
                },
                "GeoRedundantBackup": {
                    "type": "string",
                    "description": "Enable Geo-redundant or not for server backup. Valid values for this property are `Enabled` or `Disabled`, not supported for the `basic` tier."
                },
                "StorageMb": {
                    "type": "number",
                    "description": "Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/mysql/servers/create#StorageProfile)."
                }
            },
            "required": [
                "StorageMb"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdministratorLogin": {
            "type": "string",
            "description": "The Administrator Login for the MySQL Server. Changing this forces a new resource to be created."
        },
        "AdministratorLoginPassword": {
            "type": "string",
            "description": "The Password associated with the `administrator_login` for the MySQL Server."
        },
        "Fqdn": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created."
        },
        "Name": {
            "type": "string",
            "description": "Specifies the name of the MySQL Server. Changing this forces a new resource to be created. This needs to be globally unique within Azure."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The name of the resource group in which to create the MySQL Server. Changing this forces a new resource to be created."
        },
        "SkuName": {
            "type": "string",
            "description": "Specifies the SKU Name for this MySQL Server. The name of the SKU, follows the `tier` + `family` + `cores` pattern (e.g. `B_Gen4_1`, `GP_Gen5_8`). For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/mysql/servers/create#sku)."
        },
        "SslEnforcement": {
            "type": "string",
            "description": "Specifies if SSL should be enforced on connections. Possible values are `Enabled` and `Disabled`."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "Version": {
            "type": "string",
            "description": "Specifies the version of MySQL to use. Valid values are `5.6`, `5.7`, and `8.0`. Changing this forces a new resource to be created."
        },
        "StorageProfile": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/StorageProfile"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "AdministratorLogin",
        "AdministratorLoginPassword",
        "Location",
        "Name",
        "ResourceGroupName",
        "SkuName",
        "SslEnforcement",
        "Version"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Fqdn",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}