{
    "typeName": "Terraform::AzureRM::ApiManagementApi",
    "description": "Manages an API within an API Management Service.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/azurerm/Terraform-AzureRM-ApiManagementApi/docs/README.md",
    "definitions": {
        "Import": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ContentFormat": {
                    "type": "string",
                    "description": "The format of the content from which the API Definition should be imported. Possible values are: `swagger-json`, `swagger-link-json`, `wadl-link-json`, `wadl-xml`, `wsdl` and `wsdl-link`."
                },
                "ContentValue": {
                    "type": "string",
                    "description": "The Content from which the API Definition should be imported. When a `content_format` of `*-link-*` is specified this must be a URL, otherwise this must be defined inline."
                },
                "WsdlSelector": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/WsdlSelector"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "ContentFormat",
                "ContentValue"
            ]
        },
        "SubscriptionKeyParameterNames": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Header": {
                    "type": "string",
                    "description": "The name of the HTTP Header which should be used for the Subscription Key."
                },
                "Query": {
                    "type": "string",
                    "description": "The name of the QueryString parameter which should be used for the Subscription Key."
                }
            },
            "required": [
                "Header",
                "Query"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "WsdlSelector": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EndpointName": {
                    "type": "string",
                    "description": "The name of endpoint (port) to import from WSDL."
                },
                "ServiceName": {
                    "type": "string",
                    "description": "The name of service to import from WSDL."
                }
            },
            "required": [
                "EndpointName",
                "ServiceName"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ApiManagementName": {
            "type": "string",
            "description": "The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created."
        },
        "Description": {
            "type": "string",
            "description": "A description of the API Management API, which may include HTML formatting tags."
        },
        "DisplayName": {
            "type": "string",
            "description": "The display name of the API."
        },
        "Id": {
            "type": "string"
        },
        "IsCurrent": {
            "type": "boolean"
        },
        "IsOnline": {
            "type": "boolean"
        },
        "Name": {
            "type": "string",
            "description": "The name of the API Management API. Changing this forces a new resource to be created."
        },
        "Path": {
            "type": "string",
            "description": "The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of it's resource paths within the API Management Service."
        },
        "Protocols": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of protocols the operations in this API can be invoked. Possible values are `http` and `https`."
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created."
        },
        "Revision": {
            "type": "string",
            "description": "The Revision which used for this API."
        },
        "ServiceUrl": {
            "type": "string",
            "description": "Absolute URL of the backend service implementing this API."
        },
        "SoapPassThrough": {
            "type": "boolean",
            "description": "Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`."
        },
        "Version": {
            "type": "string",
            "description": "The Version number of this API, if this API is versioned."
        },
        "VersionSetId": {
            "type": "string",
            "description": "The ID of the Version Set which this API is associated with."
        },
        "Import": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Import"
            },
            "maxItems": 1
        },
        "SubscriptionKeyParameterNames": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SubscriptionKeyParameterNames"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        },
        "WsdlSelector": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/WsdlSelector"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "ApiManagementName",
        "DisplayName",
        "Name",
        "Path",
        "Protocols",
        "ResourceGroupName",
        "Revision"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/IsCurrent",
        "/properties/IsOnline"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}