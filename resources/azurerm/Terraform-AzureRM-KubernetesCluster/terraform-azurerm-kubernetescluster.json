{
    "typeName": "Terraform::AzureRM::KubernetesCluster",
    "description": "Manages a Managed Kubernetes Cluster (also known as AKS / Azure Kubernetes Service)\n\n~> **Note:** All arguments including the client secret will be stored in the raw state as plain-text. [Read more about sensitive data in state](/docs/state/sensitive-data.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "AddonProfile": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AciConnectorLinux": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AciConnectorLinux"
                    },
                    "maxItems": 1
                },
                "AzurePolicy": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AzurePolicy"
                    },
                    "maxItems": 1
                },
                "HttpApplicationRouting": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HttpApplicationRouting"
                    },
                    "maxItems": 1
                },
                "KubeDashboard": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/KubeDashboard"
                    },
                    "maxItems": 1
                },
                "OmsAgent": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/OmsAgent"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "DefaultNodePool": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AvailabilityZones": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Availability Zones across which the Node Pool should be spread."
                },
                "EnableAutoScaling": {
                    "type": "boolean",
                    "description": "Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler) be enabled for this Node Pool? Defaults to `false`."
                },
                "EnableNodePublicIp": {
                    "type": "boolean",
                    "description": "Should nodes in this Node Pool have a Public IP Address? Defaults to `false`."
                },
                "MaxCount": {
                    "type": "number"
                },
                "MaxPods": {
                    "type": "number",
                    "description": "The maximum number of pods that can run on each agent. Changing this forces a new resource to be created."
                },
                "MinCount": {
                    "type": "number"
                },
                "Name": {
                    "type": "string",
                    "description": "The name which should be used for the default Kubernetes Node Pool. Changing this forces a new resource to be created."
                },
                "NodeCount": {
                    "type": "number"
                },
                "NodeLabels": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "MapKey": {
                                "type": "string"
                            },
                            "MapValue": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "MapKey",
                            "MapValue"
                        ]
                    },
                    "description": "A map of Kubernetes labels which should be applied to nodes in the Default Node Pool."
                },
                "NodeTaints": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`)."
                },
                "OsDiskSizeGb": {
                    "type": "number",
                    "description": "The size of the OS Disk which should be used for each agent in the Node Pool. Changing this forces a new resource to be created."
                },
                "Tags": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "MapKey": {
                                "type": "string"
                            },
                            "MapValue": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "MapKey",
                            "MapValue"
                        ]
                    },
                    "description": "A mapping of tags to assign to the resource."
                },
                "Type": {
                    "type": "string",
                    "description": "The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`."
                },
                "VmSize": {
                    "type": "string",
                    "description": "The size of the Virtual Machine, such as `Standard_DS2_v2`."
                },
                "VnetSubnetId": {
                    "type": "string",
                    "description": "The ID of a Subnet where the Kubernetes Node Pool should exist. Changing this forces a new resource to be created."
                }
            },
            "required": [
                "Name",
                "VmSize"
            ]
        },
        "Identity": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Type": {
                    "type": "string",
                    "description": "The type of identity used for the managed cluster. At this time the only supported value is `SystemAssigned`."
                }
            },
            "required": [
                "Type"
            ]
        },
        "LinuxProfile": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AdminUsername": {
                    "type": "string",
                    "description": "The Admin Username for the Cluster. Changing this forces a new resource to be created."
                },
                "SshKey": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SshKey"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": [
                "AdminUsername"
            ]
        },
        "NetworkProfile": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DnsServiceIp": {
                    "type": "string",
                    "description": "IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). This is required when `network_plugin` is set to `azure`. Changing this forces a new resource to be created."
                },
                "DockerBridgeCidr": {
                    "type": "string",
                    "description": "IP address (in CIDR notation) used as the Docker bridge IP address on nodes. This is required when `network_plugin` is set to `azure`. Changing this forces a new resource to be created."
                },
                "LoadBalancerSku": {
                    "type": "string",
                    "description": "Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `Basic` and `Standard`. Defaults to `Standard`."
                },
                "NetworkPlugin": {
                    "type": "string",
                    "description": "Network plugin to use for networking. Currently supported values are `azure` and `kubenet`. Changing this forces a new resource to be created."
                },
                "NetworkPolicy": {
                    "type": "string",
                    "description": "Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/en-us/azure/aks/use-network-policies). Currently supported values are `calico` and `azure`. Changing this forces a new resource to be created."
                },
                "PodCidr": {
                    "type": "string",
                    "description": "The CIDR to use for pod IP addresses. This field can only be set when `network_plugin` is set to `kubenet`. Changing this forces a new resource to be created."
                },
                "ServiceCidr": {
                    "type": "string",
                    "description": "The Network Range used by the Kubernetes service. This is required when `network_plugin` is set to `azure`. Changing this forces a new resource to be created."
                },
                "LoadBalancerProfile": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/LoadBalancerProfile"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "NetworkPlugin"
            ]
        },
        "RoleBasedAccessControl": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Is Role Based Access Control Enabled? Changing this forces a new resource to be created."
                },
                "AzureActiveDirectory": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AzureActiveDirectory"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "ServicePrincipal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ClientId": {
                    "type": "string",
                    "description": "The Client ID for the Service Principal."
                },
                "ClientSecret": {
                    "type": "string",
                    "description": "The Client Secret for the Service Principal."
                }
            },
            "required": [
                "ClientId",
                "ClientSecret"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "WindowsProfile": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AdminPassword": {
                    "type": "string",
                    "description": "The Admin Password for Windows VMs."
                },
                "AdminUsername": {
                    "type": "string",
                    "description": "The Admin Username for Windows VMs."
                }
            },
            "required": [
                "AdminUsername"
            ]
        },
        "AciConnectorLinux": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                },
                "SubnetName": {
                    "type": "string"
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "AzurePolicy": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Is the Azure Policy for Kubernetes Add On enabled?."
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "HttpApplicationRouting": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "KubeDashboard": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Is the Kubernetes Dashboard enabled?."
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "OmsAgent": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Is the OMS Agent Enabled?."
                },
                "LogAnalyticsWorkspaceId": {
                    "type": "string",
                    "description": "The ID of the Log Analytics Workspace which the OMS Agent should send data to. Must be present if `enabled` is `true`."
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "SshKey": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "KeyData": {
                    "type": "string",
                    "description": "The Public SSH Key used to access the cluster. Changing this forces a new resource to be created."
                }
            },
            "required": [
                "KeyData"
            ]
        },
        "LoadBalancerProfile": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ManagedOutboundIpCount": {
                    "type": "number",
                    "description": "Count of desired managed outbound IPs for the cluster load balancer. Must be in the range of [1, 100]."
                },
                "OutboundIpAddressIds": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer."
                },
                "OutboundIpPrefixIds": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer."
                }
            },
            "required": []
        },
        "AzureActiveDirectory": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ClientAppId": {
                    "type": "string"
                },
                "ServerAppId": {
                    "type": "string"
                },
                "ServerAppSecret": {
                    "type": "string"
                },
                "TenantId": {
                    "type": "string"
                }
            },
            "required": [
                "ClientAppId",
                "ServerAppId",
                "ServerAppSecret"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ApiServerAuthorizedIpRanges": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The IP ranges to whitelist for incoming traffic to the masters."
        },
        "DnsPrefix": {
            "type": "string",
            "description": "DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created."
        },
        "EnablePodSecurityPolicy": {
            "type": "boolean",
            "description": "Whether Pod Security Policies are enabled. Note that this also requires role based access control to be enabled."
        },
        "Fqdn": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "KubeAdminConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "ClientCertificate": {
                        "type": "string"
                    },
                    "ClientKey": {
                        "type": "string"
                    },
                    "ClusterCaCertificate": {
                        "type": "string"
                    },
                    "Host": {
                        "type": "string"
                    },
                    "Password": {
                        "type": "string"
                    },
                    "Username": {
                        "type": "string"
                    }
                }
            }
        },
        "KubeAdminConfigRaw": {
            "type": "string"
        },
        "KubeConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "ClientCertificate": {
                        "type": "string"
                    },
                    "ClientKey": {
                        "type": "string"
                    },
                    "ClusterCaCertificate": {
                        "type": "string"
                    },
                    "Host": {
                        "type": "string"
                    },
                    "Password": {
                        "type": "string"
                    },
                    "Username": {
                        "type": "string"
                    }
                }
            }
        },
        "KubeConfigRaw": {
            "type": "string"
        },
        "KubernetesVersion": {
            "type": "string",
            "description": "Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade)."
        },
        "Location": {
            "type": "string",
            "description": "The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created."
        },
        "Name": {
            "type": "string",
            "description": "The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created."
        },
        "NodeResourceGroup": {
            "type": "string",
            "description": "The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created."
        },
        "PrivateFqdn": {
            "type": "string"
        },
        "PrivateLinkEnabled": {
            "type": "boolean"
        },
        "ResourceGroupName": {
            "type": "string",
            "description": "Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to assign to the resource."
        },
        "AddonProfile": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AddonProfile"
            },
            "maxItems": 1
        },
        "DefaultNodePool": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DefaultNodePool"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Identity": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Identity"
            },
            "maxItems": 1
        },
        "LinuxProfile": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LinuxProfile"
            },
            "maxItems": 1
        },
        "NetworkProfile": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NetworkProfile"
            },
            "maxItems": 1
        },
        "RoleBasedAccessControl": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RoleBasedAccessControl"
            },
            "maxItems": 1
        },
        "ServicePrincipal": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ServicePrincipal"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        },
        "WindowsProfile": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/WindowsProfile"
            },
            "maxItems": 1
        },
        "AciConnectorLinux": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AciConnectorLinux"
            },
            "maxItems": 1
        },
        "AzurePolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AzurePolicy"
            },
            "maxItems": 1
        },
        "HttpApplicationRouting": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HttpApplicationRouting"
            },
            "maxItems": 1
        },
        "KubeDashboard": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/KubeDashboard"
            },
            "maxItems": 1
        },
        "OmsAgent": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/OmsAgent"
            },
            "maxItems": 1
        },
        "SshKey": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SshKey"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "LoadBalancerProfile": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/LoadBalancerProfile"
            },
            "maxItems": 1
        },
        "AzureActiveDirectory": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AzureActiveDirectory"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "DnsPrefix",
        "Location",
        "Name",
        "ResourceGroupName"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Fqdn",
        "/properties/Id",
        "/properties/KubeAdminConfig",
        "/properties/KubeAdminConfigRaw",
        "/properties/KubeConfig",
        "/properties/KubeConfigRaw",
        "/properties/PrivateFqdn"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}