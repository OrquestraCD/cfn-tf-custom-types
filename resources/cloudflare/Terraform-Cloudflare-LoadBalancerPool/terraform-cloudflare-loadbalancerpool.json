{
    "typeName": "Terraform::Cloudflare::LoadBalancerPool",
    "description": "Provides a Cloudflare Load Balancer pool resource. This provides a pool of origins that can be used by a Cloudflare Load Balancer. Note that the load balancing feature must be enabled in your Cloudflare account before you can use this resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/cloudflare/Terraform-Cloudflare-LoadBalancerPool/docs/README.md",
    "definitions": {
        "Origins": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Address": {
                    "type": "string"
                },
                "Enabled": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Weight": {
                    "type": "number"
                }
            },
            "required": [
                "Address",
                "Name"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CheckRegions": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions)."
        },
        "CreatedOn": {
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "Free text description."
        },
        "Enabled": {
            "type": "boolean",
            "description": "Whether to enable (the default) this origin within the Pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool."
        },
        "Id": {
            "type": "string"
        },
        "MinimumOrigins": {
            "type": "number",
            "description": "The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Default: 1."
        },
        "ModifiedOn": {
            "type": "string"
        },
        "Monitor": {
            "type": "string",
            "description": "The ID of the Monitor to use for health checking origins within this pool."
        },
        "Name": {
            "type": "string",
            "description": "A human-identifiable name for the origin."
        },
        "NotificationEmail": {
            "type": "string",
            "description": "The email address to send health status notifications to. This can be an individual mailbox or a mailing list."
        },
        "Origins": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Origins"
            },
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CreatedOn",
        "/properties/Id",
        "/properties/ModifiedOn"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}