{
    "typeName": "Terraform::Datadog::User",
    "description": "Provides a Datadog user resource. This can be used to create and manage Datadog users.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AccessRole": {
            "type": "string",
            "description": "Role description for user. Can be `st` (standard user), `adm` (admin user) or `ro` (read-only user).  Default is `st`."
        },
        "Disabled": {
            "type": "boolean",
            "description": "Whether the user is disabled."
        },
        "Email": {
            "type": "string",
            "description": "Email address for user."
        },
        "Handle": {
            "type": "string",
            "description": "The user handle, must be a valid email."
        },
        "IsAdmin": {
            "type": "boolean",
            "description": "(Optional) Whether the user is an administrator. **Warning**: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan."
        },
        "Name": {
            "type": "string",
            "description": "Name for user."
        },
        "Role": {
            "type": "string",
            "description": "Role description for user. **Warning**: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan."
        },
        "Verified": {
            "type": "boolean"
        }
    },
    "additionalProperties": false,
    "required": [
        "Email",
        "Handle",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Verified"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}