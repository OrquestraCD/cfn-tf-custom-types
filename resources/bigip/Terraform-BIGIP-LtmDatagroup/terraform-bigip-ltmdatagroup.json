{
    "typeName": "Terraform::BIGIP::LtmDatagroup",
    "description": "`bigip_ltm_datagroup` Manages internal (in-line) datagroup configuration\n\nResource should be named with their \"full path\". The full path is the combination of the partition + name of the resource, for example /Common/my-datagroup.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/bigip/Terraform-BIGIP-LtmDatagroup/docs/README.md",
    "definitions": {
        "Record": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Data": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": ", sets the value of the record's `name` attribute, must be of type defined in `type` attribute."
        },
        "Type": {
            "type": "string",
            "description": "datagroup type (applies to the `name` field of the record), supports: `string`, `ip` or `integer`."
        },
        "Record": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Record"
            }
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "Type"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}