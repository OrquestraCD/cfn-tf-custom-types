{
    "typeName": "Terraform::PostgreSQL::Role",
    "description": "The ``postgresql_role`` resource creates and manages a role on a PostgreSQL\nserver.\n\nWhen a ``postgresql_role`` resource is removed, the PostgreSQL ROLE will\nautomatically run a [`REASSIGN\nOWNED`](https://www.postgresql.org/docs/current/static/sql-reassign-owned.html)\nand [`DROP\nOWNED`](https://www.postgresql.org/docs/current/static/sql-drop-owned.html) to\nthe `CURRENT_USER` (normally the connected user for the provider).  If the\nspecified PostgreSQL ROLE owns objects in multiple PostgreSQL databases in the\nsame PostgreSQL Cluster, one PostgreSQL provider per database must be created\nand all but the final ``postgresql_role`` must specify a `skip_drop_role`.\n\n~> **Note:** All arguments including role name and password will be stored in the raw state as plain-text.\n[Read more about sensitive data in state](/docs/state/sensitive-data.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/postgresql/Terraform-PostgreSQL-Role/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "BypassRowLevelSecurity": {
            "type": "boolean",
            "description": "Defines whether a role bypasses every\nrow-level security (RLS) policy.  Default value is `false`."
        },
        "ConnectionLimit": {
            "type": "number",
            "description": "If this role can log in, this specifies how\nmany concurrent connections the role can establish. `-1` (the default) means no\nlimit."
        },
        "CreateDatabase": {
            "type": "boolean",
            "description": "Defines a role's ability to execute `CREATE\nDATABASE`.  Default value is `false`."
        },
        "CreateRole": {
            "type": "boolean",
            "description": "Defines a role's ability to execute `CREATE ROLE`.\nA role with this privilege can also alter and drop other roles.  Default value\nis `false`."
        },
        "Encrypted": {
            "type": "string"
        },
        "EncryptedPassword": {
            "type": "boolean",
            "description": "Defines whether the password is stored\nencrypted in the system catalogs.  Default value is `true`.  NOTE: this value\nis always set (to the conservative and safe value), but may interfere with the\nbehavior of\n[PostgreSQL's `password_encryption` setting](https://www.postgresql.org/docs/current/static/runtime-config-connection.html#GUC-PASSWORD-ENCRYPTION)."
        },
        "Id": {
            "type": "string"
        },
        "Inherit": {
            "type": "boolean",
            "description": "Defines whether a role \"inherits\" the privileges of\nroles it is a member of.  Default value is `true`."
        },
        "Login": {
            "type": "boolean",
            "description": "Defines whether role is allowed to log in.  Roles without\nthis attribute are useful for managing database privileges, but are not users\nin the usual sense of the word.  Default value is `false`."
        },
        "Name": {
            "type": "string",
            "description": "The name of the role. Must be unique on the PostgreSQL\nserver instance where it is configured."
        },
        "Password": {
            "type": "string",
            "description": "Sets the role's password. A password is only of use\nfor roles having the `login` attribute set to true."
        },
        "Replication": {
            "type": "boolean",
            "description": "Defines whether a role is allowed to initiate\nstreaming replication or put the system in and out of backup mode.  Default\nvalue is `false`."
        },
        "Roles": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Defines list of roles which will be granted to this new role."
        },
        "SearchPath": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "Alters the search path of this new role. Note that\ndue to limitations in the implementation, values cannot contain the substring\n`\", \"`."
        },
        "SkipDropRole": {
            "type": "boolean",
            "description": "When a PostgreSQL ROLE exists in multiple\ndatabases and the ROLE is dropped, the\n[cleanup of ownership of objects](https://www.postgresql.org/docs/current/static/role-removal.html)\nin each of the respective databases must occur before the ROLE can be dropped\nfrom the catalog.  Set this option to true when there are multiple databases\nin a PostgreSQL cluster using the same PostgreSQL ROLE for object ownership.\nThis is the third and final step taken when removing a ROLE from a database."
        },
        "SkipReassignOwned": {
            "type": "boolean",
            "description": "When a PostgreSQL ROLE exists in multiple\ndatabases and the ROLE is dropped, a\n[`REASSIGN OWNED`](https://www.postgresql.org/docs/current/static/sql-reassign-owned.html) in\nmust be executed on each of the respective databases before the `DROP ROLE`\ncan be executed to dropped the ROLE from the catalog.  This is the first and\nsecond steps taken when removing a ROLE from a database (the second step being\nan implicit\n[`DROP OWNED`](https://www.postgresql.org/docs/current/static/sql-drop-owned.html))."
        },
        "StatementTimeout": {
            "type": "number",
            "description": "Defines [`statement_timeout`](https://www.postgresql.org/docs/current/runtime-config-client.html#RUNTIME-CONFIG-CLIENT-STATEMENT) setting for this role which allows to abort any statement that takes more than the specified amount of time."
        },
        "Superuser": {
            "type": "boolean",
            "description": "Defines whether the role is a \"superuser\", and\ntherefore can override all access restrictions within the database.  Default\nvalue is `false`."
        },
        "ValidUntil": {
            "type": "string",
            "description": "Defines the date and time after which the role's\npassword is no longer valid.  Established connections past this `valid_time`\nwill have to be manually terminated.  This value corresponds to a PostgreSQL\ndatetime. If omitted or the magic value `NULL` is used, `valid_until` will be\nset to `infinity`.  Default is `NULL`, therefore `infinity`."
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    },
    "writeOnlyProperties": [
        "/properties/Password"
    ]
}