{
    "typeName": "Terraform::Scaleway::SecurityGroup",
    "description": "**DEPRECATED**: This resource is deprecated and will be removed in `v2.0+`.\nPlease use `scaleway_instance_security_group` instead.\n\nProvides security groups. This allows security groups to be created, updated and deleted.\nFor additional details please refer to [API documentation](https://developer.scaleway.com/#security-groups).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "description of security group."
        },
        "EnableDefaultSecurity": {
            "type": "boolean",
            "description": "default: true. Add default security group rules."
        },
        "Id": {
            "type": "string"
        },
        "InboundDefaultPolicy": {
            "type": "string",
            "description": "default policy for inbound traffic. Can be one of accept or drop."
        },
        "Name": {
            "type": "string",
            "description": "name of security group."
        },
        "OutboundDefaultPolicy": {
            "type": "string",
            "description": "default policy for outbound traffic. Can be one of accept or drop."
        },
        "Stateful": {
            "type": "boolean",
            "description": "default: false. Mark the security group as stateful. Note that stateful security groups can not be associated with bare metal servers."
        }
    },
    "additionalProperties": false,
    "required": [
        "Description",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}