{
    "typeName": "Terraform::OCI::LoadBalancerListener",
    "description": "CloudFormation equivalent of oci_load_balancer_listener",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "ConnectionConfiguration": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BackendTcpProxyProtocolVersion": {
                    "type": "number"
                },
                "IdleTimeoutInSeconds": {
                    "type": "string"
                }
            },
            "required": [
                "IdleTimeoutInSeconds"
            ]
        },
        "SslConfiguration": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CertificateName": {
                    "type": "string"
                },
                "VerifyDepth": {
                    "type": "number"
                },
                "VerifyPeerCertificate": {
                    "type": "boolean"
                }
            },
            "required": [
                "CertificateName"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DefaultBackendSetName": {
            "type": "string"
        },
        "HostnameNames": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "LoadBalancerId": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "PathRouteSetName": {
            "type": "string"
        },
        "Port": {
            "type": "number"
        },
        "Protocol": {
            "type": "string"
        },
        "RuleSetNames": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "State": {
            "type": "string"
        },
        "ConnectionConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ConnectionConfiguration"
            },
            "maxItems": 1
        },
        "SslConfiguration": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SslConfiguration"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "DefaultBackendSetName",
        "LoadBalancerId",
        "Name",
        "Port",
        "Protocol"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/State"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}