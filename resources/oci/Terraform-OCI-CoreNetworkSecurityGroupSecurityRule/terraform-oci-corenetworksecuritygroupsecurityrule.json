{
    "typeName": "Terraform::OCI::CoreNetworkSecurityGroupSecurityRule",
    "description": "This resource provides the Network Security Group Security Rule resource in Oracle Cloud Infrastructure Core service.\n\nAdds a security rule to the specified network security group.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "IcmpOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Code": {
                    "type": "number"
                },
                "Type": {
                    "type": "number"
                }
            },
            "required": [
                "Type"
            ]
        },
        "TcpOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DestinationPortRange": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DestinationPortRange"
                    },
                    "maxItems": 1
                },
                "SourcePortRange": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SourcePortRange"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "UdpOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DestinationPortRange": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DestinationPortRange"
                    },
                    "maxItems": 1
                },
                "SourcePortRange": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SourcePortRange"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "DestinationPortRange": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Max": {
                    "type": "number"
                },
                "Min": {
                    "type": "number"
                }
            },
            "required": [
                "Max",
                "Min"
            ]
        },
        "SourcePortRange": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Max": {
                    "type": "number"
                },
                "Min": {
                    "type": "number"
                }
            },
            "required": [
                "Max",
                "Min"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "An optional description of your choice for the rule. Avoid entering confidential information.\n* `destination` - (Optional) Conceptually, this is the range of IP addresses that a packet originating from the instance can go to."
        },
        "Destination": {
            "type": "string",
            "description": "Conceptually, this is the range of IP addresses that a packet originating from the instance can go to."
        },
        "DestinationType": {
            "type": "string",
            "description": "Type of destination for the rule. Required if `direction` = `EGRESS`."
        },
        "Direction": {
            "type": "string",
            "description": "Direction of the security rule. Set to `EGRESS` for rules to allow outbound IP packets, or `INGRESS` for rules to allow inbound IP packets.\n* `icmp_options` - (Optional) Optional and valid only for ICMP and ICMPv6. Use to specify a particular ICMP type and code as defined in:\n* [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)\n* [ICMPv6 Parameters](https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)."
        },
        "Id": {
            "type": "string"
        },
        "IsValid": {
            "type": "boolean"
        },
        "NetworkSecurityGroupId": {
            "type": "string",
            "description": "The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security group."
        },
        "Protocol": {
            "type": "string",
            "description": "The transport protocol. Specify either `all` or an IPv4 protocol number as defined in [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Options are supported only for ICMP (\"1\"), TCP (\"6\"), UDP (\"17\"), and ICMPv6 (\"58\").\n* `source` - (Optional) Conceptually, this is the range of IP addresses that a packet coming into the instance can come from."
        },
        "Source": {
            "type": "string",
            "description": "Conceptually, this is the range of IP addresses that a packet coming into the instance can come from."
        },
        "SourceType": {
            "type": "string",
            "description": "Type of source for the rule. Required if `direction` = `INGRESS`.\n* `CIDR_BLOCK`: If the rule's `source` is an IP address range in CIDR notation.\n* `SERVICE_CIDR_BLOCK`: If the rule's `source` is the `cidrBlock` value for a [Service](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Service/) (the rule is for traffic coming from a particular `Service` through a service gateway).\n* `NETWORK_SECURITY_GROUP`: If the rule's `source` is the OCID of a [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).\n* `stateless` - (Optional) A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if egress traffic allows TCP destination port 80, there should be an ingress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.\n* `tcp_options` - (Optional) Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.\n* `destination_port_range` - (Optional) An inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.\n* `max` - (Required) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.\n* `min` - (Required) The minimum port number. Must not be greater than the maximum port number.\n* `source_port_range` - (Optional) An inclusive range of allowed source ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.\n* `max` - (Required) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.\n* `min` - (Required) The minimum port number. Must not be greater than the maximum port number.\n* `udp_options` - (Optional) Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.\n* `destination_port_range` - (Optional) An inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.\n* `max` - (Required) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.\n* `min` - (Required) The minimum port number. Must not be greater than the maximum port number.\n* `source_port_range` - (Optional) An inclusive range of allowed source ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.\n* `max` - (Required) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.\n* `min` - (Required) The minimum port number. Must not be greater than the maximum port number."
        },
        "Stateless": {
            "type": "boolean",
            "description": "A stateless rule allows traffic in one direction. Remember to add a corresponding stateless rule in the other direction if you need to support bidirectional traffic. For example, if egress traffic allows TCP destination port 80, there should be an ingress rule to allow TCP source port 80. Defaults to false, which means the rule is stateful and a corresponding rule is not necessary for bidirectional traffic.\n* `tcp_options` - (Optional) Optional and valid only for TCP. Use to specify particular destination ports for TCP rules. If you specify TCP as the protocol but omit this object, then all destination ports are allowed.\n* `destination_port_range` - (Optional) An inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.\n* `max` - (Required) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.\n* `min` - (Required) The minimum port number. Must not be greater than the maximum port number.\n* `source_port_range` - (Optional) An inclusive range of allowed source ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.\n* `max` - (Required) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.\n* `min` - (Required) The minimum port number. Must not be greater than the maximum port number.\n* `udp_options` - (Optional) Optional and valid only for UDP. Use to specify particular destination ports for UDP rules. If you specify UDP as the protocol but omit this object, then all destination ports are allowed.\n* `destination_port_range` - (Optional) An inclusive range of allowed destination ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.\n* `max` - (Required) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.\n* `min` - (Required) The minimum port number. Must not be greater than the maximum port number.\n* `source_port_range` - (Optional) An inclusive range of allowed source ports. Use the same number for the min and max to indicate a single port. Defaults to all ports if not specified.\n* `max` - (Required) The maximum port number. Must not be lower than the minimum port number. To specify a single port number, set both the min and max to the same value.\n* `min` - (Required) The minimum port number. Must not be greater than the maximum port number."
        },
        "TimeCreated": {
            "type": "string"
        },
        "IcmpOptions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IcmpOptions"
            },
            "maxItems": 1
        },
        "TcpOptions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/TcpOptions"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        },
        "UdpOptions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/UdpOptions"
            },
            "maxItems": 1
        },
        "DestinationPortRange": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DestinationPortRange"
            },
            "maxItems": 1
        },
        "SourcePortRange": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SourcePortRange"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Direction",
        "NetworkSecurityGroupId",
        "Protocol"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/IsValid",
        "/properties/TimeCreated"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}