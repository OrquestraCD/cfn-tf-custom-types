{
    "typeName": "Terraform::Triton::FirewallRule",
    "description": "The `triton_firewall_rule` resource represents a rule for the Triton cloud firewall.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "Description of the firewall rule."
        },
        "Enabled": {
            "type": "boolean",
            "description": "Default: `false`\nWhether the rule should be effective."
        },
        "Global": {
            "type": "boolean"
        },
        "Id": {
            "type": "string"
        },
        "Rule": {
            "type": "string",
            "description": "The firewall rule described using the Cloud API rule syntax defined at https://docs.joyent.com/public-cloud/network/firewall/cloud-firewall-rules-reference.\nNote: Cloud API will normalize rules based on case-sensitivity, parentheses,\nordering of IP addresses, etc. This can result in Terraform updating rules\nrepeatedly if the rule definition differs from the normalized value."
        }
    },
    "additionalProperties": false,
    "required": [
        "Rule"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Global",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}