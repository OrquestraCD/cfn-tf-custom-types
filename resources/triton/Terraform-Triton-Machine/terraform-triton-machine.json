{
    "typeName": "Terraform::Triton::Machine",
    "description": "The `triton_machine` resource represents a virtual machine or infrastructure container running in Triton.\n\n~> **Note:** Starting with Triton 0.2.0, Please note that when you want to specify the networks that you want the machine to be attached to, use the `networks` parameter\nand not the `nic` parameter.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Cns": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Disable": {
                    "type": "boolean"
                },
                "Services": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "Locality": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CloseTo": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "FarFrom": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "Nic": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Network": {
                    "type": "string"
                }
            },
            "required": [
                "Network"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Read": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdministratorPw": {
            "type": "string",
            "description": "The initial password for the Administrator user. Only used for Windows virtual machines."
        },
        "Affinity": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "A list of valid [Affinity Rules](https://apidocs.joyent.com/cloudapi/#affinity-rules) to apply to the machine which assist in data center placement. Using this attribute will force resource creation to be serial. NOTE: Affinity rules are best guess and assist in placing instances across a data center. They're used at creation and not referenced after."
        },
        "CloudConfig": {
            "type": "string",
            "description": "Cloud-init configuration for Linux brand machines, used instead of `user_data`."
        },
        "ComputeNode": {
            "type": "string"
        },
        "Created": {
            "type": "string"
        },
        "Dataset": {
            "type": "string"
        },
        "DeletionProtectionEnabled": {
            "type": "boolean",
            "description": "Whether an instance is destroyable. Default is `false`."
        },
        "Disk": {
            "type": "number"
        },
        "DomainNames": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "FirewallEnabled": {
            "type": "boolean",
            "description": "Default: `false`\nWhether the cloud firewall should be enabled for this machine."
        },
        "Id": {
            "type": "string"
        },
        "Image": {
            "type": "string",
            "description": "The UUID of the image to provision."
        },
        "Ips": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "Memory": {
            "type": "number"
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of metadata to apply to the machine."
        },
        "Name": {
            "type": "string",
            "description": "The friendly name for the machine. Triton will generate a name if one is not specified."
        },
        "Networks": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "The list of networks to associate with the machine. The network ID will be in hex form, e.g `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`."
        },
        "Package": {
            "type": "string",
            "description": "The name of the package to use for provisioning."
        },
        "Primaryip": {
            "type": "string"
        },
        "RootAuthorizedKeys": {
            "type": "string",
            "description": "The public keys authorized for root access via SSH to the machine."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A mapping of tags to apply to the machine."
        },
        "Type": {
            "type": "string"
        },
        "Updated": {
            "type": "string"
        },
        "UserData": {
            "type": "string",
            "description": "Data to be copied to the machine on boot. **NOTE:** The content of `user_data`\nwill _not be executed_ on boot. The data will only be written to the file on each\nboot before the content of the script from `user_script` is to be run."
        },
        "UserScript": {
            "type": "string",
            "description": "The user script to run on boot (every boot on SmartMachines). To learn more about\nboth the user script and user data see the [metadata API][2] documentation and the\n[Joyent Metadata Data Dictionary][1] specification."
        },
        "Cns": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Cns"
            },
            "maxItems": 1
        },
        "Locality": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Locality"
            },
            "maxItems": 1
        },
        "Nic": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Nic"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Image",
        "Package"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/ComputeNode",
        "/properties/Created",
        "/properties/Dataset",
        "/properties/Disk",
        "/properties/DomainNames",
        "/properties/Id",
        "/properties/Ips",
        "/properties/Memory",
        "/properties/Primaryip",
        "/properties/Type",
        "/properties/Updated"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}