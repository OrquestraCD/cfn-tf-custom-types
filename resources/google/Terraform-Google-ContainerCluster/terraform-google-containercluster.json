{
    "typeName": "Terraform::Google::ContainerCluster",
    "description": "Manages a Google Kubernetes Engine (GKE) cluster. For more information see\n[the official documentation](https://cloud.google.com/container-engine/docs/clusters)\nand [the API reference](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters).\n\n~> **Note:** All arguments and attributes, including basic auth username and\npasswords as well as certificate outputs will be stored in the raw state as\nplaintext. [Read more about sensitive data in state](/docs/state/sensitive-data.html).",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "AddonsConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "HorizontalPodAutoscaling": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HorizontalPodAutoscaling"
                    },
                    "maxItems": 1
                },
                "HttpLoadBalancing": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/HttpLoadBalancing"
                    },
                    "maxItems": 1
                },
                "KubernetesDashboard": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/KubernetesDashboard"
                    },
                    "maxItems": 1
                },
                "NetworkPolicyConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/NetworkPolicyConfig"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "AuthenticatorGroupsConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SecurityGroup": {
                    "type": "string",
                    "description": "The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`."
                }
            },
            "required": [
                "SecurityGroup"
            ]
        },
        "ClusterAutoscaling": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Whether node auto-provisioning is enabled. Resource\nlimits for `cpu` and `memory` must be defined to enable node auto-provisioning."
                },
                "AutoProvisioningDefaults": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/AutoProvisioningDefaults"
                    },
                    "maxItems": 1
                },
                "ResourceLimits": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ResourceLimits"
                    }
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "IpAllocationPolicy": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ClusterIpv4CidrBlock": {
                    "type": "string",
                    "description": "The IP address range for the cluster pod IPs.\nSet to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)\nto have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)\nfrom the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to\npick a specific range to use."
                },
                "ClusterSecondaryRangeName": {
                    "type": "string",
                    "description": "The name of the existing secondary\nrange in the cluster's subnetwork to use for pod IP addresses. Alternatively,\n`cluster_ipv4_cidr_block` can be used to automatically create a GKE-managed one."
                },
                "NodeIpv4CidrBlock": {
                    "type": "string"
                },
                "ServicesIpv4CidrBlock": {
                    "type": "string",
                    "description": "The IP address range of the services IPs in this cluster.\nSet to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)\nto have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)\nfrom the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to\npick a specific range to use."
                },
                "ServicesSecondaryRangeName": {
                    "type": "string",
                    "description": "The name of the existing\nsecondary range in the cluster's subnetwork to use for service `ClusterIP`s.\nAlternatively, `services_ipv4_cidr_block` can be used to automatically create a\nGKE-managed one."
                },
                "SubnetworkName": {
                    "type": "string"
                }
            },
            "required": []
        },
        "MaintenancePolicy": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DailyMaintenanceWindow": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/DailyMaintenanceWindow"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": []
        },
        "MasterAuth": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Password": {
                    "type": "string",
                    "description": "The password to use for HTTP basic authentication when accessing\nthe Kubernetes master endpoint."
                },
                "Username": {
                    "type": "string",
                    "description": "The username to use for HTTP basic authentication when accessing\nthe Kubernetes master endpoint. If not present basic auth will be disabled."
                },
                "ClientCertificateConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ClientCertificateConfig"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "MasterAuthorizedNetworksConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CidrBlocks": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/CidrBlocks"
                    }
                }
            },
            "required": []
        },
        "NetworkPolicy": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "description": "Whether network policy is enabled on the cluster."
                },
                "Provider": {
                    "type": "string",
                    "description": "The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED."
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "NodeConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DiskSizeGb": {
                    "type": "number",
                    "description": "Size of the disk attached to each node, specified\nin GB. The smallest allowed disk size is 10GB. Defaults to 100GB."
                },
                "DiskType": {
                    "type": "string",
                    "description": "Type of the disk attached to each node\n(e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'."
                },
                "GuestAccelerator": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "Count": {
                                "type": "number"
                            },
                            "Type": {
                                "type": "string"
                            }
                        }
                    },
                    "description": "List of the type and count of accelerator cards attached to the instance.\nStructure documented below.\nTo support removal of guest_accelerators in Terraform 0.12 this field is an\n[Attribute as Block](/docs/configuration/attr-as-blocks.html)."
                },
                "ImageType": {
                    "type": "string",
                    "description": "The image type to use for this node. Note that changing the image type\nwill delete and recreate all nodes in the node pool."
                },
                "Labels": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "MapKey": {
                                "type": "string"
                            },
                            "MapValue": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "MapKey",
                            "MapValue"
                        ]
                    },
                    "description": "The Kubernetes labels (key/value pairs) to be applied to each node."
                },
                "LocalSsdCount": {
                    "type": "number",
                    "description": "The amount of local SSD disks that will be\nattached to each cluster node. Defaults to 0."
                },
                "MachineType": {
                    "type": "string",
                    "description": "The name of a Google Compute Engine machine type.\nDefaults to `n1-standard-1`. To create a custom machine type, value should be set as specified\n[here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType)."
                },
                "Metadata": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "MapKey": {
                                "type": "string"
                            },
                            "MapValue": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "MapKey",
                            "MapValue"
                        ]
                    },
                    "description": "The metadata key/value pairs assigned to instances in\nthe cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to\n`true` by the API; if `metadata` is set but that default value is not\nincluded, Terraform will attempt to unset the value. To avoid this, set the\nvalue in your config."
                },
                "MinCpuPlatform": {
                    "type": "string",
                    "description": "Minimum CPU platform to be used by this instance.\nThe instance may be scheduled on the specified or newer CPU platform. Applicable\nvalues are the friendly names of CPU platforms, such as `Intel Haswell`. See the\n[official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)\nfor more information."
                },
                "OauthScopes": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of Google API scopes to be made available\non all of the node VMs under the \"default\" service account. These can be\neither FQDNs, or scope aliases. The following scopes are necessary to ensure\nthe correct functioning of the cluster:."
                },
                "Preemptible": {
                    "type": "boolean",
                    "description": "A boolean that represents whether or not the underlying node VMs\nare preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)\nfor more information. Defaults to false."
                },
                "ServiceAccount": {
                    "type": "string",
                    "description": "The service account to be used by the Node VMs.\nIf not specified, the \"default\" service account is used.\nIn order to use the configured `oauth_scopes` for logging and monitoring, the service account being used needs the\n[roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and\n[roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles."
                },
                "Tags": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of instance tags applied to all nodes. Tags are used to identify\nvalid sources or targets for network firewalls."
                },
                "Taint": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "Effect": {
                                "type": "string"
                            },
                            "Key": {
                                "type": "string"
                            },
                            "Value": {
                                "type": "string"
                            }
                        }
                    },
                    "description": "A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)\nto apply to nodes. GKE's API can only set this field on cluster creation.\nHowever, GKE will add taints to your nodes if you enable certain features such\nas GPUs. If this field is set, any diffs on this field will cause Terraform to\nrecreate the underlying resource. Taint values can be updated safely in\nKubernetes (eg. through `kubectl`), and it's recommended that you do not use\nthis field to manage taints. If you do, `lifecycle.ignore_changes` is\nrecommended. Structure is documented below."
                },
                "SandboxConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/SandboxConfig"
                    },
                    "maxItems": 1
                },
                "ShieldedInstanceConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/ShieldedInstanceConfig"
                    },
                    "maxItems": 1
                },
                "WorkloadMetadataConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/WorkloadMetadataConfig"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "NodePool": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "InitialNodeCount": {
                    "type": "number"
                },
                "MaxPodsPerNode": {
                    "type": "number"
                },
                "Name": {
                    "type": "string"
                },
                "NamePrefix": {
                    "type": "string"
                },
                "NodeCount": {
                    "type": "number"
                },
                "Version": {
                    "type": "string"
                },
                "Autoscaling": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Autoscaling"
                    },
                    "maxItems": 1
                },
                "Management": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Management"
                    },
                    "maxItems": 1
                },
                "NodeConfig": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/NodeConfig"
                    },
                    "maxItems": 1
                }
            },
            "required": []
        },
        "PodSecurityPolicyConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "PrivateClusterConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EnablePrivateEndpoint": {
                    "type": "boolean"
                },
                "EnablePrivateNodes": {
                    "type": "boolean"
                },
                "MasterIpv4CidrBlock": {
                    "type": "string"
                }
            },
            "required": [
                "EnablePrivateEndpoint"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        },
        "VerticalPodAutoscaling": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "Enabled"
            ]
        },
        "HorizontalPodAutoscaling": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Disabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "Disabled"
            ]
        },
        "HttpLoadBalancing": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Disabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "Disabled"
            ]
        },
        "KubernetesDashboard": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Disabled": {
                    "type": "boolean"
                }
            },
            "required": []
        },
        "NetworkPolicyConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Disabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "Disabled"
            ]
        },
        "AutoProvisioningDefaults": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "OauthScopes": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes that are used by NAP when creating node pools."
                },
                "ServiceAccount": {
                    "type": "string",
                    "description": "The Google Cloud Platform Service Account to be used by the node VMs."
                }
            },
            "required": []
        },
        "ResourceLimits": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Maximum": {
                    "type": "number",
                    "description": "Maximum amount of the resource in the cluster."
                },
                "Minimum": {
                    "type": "number",
                    "description": "Minimum amount of the resource in the cluster."
                },
                "ResourceType": {
                    "type": "string",
                    "description": "The type of the resource. For example, `cpu` and\n`memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)\nfor a list of types."
                }
            },
            "required": [
                "ResourceType"
            ]
        },
        "DailyMaintenanceWindow": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "StartTime": {
                    "type": "string"
                }
            },
            "required": [
                "StartTime"
            ]
        },
        "ClientCertificateConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "IssueClientCertificate": {
                    "type": "boolean"
                }
            },
            "required": [
                "IssueClientCertificate"
            ]
        },
        "CidrBlocks": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CidrBlock": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                }
            },
            "required": [
                "CidrBlock"
            ]
        },
        "SandboxConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SandboxType": {
                    "type": "string"
                }
            },
            "required": [
                "SandboxType"
            ]
        },
        "ShieldedInstanceConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EnableIntegrityMonitoring": {
                    "type": "boolean"
                },
                "EnableSecureBoot": {
                    "type": "boolean"
                }
            },
            "required": []
        },
        "WorkloadMetadataConfig": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "NodeMetadata": {
                    "type": "string"
                }
            },
            "required": [
                "NodeMetadata"
            ]
        },
        "Autoscaling": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MaxNodeCount": {
                    "type": "number"
                },
                "MinNodeCount": {
                    "type": "number"
                }
            },
            "required": [
                "MaxNodeCount",
                "MinNodeCount"
            ]
        },
        "Management": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AutoRepair": {
                    "type": "boolean"
                },
                "AutoUpgrade": {
                    "type": "boolean"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdditionalZones": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "ClusterIpv4Cidr": {
            "type": "string",
            "description": "The IP address range of the Kubernetes pods\nin this cluster in CIDR notation (e.g. `10.96.0.0/14`). Leave blank to have one\nautomatically chosen or specify a `/14` block in `10.0.0.0/8`. This field will\nonly work for routes-based clusters, where `ip_allocation_policy` is not defined."
        },
        "DefaultMaxPodsPerNode": {
            "type": "number",
            "description": "The default maximum number of pods\nper node in this cluster. This doesn't work on \"routes-based\" clusters, clusters\nthat don't have IP Aliasing enabled. See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/flexible-pod-cidr)\nfor more information."
        },
        "Description": {
            "type": "string",
            "description": "Description of the cluster."
        },
        "EnableBinaryAuthorization": {
            "type": "boolean",
            "description": "Enable Binary Authorization for this cluster.\nIf enabled, all container images will be validated by Google Binary Authorization."
        },
        "EnableIntranodeVisibility": {
            "type": "boolean",
            "description": ")\nWhether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network."
        },
        "EnableKubernetesAlpha": {
            "type": "boolean",
            "description": "Whether to enable Kubernetes Alpha features for\nthis cluster. Note that when this option is enabled, the cluster cannot be upgraded\nand will be automatically deleted after 30 days."
        },
        "EnableLegacyAbac": {
            "type": "boolean",
            "description": "Whether the ABAC authorizer is enabled for this cluster.\nWhen enabled, identities in the system, including service accounts, nodes, and controllers,\nwill have statically granted permissions beyond those provided by the RBAC configuration or IAM.\nDefaults to `false`."
        },
        "EnableTpu": {
            "type": "boolean",
            "description": ") Whether to enable Cloud TPU resources in this cluster.\nSee the [official documentation](https://cloud.google.com/tpu/docs/kubernetes-engine-setup)."
        },
        "Endpoint": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "InitialNodeCount": {
            "type": "number",
            "description": "The number of nodes to create in this\ncluster's default node pool. In regional or multi-zonal clusters, this is the\nnumber of nodes per zone. Must be set if `node_pool` is not set. If you're using\n`google_container_node_pool` objects with no default node pool, you'll need to\nset this to a value of at least `1`, alongside setting\n`remove_default_node_pool` to `true`."
        },
        "InstanceGroupUrls": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "LabelFingerprint": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "description": "The location (region or zone) in which the cluster\nmaster will be created, as well as the default node location. If you specify a\nzone (such as `us-central1-a`), the cluster will be a zonal cluster with a\nsingle cluster master. If you specify a region (such as `us-west1`), the\ncluster will be a regional cluster with multiple masters spread across zones in\nthe region, and with default node locations in those zones as well."
        },
        "LoggingService": {
            "type": "string",
            "description": "The logging service that the cluster should\nwrite logs to. Available options include `logging.googleapis.com`(Legacy Stackdriver),\n`logging.googleapis.com/kubernetes`(Stackdriver Kubernetes Engine Logging), and `none`. Defaults to `logging.googleapis.com/kubernetes`."
        },
        "MasterVersion": {
            "type": "string"
        },
        "MinMasterVersion": {
            "type": "string",
            "description": "The minimum version of the master. GKE\nwill auto-update the master to new versions, so this does not guarantee the\ncurrent master version--use the read-only `master_version` field to obtain that.\nIf unset, the cluster's version will be set by GKE to the version of the most recent\nofficial release (which is not necessarily the latest version).  Most users will find\nthe `google_container_engine_versions` data source useful - it indicates which versions\nare available, and can be use to approximate fuzzy versions in a\nTerraform-compatible way. If you intend to specify versions manually,\n[the docs](https://cloud.google.com/kubernetes-engine/versioning-and-upgrades#specifying_cluster_version)\ndescribe the various acceptable formats for this field."
        },
        "MonitoringService": {
            "type": "string",
            "description": "The monitoring service that the cluster\nshould write metrics to.\nAutomatically send metrics from pods in the cluster to the Google Cloud Monitoring API.\nVM metrics will be collected by Google Compute Engine regardless of this setting\nAvailable options include\n`monitoring.googleapis.com`(Legacy Stackdriver), `monitoring.googleapis.com/kubernetes`(Stackdriver Kubernetes Engine Monitoring), and `none`.\nDefaults to `monitoring.googleapis.com/kubernetes`."
        },
        "Name": {
            "type": "string",
            "description": "The name of the cluster, unique within the project and\nlocation."
        },
        "Network": {
            "type": "string",
            "description": "The name or self_link of the Google Compute Engine\nnetwork to which the cluster is connected. For Shared VPC, set this to the self link of the\nshared network."
        },
        "NodeLocations": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The list of zones in which the cluster's nodes\nare located. Nodes must be in the region of their regional cluster or in the\nsame region as their cluster's zone for zonal clusters. If this is specified for\na zonal cluster, omit the cluster's zone."
        },
        "NodeVersion": {
            "type": "string",
            "description": "The Kubernetes version on the nodes. Must either be unset\nor set to the same value as `min_master_version` on create. Defaults to the default\nversion set by GKE which is not necessarily the latest version. This only affects\nnodes in the default node pool. While a fuzzy version can be specified, it's\nrecommended that you specify explicit versions as Terraform will see spurious diffs\nwhen fuzzy versions are used. See the `google_container_engine_versions` data source's\n`version_prefix` field to approximate fuzzy versions in a Terraform-compatible way.\nTo update nodes in other node pools, use the `version` attribute on the node pool."
        },
        "Operation": {
            "type": "string"
        },
        "Project": {
            "type": "string",
            "description": "The ID of the project in which the resource belongs. If it\nis not provided, the provider project is used."
        },
        "Region": {
            "type": "string"
        },
        "RemoveDefaultNodePool": {
            "type": "boolean",
            "description": "If `true`, deletes the default node\npool upon cluster creation. If you're using `google_container_node_pool`\nresources with no default node pool, this should be set to `true`, alongside\nsetting `initial_node_count` to at least `1`."
        },
        "ResourceLabels": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "The GCE resource labels (a map of key/value pairs) to be applied to the cluster."
        },
        "ServicesIpv4Cidr": {
            "type": "string"
        },
        "Subnetwork": {
            "type": "string",
            "description": "The name or self_link of the Google Compute Engine\nsubnetwork in which the cluster's instances are launched."
        },
        "Zone": {
            "type": "string"
        },
        "AddonsConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AddonsConfig"
            },
            "maxItems": 1
        },
        "AuthenticatorGroupsConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AuthenticatorGroupsConfig"
            },
            "maxItems": 1
        },
        "ClusterAutoscaling": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ClusterAutoscaling"
            },
            "maxItems": 1
        },
        "IpAllocationPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/IpAllocationPolicy"
            },
            "maxItems": 1
        },
        "MaintenancePolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MaintenancePolicy"
            },
            "maxItems": 1
        },
        "MasterAuth": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MasterAuth"
            },
            "maxItems": 1
        },
        "MasterAuthorizedNetworksConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/MasterAuthorizedNetworksConfig"
            },
            "maxItems": 1
        },
        "NetworkPolicy": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NetworkPolicy"
            },
            "maxItems": 1
        },
        "NodeConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NodeConfig"
            },
            "maxItems": 1
        },
        "NodePool": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NodePool"
            }
        },
        "PodSecurityPolicyConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PodSecurityPolicyConfig"
            },
            "maxItems": 1
        },
        "PrivateClusterConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/PrivateClusterConfig"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        },
        "VerticalPodAutoscaling": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/VerticalPodAutoscaling"
            },
            "maxItems": 1
        },
        "HorizontalPodAutoscaling": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HorizontalPodAutoscaling"
            },
            "maxItems": 1
        },
        "HttpLoadBalancing": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/HttpLoadBalancing"
            },
            "maxItems": 1
        },
        "KubernetesDashboard": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/KubernetesDashboard"
            },
            "maxItems": 1
        },
        "NetworkPolicyConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/NetworkPolicyConfig"
            },
            "maxItems": 1
        },
        "AutoProvisioningDefaults": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/AutoProvisioningDefaults"
            },
            "maxItems": 1
        },
        "ResourceLimits": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ResourceLimits"
            }
        },
        "DailyMaintenanceWindow": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DailyMaintenanceWindow"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "ClientCertificateConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ClientCertificateConfig"
            },
            "maxItems": 1
        },
        "CidrBlocks": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/CidrBlocks"
            }
        },
        "SandboxConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SandboxConfig"
            },
            "maxItems": 1
        },
        "ShieldedInstanceConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/ShieldedInstanceConfig"
            },
            "maxItems": 1
        },
        "WorkloadMetadataConfig": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/WorkloadMetadataConfig"
            },
            "maxItems": 1
        },
        "Autoscaling": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Autoscaling"
            },
            "maxItems": 1
        },
        "Management": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Management"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Endpoint",
        "/properties/Id",
        "/properties/InstanceGroupUrls",
        "/properties/LabelFingerprint",
        "/properties/MasterVersion",
        "/properties/Operation",
        "/properties/ServicesIpv4Cidr"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}