{
    "typeName": "Terraform::Google::ComputeSnapshot",
    "description": "Represents a Persistent Disk Snapshot resource.\n\nUse snapshots to back up data from your persistent disks. Snapshots are\ndifferent from public images and custom images, which are used primarily\nto create instances or configure instance templates. Snapshots are useful\nfor periodic backup of the data on your persistent disks. You can create\nsnapshots from persistent disks even while they are attached to running\ninstances.\n\nSnapshots are incremental, so you can create regular snapshots on a\npersistent disk faster and at a much lower cost than if you regularly\ncreated a full image of the disk.\n\n\nTo get more information about Snapshot, see:\n\n* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/snapshots)\n* How-to Guides\n    * [Official Documentation](https://cloud.google.com/compute/docs/disks/create-snapshots)\n\n<div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">\n  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=snapshot_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">\n    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">\n  </a>\n</div>",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/google/Terraform-Google-ComputeSnapshot/docs/README.md",
    "definitions": {
        "SnapshotEncryptionKey": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "RawKey": {
                    "type": "string"
                }
            },
            "required": [
                "RawKey"
            ]
        },
        "SourceDiskEncryptionKey": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "RawKey": {
                    "type": "string"
                }
            },
            "required": []
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "CreationTimestamp": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "DiskSizeGb": {
            "type": "number"
        },
        "Id": {
            "type": "string"
        },
        "LabelFingerprint": {
            "type": "string"
        },
        "Labels": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            }
        },
        "Licenses": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "Name": {
            "type": "string"
        },
        "Project": {
            "type": "string",
            "description": "The ID of the project in which the resource belongs.\nIf it is not provided, the provider project is used."
        },
        "SelfLink": {
            "type": "string"
        },
        "SnapshotId": {
            "type": "number"
        },
        "SourceDisk": {
            "type": "string"
        },
        "SourceDiskLink": {
            "type": "string"
        },
        "StorageBytes": {
            "type": "number"
        },
        "Zone": {
            "type": "string"
        },
        "SnapshotEncryptionKey": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SnapshotEncryptionKey"
            },
            "maxItems": 1
        },
        "SourceDiskEncryptionKey": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/SourceDiskEncryptionKey"
            },
            "maxItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "SourceDisk"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CreationTimestamp",
        "/properties/DiskSizeGb",
        "/properties/Id",
        "/properties/LabelFingerprint",
        "/properties/Licenses",
        "/properties/SelfLink",
        "/properties/SnapshotId",
        "/properties/SourceDiskLink",
        "/properties/StorageBytes"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    },
    "writeOnlyProperties": [
        "/definitions/SnapshotEncryptionKey/RawKey",
        "/definitions/SourceDiskEncryptionKey/RawKey"
    ]
}