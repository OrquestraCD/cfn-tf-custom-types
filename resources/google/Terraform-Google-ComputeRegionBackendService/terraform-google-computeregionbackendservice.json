{
    "typeName": "Terraform::Google::ComputeRegionBackendService",
    "description": "CloudFormation equivalent of google_compute_region_backend_service",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Backend": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BalancingMode": {
                    "type": "string"
                },
                "CapacityScaler": {
                    "type": "number"
                },
                "Description": {
                    "type": "string"
                },
                "Group": {
                    "type": "string"
                },
                "MaxConnections": {
                    "type": "number"
                },
                "MaxConnectionsPerEndpoint": {
                    "type": "number"
                },
                "MaxConnectionsPerInstance": {
                    "type": "number"
                },
                "MaxRate": {
                    "type": "number"
                },
                "MaxRatePerEndpoint": {
                    "type": "number"
                },
                "MaxRatePerInstance": {
                    "type": "number"
                },
                "MaxUtilization": {
                    "type": "number"
                }
            },
            "required": [
                "Group"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                },
                "Update": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ConnectionDrainingTimeoutSec": {
            "type": "number"
        },
        "CreationTimestamp": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "Fingerprint": {
            "type": "string"
        },
        "HealthChecks": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "LoadBalancingScheme": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "Project": {
            "type": "string"
        },
        "Protocol": {
            "type": "string"
        },
        "Region": {
            "type": "string"
        },
        "SelfLink": {
            "type": "string"
        },
        "SessionAffinity": {
            "type": "string"
        },
        "TimeoutSec": {
            "type": "number"
        },
        "Backend": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Backend"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "HealthChecks",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CreationTimestamp",
        "/properties/Fingerprint",
        "/properties/SelfLink"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}