{
    "typeName": "Terraform::Google::LoggingBillingAccountSink",
    "description": "Manages a billing account logging sink. For more information see\n[the official documentation](https://cloud.google.com/logging/docs/) and\n[Exporting Logs in the API](https://cloud.google.com/logging/docs/api/tasks/exporting-logs).\n\n~> **Note** You must have the \"Logs Configuration Writer\" IAM role (`roles/logging.configWriter`)\n[granted on the billing account](https://cloud.google.com/billing/reference/rest/v1/billingAccounts/getIamPolicy) to\nthe credentials used with Terraform. [IAM roles granted on a billing account](https://cloud.google.com/billing/docs/how-to/billing-access) are separate from the\ntypical IAM roles granted on a project.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "BigqueryOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "UsePartitionedTables": {
                    "type": "boolean",
                    "description": "Whether to use [BigQuery's partition tables](https://cloud.google.com/bigquery/docs/partitioned-tables).\nBy default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned\ntables the date suffix is no longer present and [special query syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)\nhas to be used instead. In both cases, tables are sharded based on UTC timezone."
                }
            },
            "required": [
                "UsePartitionedTables"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "BillingAccount": {
            "type": "string",
            "description": "The billing account exported to the sink."
        },
        "Destination": {
            "type": "string",
            "description": "The destination of the sink (or, in other words, where logs are written to). Can be a\nCloud Storage bucket, a PubSub topic, or a BigQuery dataset. Examples:\n```\n\"storage.googleapis.com/[GCS_BUCKET]\"\n\"bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]\"\n\"pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]\"\n```\nThe writer associated with the sink must have access to write to the above resource."
        },
        "Filter": {
            "type": "string",
            "description": "The filter to apply when exporting logs. Only log entries that match the filter are exported.\nSee [Advanced Log Filters](https://cloud.google.com/logging/docs/view/advanced_filters) for information on how to\nwrite a filter."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The name of the logging sink."
        },
        "WriterIdentity": {
            "type": "string"
        },
        "BigqueryOptions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BigqueryOptions"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "BillingAccount",
        "Destination",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/WriterIdentity"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}