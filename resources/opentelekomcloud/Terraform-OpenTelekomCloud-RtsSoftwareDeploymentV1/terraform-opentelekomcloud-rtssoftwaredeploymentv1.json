{
    "typeName": "Terraform::OpenTelekomCloud::RtsSoftwareDeploymentV1",
    "description": "Provides an RTS software deployment resource.\n\n# Example Usage\n\n ```hcl\n \nvariable \"config_id\" {}\n\nvariable \"server_id\" {}\n \nresource \"opentelekomcloud_rts_software_deployment_v1\" \"mydeployment\" {\n  config_id = \"${var.config_id}\"\n  server_id = \"${var.server_id}\"\n}\n ```\n\n# Argument Reference\n\nThe following arguments are supported:\n\n * `config_id` - (Required) The id of the software configuration resource running on an instance.\n \n * `server_id` - (Required) The id of the instance.\n \n * `status` -  (Optional) The current status of deployment resources.\n \n * `action` - (Optional) The stack action that triggers this deployment resource.\n \n * `input_values` - (Optional) The input data stored in the form of a key-value pair.\n \n * `output_values` - (Optional) The output data stored in the form of a key-value pair.\n \n * `status_reason` - (Optional) The cause of the current deployment resource status.\n \n * `tenant_id` - (Optional) The id of the authenticated tenant who can perform operations on the deployment resources.\n\n# Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The id of the software deployment.\n \n# Import\n\nSoftware deployment can be imported using the `deployment id`, e.g.\n```\n $ terraform import opentelekomcloud_rts_software_deployment_v1 4779ab1c-7c1a-44b1-a02e-93dfc361b32d\n ```",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Action": {
            "type": "string"
        },
        "ConfigId": {
            "type": "string"
        },
        "InputValues": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Key": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ]
            }
        },
        "OutputValues": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Key": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ]
            }
        },
        "Region": {
            "type": "string"
        },
        "ServerId": {
            "type": "string"
        },
        "Status": {
            "type": "string"
        },
        "StatusReason": {
            "type": "string"
        },
        "TenantId": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "ConfigId",
        "ServerId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}