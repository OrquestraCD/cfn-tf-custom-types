{
    "typeName": "Terraform::OpenTelekomCloud::VbsBackupShareV2",
    "description": "Provides an VBS Backup Share resource.\n \n# Example Usage\n\n ```hcl\nvariable \"backup_id\" {}\n\nvariable \"to_project_ids\" {}\n \nresource \"opentelekomcloud_vbs_backup_share_v2\" \"backupshare\" {\n  backup_id = \"${var.backup_id}\"\n  to_project_ids = \"${var.to_project_ids}\"\n}\n ```\n\n# Argument Reference\n\nThe following arguments are supported:\n\n* `backup_id` - (Required) The ID of the backup to be shared. Changing the parameter will create new resource.\n\n* `to_project_ids` - (Required) The IDs of projects with which the backup is shared. Changing the parameter will create new resource.\n\n# Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `container` - The container of the backup.\n\n* `backup_status` - The status of the VBS backup.\n\n* `description` - The status of the VBS backup.\n\n* `availability_zone` - The AZ where the backup resides.\n\n* `size` - The size of the vbs backup.\n\n* `backup_name` - The backup name.\n\n* `snapshot_id` - The ID of the snapshot associated with the backup.\n\n* `volume_id` - The ID of the tenant to which the backup belongs.\n\n* `share_ids` - The backup share IDs.\n\n* `service_metadata` - The metadata of the vbs backup.\n\n# Import\n\nVBS Backup Share can be imported using the `backup id`, e.g.\n\n```\n $ terraform import opentelekomcloud_vbs_backup_share_v2.backupshare 4779ab1c-7c1a-44b1-a02e-93dfc361b32d\n```",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AvailabilityZone": {
            "type": "string"
        },
        "BackupId": {
            "type": "string"
        },
        "BackupName": {
            "type": "string"
        },
        "BackupStatus": {
            "type": "string"
        },
        "Container": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Region": {
            "type": "string"
        },
        "ServiceMetadata": {
            "type": "string"
        },
        "ShareIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "Size": {
            "type": "number"
        },
        "SnapshotId": {
            "type": "string"
        },
        "ToProjectIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            }
        },
        "VolumeId": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "BackupId",
        "ToProjectIds"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AvailabilityZone",
        "/properties/BackupName",
        "/properties/BackupStatus",
        "/properties/Container",
        "/properties/Description",
        "/properties/Id",
        "/properties/ServiceMetadata",
        "/properties/ShareIds",
        "/properties/Size",
        "/properties/SnapshotId",
        "/properties/VolumeId"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}