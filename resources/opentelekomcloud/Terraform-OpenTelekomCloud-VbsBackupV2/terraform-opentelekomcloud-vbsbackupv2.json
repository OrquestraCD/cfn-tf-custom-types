{
    "typeName": "Terraform::OpenTelekomCloud::VbsBackupV2",
    "description": "Provides an VBS Backup resource.\n \n# Example Usage\n\n ```hcl\nvariable \"backup_name\" {}\n\nvariable \"volume_id\" {}\n \nresource \"opentelekomcloud_vbs_backup_v2\" \"mybackup\" {\n  volume_id = \"${var.volume_id}\"\n  name = \"${var.backup_name}\"\n}\n ```\n\n# Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the vbs backup. Changing the parameter will create new resource.\n\n* `volume_id` - (Required) The id of the disk to be backed up. Changing the parameter will create new resource.\n\n* `snapshot_id` - (Optional) The snapshot id of the disk to be backed up. Changing the parameter will create new resource.\n\n* `description` - (Optional) The description of the vbs backup. Changing the parameter will create new resource.\n\n**tags** **- (Optional)** List of tags to be configured for the backup resources. Changing the parameter will create new resource.\n\n* `key` - (Required) Specifies the tag key.\n\n* `value` - (Required) Specifies the tag value.\n\n# Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The id of the vbs backup.\n\n* `container` - The container of the backup.\n\n* `status` - The status of the VBS backup.\n\n* `availability_zone` - The AZ where the backup resides.\n\n* `size` - The size of the vbs backup.\n\n* `service_metadata` - The metadata of the vbs backup.\n\n# Import\n\nVBS Backup can be imported using the `backup id`, e.g.\n\n```\n $ terraform import opentelekomcloud_vbs_backup_v2.mybackup 4779ab1c-7c1a-44b1-a02e-93dfc361b32d\n```",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Tags": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Key",
                "Value"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AvailabilityZone": {
            "type": "string"
        },
        "Container": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "Region": {
            "type": "string"
        },
        "ServiceMetadata": {
            "type": "string"
        },
        "Size": {
            "type": "number"
        },
        "SnapshotId": {
            "type": "string"
        },
        "Status": {
            "type": "string"
        },
        "VolumeId": {
            "type": "string"
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Tags"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Name",
        "VolumeId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AvailabilityZone",
        "/properties/Container",
        "/properties/Id",
        "/properties/ServiceMetadata",
        "/properties/Size",
        "/properties/Status"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}