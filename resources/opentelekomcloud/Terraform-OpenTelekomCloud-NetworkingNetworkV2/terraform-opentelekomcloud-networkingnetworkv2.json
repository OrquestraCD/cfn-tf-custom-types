{
    "typeName": "Terraform::OpenTelekomCloud::NetworkingNetworkV2",
    "description": "Manages a V2 Neutron network resource within OpenTelekomCloud.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/opentelekomcloud/Terraform-OpenTelekomCloud-NetworkingNetworkV2/docs/README.md",
    "definitions": {
        "Segments": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "NetworkType": {
                    "type": "string",
                    "description": "The type of physical network."
                },
                "PhysicalNetwork": {
                    "type": "string",
                    "description": "The phisical network where this network is implemented."
                },
                "SegmentationId": {
                    "type": "number",
                    "description": "An isolated segment on the physical network."
                }
            },
            "required": []
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AdminStateUp": {
            "type": "string",
            "description": "The administrative state of the network.\nAcceptable values are \"true\" and \"false\". Changing this value updates the\nstate of the existing network."
        },
        "Id": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "The name of the network. Changing this updates the name of\nthe existing network."
        },
        "Region": {
            "type": "string"
        },
        "Shared": {
            "type": "string",
            "description": "Specifies whether the network resource can be accessed\nby any tenant or not. Changing this updates the sharing capabalities of the\nexisting network."
        },
        "TenantId": {
            "type": "string",
            "description": "The owner of the network. Required if admin wants to\ncreate a network for another tenant. Changing this creates a new network."
        },
        "ValueSpecs": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Map of additional options."
        },
        "Segments": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Segments"
            }
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}