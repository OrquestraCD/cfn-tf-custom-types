{
    "typeName": "Terraform::OpenTelekomCloud::CceNodeV3",
    "description": "Add a node to a container cluster.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "DataVolumes": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ExtendParam": {
                    "type": "string"
                },
                "Size": {
                    "type": "number"
                },
                "Volumetype": {
                    "type": "string"
                }
            },
            "required": [
                "Size",
                "Volumetype"
            ]
        },
        "RootVolume": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ExtendParam": {
                    "type": "string"
                },
                "Size": {
                    "type": "number"
                },
                "Volumetype": {
                    "type": "string"
                }
            },
            "required": [
                "Size",
                "Volumetype"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Annotations": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Node annotation, key/value pair format. Changing this parameter will create a new resource."
        },
        "AvailabilityZone": {
            "type": "string",
            "description": "specify the name of the available partition (AZ). Changing this parameter will create a new resource."
        },
        "BandwidthChargeMode": {
            "type": "string",
            "description": "Bandwidth billing type. Changing this parameter will create a new resource."
        },
        "BandwidthSize": {
            "type": "number",
            "description": "Bandwidth size. Changing this parameter will create a new resource."
        },
        "BillingMode": {
            "type": "number",
            "description": "Node's billing mode: The value is 0 (on demand). Changing this parameter will create a new resource."
        },
        "ClusterId": {
            "type": "string",
            "description": "ID of the cluster. Changing this parameter will create a new resource."
        },
        "EcsPerformanceType": {
            "type": "string",
            "description": "Classification of cloud server specifications. Changing this parameter will create a new cluster resource."
        },
        "EipCount": {
            "type": "number",
            "description": "Number of elastic IPs to be dynamically created. Changing this parameter will create a new resource."
        },
        "EipIds": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "List of existing elastic IP IDs. Changing this parameter will create a new resource."
        },
        "ExtendParamChargingMode": {
            "type": "number",
            "description": "Node charging mode, 0 is on-demand charging. Changing this parameter will create a new cluster resource."
        },
        "FlavorId": {
            "type": "string",
            "description": "Specifies the flavor id. Changing this parameter will create a new resource."
        },
        "Id": {
            "type": "string"
        },
        "Iptype": {
            "type": "string",
            "description": "Elastic IP type."
        },
        "KeyPair": {
            "type": "string",
            "description": "Key pair name when logging in to select the key pair mode. Changing this parameter will create a new resource."
        },
        "Labels": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Node tag, key/value pair format. Changing this parameter will create a new resource."
        },
        "MaxPods": {
            "type": "number",
            "description": "The maximum number of instances a node is allowed to create. Changing this parameter will create a new cluster resource."
        },
        "Name": {
            "type": "string",
            "description": "Node Name."
        },
        "OrderId": {
            "type": "string",
            "description": "Order ID, mandatory when the node payment type is the automatic payment package period type. Changing this parameter will create a new cluster resource."
        },
        "Postinstall": {
            "type": "string",
            "description": "Script required after installation. The input value can be a Base64 encoded string or not.\nChanging this parameter will create a new resource."
        },
        "Preinstall": {
            "type": "string",
            "description": "Script required before installation. The input value can be a Base64 encoded string or not.\nChanging this parameter will create a new resource."
        },
        "PrivateIp": {
            "type": "string"
        },
        "ProductId": {
            "type": "string",
            "description": "The Product ID. Changing this parameter will create a new cluster resource."
        },
        "PublicKey": {
            "type": "string",
            "description": "The Public key. Changing this parameter will create a new cluster resource."
        },
        "Region": {
            "type": "string"
        },
        "Sharetype": {
            "type": "string",
            "description": "Bandwidth sharing type. Changing this parameter will create a new resource."
        },
        "DataVolumes": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DataVolumes"
            },
            "minItems": 1
        },
        "RootVolume": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/RootVolume"
            },
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "AvailabilityZone",
        "ClusterId",
        "FlavorId",
        "KeyPair"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/PrivateIp"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}