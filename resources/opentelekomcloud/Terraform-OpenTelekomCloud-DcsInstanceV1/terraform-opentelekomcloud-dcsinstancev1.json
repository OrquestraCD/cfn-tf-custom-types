{
    "typeName": "Terraform::OpenTelekomCloud::DcsInstanceV1",
    "description": "Manages a DCS instance in the opentelekomcloud DCS Service.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/opentelekomcloud/Terraform-OpenTelekomCloud-DcsInstanceV1/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AccessUser": {
            "type": "string",
            "description": "Username used for accessing a DCS instance after password\nauthentication. A username starts with a letter, consists of 1 to 64 characters,\nand supports only letters, digits, and hyphens (-).\nChanging this creates a new instance."
        },
        "AvailableZones": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "IDs of the AZs where cache nodes reside. For details\non how to query AZs, see Querying AZ Information.\nChanging this creates a new instance."
        },
        "BackupAt": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "number"
            },
            "description": "Day in a week on which backup starts. Range: 1\u20137. Where: 1\nindicates Monday; 7 indicates Sunday.\nChanging this creates a new instance."
        },
        "BackupType": {
            "type": "string",
            "description": "Backup type. Options:\nauto: automatic backup.\nmanual: manual backup.\nChanging this creates a new instance."
        },
        "BeginAt": {
            "type": "string",
            "description": "Time at which backup starts. \"00:00-01:00\" indicates that backup\nstarts at 00:00:00.\nChanging this creates a new instance."
        },
        "Capacity": {
            "type": "number",
            "description": "Indicates the Cache capacity. Unit: GB.\nFor a DCS Redis or Memcached instance in single-node or master/standby mode, the cache\ncapacity can be 2 GB, 4 GB, 8 GB, 16 GB, 32 GB, or 64 GB.\nFor a DCS Redis instance in cluster mode, the cache capacity can be 64, 128, 256, 512GB.\nChanging this creates a new instance."
        },
        "Description": {
            "type": "string",
            "description": "Indicates the description of an instance. It is a character\nstring containing not more than 1024 characters."
        },
        "Engine": {
            "type": "string",
            "description": "Indicates a cache engine. Only Redis is supported. Changing this\ncreates a new instance."
        },
        "EngineVersion": {
            "type": "string",
            "description": "Indicates the version of a cache engine, which is 3.0.7.\nChanging this creates a new instance."
        },
        "Id": {
            "type": "string"
        },
        "InternalVersion": {
            "type": "string"
        },
        "Ip": {
            "type": "string"
        },
        "MaintainBegin": {
            "type": "string",
            "description": "Indicates the time at which a maintenance time window starts.\nFormat: HH:mm:ss.\nThe start time and end time of a maintenance time window must indicate the time segment of\na supported maintenance time window. For details, see section Querying Maintenance Time Windows.\nThe start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00.\nParameters maintain_begin and maintain_end must be set in pairs. If parameter maintain_begin\nis left blank, parameter maintain_end is also blank. In this case, the system automatically\nallocates the default start time 02:00."
        },
        "MaintainEnd": {
            "type": "string",
            "description": "Indicates the time at which a maintenance time window ends.\nFormat: HH:mm:ss.\nThe start time and end time of a maintenance time window must indicate the time segment of\na supported maintenance time window. For details, see section Querying Maintenance Time Windows.\nThe end time is four hours later than the start time. For example, if the start time is 22:00,\nthe end time is 02:00.\nParameters maintain_begin and maintain_end must be set in pairs. If parameter maintain_end is left\nblank, parameter maintain_begin is also blank. In this case, the system automatically allocates\nthe default end time 06:00."
        },
        "MaxMemory": {
            "type": "string"
        },
        "Name": {
            "type": "string",
            "description": "Indicates the name of an instance. An instance name starts with a letter,\nconsists of 4 to 64 characters, and supports only letters, digits, and hyphens (-)."
        },
        "OrderId": {
            "type": "string"
        },
        "Password": {
            "type": "string",
            "description": "Password of a DCS instance.\nThe password of a DCS Redis instance must meet the following complexity requirements:\nChanging this creates a new instance."
        },
        "PeriodType": {
            "type": "string",
            "description": "Interval at which backup is performed. Currently, only weekly\nbackup is supported.\nChanging this creates a new instance."
        },
        "Port": {
            "type": "number"
        },
        "ProductId": {
            "type": "string",
            "description": "Product ID used to differentiate DCS instance types.\nChanging this creates a new instance."
        },
        "ResourceSpecCode": {
            "type": "string"
        },
        "SaveDays": {
            "type": "number",
            "description": "Retention time. Unit: day. Range: 1\u20137.\nChanging this creates a new instance."
        },
        "SecurityGroupId": {
            "type": "string",
            "description": "Tenant's security group ID. For details on how to\ncreate security groups, see the Virtual Private Cloud API Reference."
        },
        "SecurityGroupName": {
            "type": "string"
        },
        "SubnetId": {
            "type": "string",
            "description": "Subnet ID. For details on how to create subnets, see the\nVirtual Private Cloud API Reference.\nChanging this creates a new instance."
        },
        "SubnetName": {
            "type": "string"
        },
        "UsedMemory": {
            "type": "number"
        },
        "UserId": {
            "type": "string"
        },
        "VpcId": {
            "type": "string",
            "description": "Tenant's VPC ID. For details on how to create VPCs, see the\nVirtual Private Cloud API Reference.\nChanging this creates a new instance."
        },
        "VpcName": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "AvailableZones",
        "BackupAt",
        "BackupType",
        "BeginAt",
        "Capacity",
        "Engine",
        "EngineVersion",
        "Name",
        "Password",
        "PeriodType",
        "ProductId",
        "SaveDays",
        "SecurityGroupId",
        "SubnetId",
        "VpcId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id",
        "/properties/InternalVersion",
        "/properties/Ip",
        "/properties/MaxMemory",
        "/properties/OrderId",
        "/properties/Port",
        "/properties/ResourceSpecCode",
        "/properties/SecurityGroupName",
        "/properties/SubnetName",
        "/properties/UsedMemory",
        "/properties/UserId",
        "/properties/VpcName"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}