{
    "typeName": "Terraform::OpenTelekomCloud::WafDomainV1",
    "description": "Manages a WAF domain resource within OpenTelekomCloud.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/opentelekomcloud/Terraform-OpenTelekomCloud-WafDomainV1/docs/README.md",
    "definitions": {
        "Server": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Address": {
                    "type": "string",
                    "description": "IP address or domain name of the web server that the client accesses. For example, 192.168.1.1 or www.a.com."
                },
                "BackProtocol": {
                    "type": "string",
                    "description": "Protocl used by WAF to forward client requests to the server. The options are HTTP and HTTPS."
                },
                "FrontProtocol": {
                    "type": "string",
                    "description": "Protocol type of the client. The options are HTTP and HTTPS."
                },
                "Port": {
                    "type": "string",
                    "description": "Port number used by the web server. The value ranges from 0 to 65535, for example, 8080."
                }
            },
            "required": [
                "Address",
                "BackProtocol",
                "FrontProtocol",
                "Port"
            ]
        },
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AccessCode": {
            "type": "string"
        },
        "AccessStatus": {
            "type": "number"
        },
        "CertificateId": {
            "type": "string",
            "description": "The certificate ID. This parameter is mandatory when front_protocol is set to HTTPS."
        },
        "Cname": {
            "type": "string"
        },
        "Hostname": {
            "type": "string",
            "description": "The domain name. For example, www.example.com or *.example.com. Changing this creates a new domain."
        },
        "Id": {
            "type": "string"
        },
        "PolicyId": {
            "type": "string",
            "description": "The policy ID associate with the domain. Changing this create a new domain."
        },
        "ProtectStatus": {
            "type": "number"
        },
        "Protocol": {
            "type": "string"
        },
        "Proxy": {
            "type": "boolean",
            "description": "Specifies whether a proxy is configured."
        },
        "SipHeaderList": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "Array of HTTP request header for identifying the real source IP address. This parameter is required only when proxy is set to true."
        },
        "SipHeaderName": {
            "type": "string",
            "description": "The type of the source IP header. This parameter is required only when proxy is set to true. The options are as follows: default, cloudflare, akamai, and custom."
        },
        "SubDomain": {
            "type": "string"
        },
        "TxtCode": {
            "type": "string"
        },
        "Server": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Server"
            },
            "minItems": 1
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Hostname",
        "Proxy"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/AccessCode",
        "/properties/AccessStatus",
        "/properties/Cname",
        "/properties/Id",
        "/properties/ProtectStatus",
        "/properties/Protocol",
        "/properties/SubDomain",
        "/properties/TxtCode"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}