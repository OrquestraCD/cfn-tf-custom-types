{
    "typeName": "Terraform::OpenTelekomCloud::WafCcattackprotectionRuleV1",
    "description": "Manages a WAF CC Attack Protection Rule resource within OpenTelekomCloud.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "ActionCategory": {
            "type": "string",
            "description": "Specifies the action. Changing this creates a new rule. Valid Options are:\n* `block` - block the requests.\n* `captcha` - Verification code. The user needs to enter the correct verification code after blocking to restore the correct access page."
        },
        "BlockContent": {
            "type": "string",
            "description": "Specifies the content of the returned page. Changing this creates a new rule."
        },
        "BlockContentType": {
            "type": "string",
            "description": "Specifies the type of the returned page. The options are `application/json`, `text/html`, and `text/xml`. Changing this creates a new rule."
        },
        "Default": {
            "type": "boolean"
        },
        "Id": {
            "type": "string"
        },
        "LimitNum": {
            "type": "number",
            "description": "Specifies the number of requests allowed from a web visitor in a rate limiting period. Changing this creates a new rule."
        },
        "LimitPeriod": {
            "type": "number",
            "description": "Specifies the rate limiting period. Changing this creates a new rule."
        },
        "LockTime": {
            "type": "number",
            "description": "Specifies the lock duration. The value ranges from 0 seconds to 2^32 seconds. Changing this creates a new rule."
        },
        "PolicyId": {
            "type": "string",
            "description": "The WAF policy ID. Changing this creates a new rule."
        },
        "TagCategory": {
            "type": "string",
            "description": "Specifies the category. The value is `referer`. Changing this creates a new rule."
        },
        "TagContents": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "Specifies the category content. Changing this creates a new rule."
        },
        "TagIndex": {
            "type": "string",
            "description": "If `tag_type` is set to `cookie`, this parameter indicates cookie name. Changing this creates a new rule."
        },
        "TagType": {
            "type": "string",
            "description": "Specifies the rate limit mode. Changing this creates a new rule. Valid Options are:\n* `ip` - A web visitor is identified by the IP address.\n* `cookie` - A web visitor is identified by the cookie key value.\n* `other` - A web visitor is identified by the Referer field(user-defined request source)."
        },
        "Url": {
            "type": "string",
            "description": "Specifies a misreported URL excluding a domain name. Changing this creates a new rule."
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "ActionCategory",
        "LimitNum",
        "LimitPeriod",
        "PolicyId",
        "TagType",
        "Url"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Default",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}