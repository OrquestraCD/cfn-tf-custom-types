{
    "typeName": "Terraform::OpenTelekomCloud::ComputeFloatingipV2",
    "description": "Manages a V2 floating IP resource within OpenTelekomCloud Nova (compute)\nthat can be used for compute instances.\nThese are similar to Neutron (networking) floating IP resources,\nbut only networking floating IPs can be used with load balancers.\n\nFloating IPs created with this module will have a bandwidth of 1000Mbit/s,\nfor manually specifying the bandwidth please use the\n[`opentelekomcloud_vpc_eip_v1`](vpc_eip_v1.html) module.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/opentelekomcloud/Terraform-OpenTelekomCloud-ComputeFloatingipV2/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Address": {
            "type": "string"
        },
        "FixedIp": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "InstanceId": {
            "type": "string"
        },
        "Pool": {
            "type": "string",
            "description": "The name of the pool from which to obtain the floating\nIP. Default value is admin_external_net. Changing this creates a new floating IP."
        },
        "Region": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Address",
        "/properties/FixedIp",
        "/properties/Id",
        "/properties/InstanceId"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}