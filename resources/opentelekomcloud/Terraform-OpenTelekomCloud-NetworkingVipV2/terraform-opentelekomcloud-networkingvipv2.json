{
    "typeName": "Terraform::OpenTelekomCloud::NetworkingVipV2",
    "description": "Manages a V2 vip resource within OpenTelekomCloud.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/opentelekomcloud/Terraform-OpenTelekomCloud-NetworkingVipV2/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "DeviceOwner": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IpAddress": {
            "type": "string",
            "description": "IP address desired in the subnet for this vip.\nIf you don't specify `ip_address`, an available IP address from\nthe specified subnet will be allocated to this vip."
        },
        "Name": {
            "type": "string",
            "description": "A unique name for the vip."
        },
        "NetworkId": {
            "type": "string",
            "description": "The ID of the network to attach the vip to.\nChanging this creates a new vip."
        },
        "Status": {
            "type": "string"
        },
        "SubnetId": {
            "type": "string",
            "description": "Subnet in which to allocate IP address for this vip.\nChanging this creates a new vip."
        },
        "TenantId": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "NetworkId",
        "SubnetId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/DeviceOwner",
        "/properties/Id",
        "/properties/Status",
        "/properties/TenantId"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "read": {
            "permissions": [
                "s3:GetObject"
            ]
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "lambda:InvokeFunction"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}