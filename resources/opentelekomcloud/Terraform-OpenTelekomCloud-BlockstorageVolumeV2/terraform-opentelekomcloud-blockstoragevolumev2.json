{
    "typeName": "Terraform::OpenTelekomCloud::BlockstorageVolumeV2",
    "description": "Manages a V2 volume resource within OpenTelekomCloud.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Timeouts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Create": {
                    "type": "string"
                },
                "Delete": {
                    "type": "string"
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Attachment": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Device": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "InstanceId": {
                        "type": "string"
                    }
                }
            }
        },
        "AvailabilityZone": {
            "type": "string",
            "description": "The availability zone for the volume.\nChanging this creates a new volume."
        },
        "Cascade": {
            "type": "boolean",
            "description": "Specifies to delete all snapshots associated with the EVS disk."
        },
        "ConsistencyGroupId": {
            "type": "string",
            "description": "The consistency group to place the volume\nin."
        },
        "Description": {
            "type": "string",
            "description": "A description of the volume. Changing this updates\nthe volume's description."
        },
        "DeviceType": {
            "type": "string",
            "description": "The device type of volume to create. Valid options are VBD and SCSI.\nDefaults to VBD. Changing this creates a new volume."
        },
        "ImageId": {
            "type": "string",
            "description": "The image ID from which to create the volume.\nChanging this creates a new volume."
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Key": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ]
            },
            "description": "Metadata key/value pairs to associate with the volume.\nChanging this updates the existing volume metadata.\nThe EVS encryption capability with KMS key can be set with the following parameters:\n* `__system__encrypted` - The default value is set to '0', which means\nthe volume is not encrypted, the value '1' indicates volume is encrypted.\n* `__system__cmkid` - (Optional) The ID of the kms key."
        },
        "Name": {
            "type": "string",
            "description": "A unique name for the volume. Changing this updates the\nvolume's name."
        },
        "Region": {
            "type": "string"
        },
        "Size": {
            "type": "number",
            "description": "The size of the volume to create (in gigabytes). Changing\nthis creates a new volume."
        },
        "SnapshotId": {
            "type": "string",
            "description": "The snapshot ID from which to create the volume.\nChanging this creates a new volume."
        },
        "SourceReplica": {
            "type": "string",
            "description": "The volume ID to replicate with."
        },
        "SourceVolId": {
            "type": "string",
            "description": "The volume ID from which to create the volume.\nChanging this creates a new volume."
        },
        "Tags": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Key": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ]
            },
            "description": "Tags key/value pairs to associate with the volume.\nChanging this updates the existing volume tags."
        },
        "VolumeType": {
            "type": "string",
            "description": "Currently, the value can be `SSD` (ultra-high I/O disk type), `SAS` (high I/O disk type), `SATA` (common I/O disk type), `co-p1` (Exclusive HPC/ SAP HANA: high I/O, performance optimized), or `uh-l1` (Exclusive HPC/ SAP HANA: ultra-high-I/O, latency optimized), Read Note for `uh-l1` and `co-p1`: [OTC-API](https://docs.otc.t-systems.com/en-us/api/ecs/en-us_topic_0065817708.html). Changing this creates a new volume."
        },
        "Wwn": {
            "type": "string"
        },
        "Timeouts": {
            "$ref": "#/definitions/Timeouts"
        }
    },
    "additionalProperties": false,
    "required": [
        "Size"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Attachment",
        "/properties/Wwn"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}