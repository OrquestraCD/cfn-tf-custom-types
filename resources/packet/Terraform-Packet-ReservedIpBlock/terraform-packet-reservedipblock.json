{
    "typeName": "Terraform::Packet::ReservedIpBlock",
    "description": "Provides a resource to create and manage blocks of reserved IP addresses in a project.\n\nWhen a user provisions first device in a facility, Packet API automatically allocates IPv6/56 and private IPv4/25 blocks.\nThe new device then gets IPv6 and private IPv4 addresses from those block. It also gets a public IPv4/31 address.\nEvery new device in the project and facility will automatically get IPv6 and private IPv4 addresses from these pre-allocated blocks.\nThe IPv6 and private IPv4 blocks can't be created, only imported. With this resource, it's possible to create either public IPv4 blocks or global IPv4 blocks.\n\nPublic blocks are allocated in a facility. Addresses from public blocks can only be assigned to devices in the facility. Public blocks can have mask from /24 (256 addresses) to /32 (1 address). If you create public block with this resource, you must fill the facility argmument.\n\nAddresses from global blocks can be assigned in any facility. Global blocks can have mask from /30 (4 addresses), to /32 (1 address). If you create global block with this resource, you must specify type = \"global_ipv4\" and you must omit the facility argument.\n\nOnce IP block is allocated or imported, an address from it can be assigned to device with the `packet_ip_attachment` resource.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Address": {
            "type": "string"
        },
        "AddressFamily": {
            "type": "number"
        },
        "Cidr": {
            "type": "number"
        },
        "CidrNotation": {
            "type": "string"
        },
        "Description": {
            "type": "string",
            "description": "Arbitrary description."
        },
        "Facility": {
            "type": "string",
            "description": "Facility where to allocate the public IP address block, makes sense only for type==public_ipv4, must be empty for type==global_ipv4."
        },
        "Gateway": {
            "type": "string"
        },
        "Global": {
            "type": "boolean"
        },
        "Manageable": {
            "type": "boolean"
        },
        "Management": {
            "type": "boolean"
        },
        "Netmask": {
            "type": "string"
        },
        "Network": {
            "type": "string"
        },
        "ProjectId": {
            "type": "string",
            "description": "The packet project ID where to allocate the address block."
        },
        "Public": {
            "type": "boolean"
        },
        "Quantity": {
            "type": "number",
            "description": "The number of allocated /32 addresses, a power of 2."
        },
        "Type": {
            "type": "string",
            "description": "Either \"global_ipv4\" or \"public_ipv4\", defaults to \"public_ipv4\" for backward compatibility."
        }
    },
    "additionalProperties": false,
    "required": [
        "ProjectId",
        "Quantity"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Address",
        "/properties/AddressFamily",
        "/properties/Cidr",
        "/properties/CidrNotation",
        "/properties/Gateway",
        "/properties/Global",
        "/properties/Manageable",
        "/properties/Management",
        "/properties/Netmask",
        "/properties/Network",
        "/properties/Public"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}