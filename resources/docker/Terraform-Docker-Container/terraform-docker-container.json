{
    "typeName": "Terraform::Docker::Container",
    "description": "Manages the lifecycle of a Docker container.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Capabilities": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Add": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "Drop": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": []
        },
        "Devices": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ContainerPath": {
                    "type": "string"
                },
                "HostPath": {
                    "type": "string"
                },
                "Permissions": {
                    "type": "string"
                }
            },
            "required": [
                "HostPath"
            ]
        },
        "Healthcheck": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Interval": {
                    "type": "string"
                },
                "Retries": {
                    "type": "number"
                },
                "StartPeriod": {
                    "type": "string"
                },
                "Test": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "Timeout": {
                    "type": "string"
                }
            },
            "required": [
                "Test"
            ]
        },
        "Host": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Host": {
                    "type": "string"
                },
                "Ip": {
                    "type": "string"
                }
            },
            "required": [
                "Host",
                "Ip"
            ]
        },
        "Labels": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Label": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Label",
                "Value"
            ]
        },
        "Mounts": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ReadOnly": {
                    "type": "boolean"
                },
                "Source": {
                    "type": "string"
                },
                "Target": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "BindOptions": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/BindOptions"
                    },
                    "maxItems": 1
                },
                "TmpfsOptions": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/TmpfsOptions"
                    },
                    "maxItems": 1
                },
                "VolumeOptions": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/VolumeOptions"
                    },
                    "maxItems": 1
                }
            },
            "required": [
                "Target",
                "Type"
            ]
        },
        "NetworksAdvanced": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Aliases": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    }
                },
                "Ipv4Address": {
                    "type": "string"
                },
                "Ipv6Address": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ]
        },
        "Ports": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "External": {
                    "type": "number"
                },
                "Internal": {
                    "type": "number"
                },
                "Ip": {
                    "type": "string"
                },
                "Protocol": {
                    "type": "string"
                }
            },
            "required": [
                "Internal"
            ]
        },
        "Ulimit": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Hard": {
                    "type": "number"
                },
                "Name": {
                    "type": "string"
                },
                "Soft": {
                    "type": "number"
                }
            },
            "required": [
                "Hard",
                "Name",
                "Soft"
            ]
        },
        "Upload": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Content": {
                    "type": "string"
                },
                "ContentBase64": {
                    "type": "string"
                },
                "Executable": {
                    "type": "boolean"
                },
                "File": {
                    "type": "string"
                },
                "Source": {
                    "type": "string"
                },
                "SourceHash": {
                    "type": "string"
                }
            },
            "required": [
                "File"
            ]
        },
        "Volumes": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ContainerPath": {
                    "type": "string"
                },
                "FromContainer": {
                    "type": "string"
                },
                "HostPath": {
                    "type": "string"
                },
                "ReadOnly": {
                    "type": "boolean"
                },
                "VolumeName": {
                    "type": "string"
                }
            },
            "required": []
        },
        "BindOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Propagation": {
                    "type": "string"
                }
            },
            "required": []
        },
        "TmpfsOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Mode": {
                    "type": "number"
                },
                "SizeBytes": {
                    "type": "number"
                }
            },
            "required": []
        },
        "VolumeOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DriverName": {
                    "type": "string"
                },
                "DriverOptions": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "MapKey": {
                                "type": "string"
                            },
                            "MapValue": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "MapKey",
                            "MapValue"
                        ]
                    }
                },
                "NoCopy": {
                    "type": "boolean"
                },
                "Labels": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/Labels"
                    }
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Attach": {
            "type": "boolean",
            "description": "If true attach to the container after its creation and waits the end of his execution."
        },
        "Bridge": {
            "type": "string"
        },
        "Command": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "The command to use to start the\ncontainer. For example, to run `/usr/bin/myprogram -f baz.conf` set the\ncommand to be `[\"/usr/bin/myprogram\", \"-f\", \"baz.conf\"]`."
        },
        "ContainerLogs": {
            "type": "string"
        },
        "CpuSet": {
            "type": "string",
            "description": "A comma-separated list or hyphen-separated range of CPUs a container can use, e.g. `0-1`."
        },
        "CpuShares": {
            "type": "number",
            "description": "CPU shares (relative weight) for the container."
        },
        "DestroyGraceSeconds": {
            "type": "number",
            "description": "If defined will attempt to stop the container before destroying. Container will be destroyed after `n` seconds or on successful stop."
        },
        "Dns": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Set of DNS servers."
        },
        "DnsOpts": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Set of DNS options used by the DNS provider(s), see `resolv.conf` documentation for valid list of options."
        },
        "DnsSearch": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Set of DNS search domains that are used when bare unqualified hostnames are used inside of the container."
        },
        "Domainname": {
            "type": "string",
            "description": "Domain name of the container."
        },
        "Entrypoint": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            },
            "description": "The command to use as the\nEntrypoint for the container. The Entrypoint allows you to configure a\ncontainer to run as an executable. For example, to run `/usr/bin/myprogram`\nwhen starting a container, set the entrypoint to be\n`[\"/usr/bin/myprogram\"]`."
        },
        "Env": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Environment variables to set."
        },
        "ExitCode": {
            "type": "number"
        },
        "Gateway": {
            "type": "string"
        },
        "GroupAdd": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Add additional groups to run as."
        },
        "Hostname": {
            "type": "string",
            "description": "Hostname of the container."
        },
        "Id": {
            "type": "string"
        },
        "Image": {
            "type": "string",
            "description": "The ID of the image to back this container.\nThe easiest way to get this value is to use the `docker_image` resource\nas is shown in the example above."
        },
        "IpAddress": {
            "type": "string"
        },
        "IpPrefixLength": {
            "type": "number"
        },
        "IpcMode": {
            "type": "string",
            "description": "IPC sharing mode for the container. Possible values are: `none`, `private`, `shareable`, `container:<name|id>` or `host`."
        },
        "Links": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Set of links for link based\nconnectivity between containers that are running on the same host."
        },
        "LogDriver": {
            "type": "string",
            "description": "The logging driver to use for the container.\nDefaults to \"json-file\"."
        },
        "LogOpts": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "Key/value pairs to use as options for\nthe logging driver."
        },
        "Logs": {
            "type": "boolean",
            "description": "Save the container logs (`attach` must be enabled)."
        },
        "MaxRetryCount": {
            "type": "number",
            "description": "The maximum amount of times to an attempt\na restart when `restart` is set to \"on-failure\"."
        },
        "Memory": {
            "type": "number",
            "description": "The memory limit for the container in MBs."
        },
        "MemorySwap": {
            "type": "number",
            "description": "The total memory limit (memory + swap) for the\ncontainer in MBs. This setting may compute to `-1` after `terraform apply` if the target host doesn't support memory swap, when that is the case docker will use a soft limitation."
        },
        "MustRun": {
            "type": "boolean",
            "description": "If true, then the Docker container will be\nkept running. If false, then as long as the container exists, Terraform\nassumes it is successful."
        },
        "Name": {
            "type": "string",
            "description": "The name of the Docker container."
        },
        "NetworkAlias": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Network aliases of the container for user-defined networks only. *Deprecated:* use `networks_advanced` instead."
        },
        "NetworkData": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Gateway": {
                        "type": "string"
                    },
                    "IpAddress": {
                        "type": "string"
                    },
                    "IpPrefixLength": {
                        "type": "number"
                    },
                    "NetworkName": {
                        "type": "string"
                    }
                }
            }
        },
        "NetworkMode": {
            "type": "string",
            "description": "Network mode of the container."
        },
        "Networks": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "Id of the networks in which the\ncontainer is. *Deprecated:* use `networks_advanced` instead."
        },
        "PidMode": {
            "type": "string",
            "description": "The PID (Process) Namespace mode for the container. Either `container:<name|id>` or `host`."
        },
        "Privileged": {
            "type": "boolean",
            "description": "Run container in privileged mode."
        },
        "PublishAllPorts": {
            "type": "boolean",
            "description": "Publish all ports of the container."
        },
        "ReadOnly": {
            "type": "boolean",
            "description": "If true, the container will be started as readonly."
        },
        "Restart": {
            "type": "string",
            "description": "The restart policy for the container. Must be\none of \"no\", \"on-failure\", \"always\", \"unless-stopped\"."
        },
        "Rm": {
            "type": "boolean",
            "description": "If true, then the container will be automatically removed after his execution. Terraform\nwon't check this container after creation."
        },
        "ShmSize": {
            "type": "number",
            "description": "Size of `/dev/shm` in MBs."
        },
        "Start": {
            "type": "boolean",
            "description": "If true, then the Docker container will be\nstarted after creation. If false, then the container is only created."
        },
        "Sysctls": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A map of kernel parameters (sysctls) to set in the container."
        },
        "Tmpfs": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "MapKey": {
                        "type": "string"
                    },
                    "MapValue": {
                        "type": "string"
                    }
                },
                "required": [
                    "MapKey",
                    "MapValue"
                ]
            },
            "description": "A map of container directories which should be replaced by `tmpfs mounts`, and their corresponding mount options."
        },
        "User": {
            "type": "string",
            "description": "User used for run the first process. Format is\n`user` or `user:group` which user and group can be passed literraly or\nby name."
        },
        "UsernsMode": {
            "type": "string",
            "description": "Sets the usernamespace mode for the container when usernamespace remapping option is enabled."
        },
        "WorkingDir": {
            "type": "string",
            "description": "The working directory for commands to run in."
        },
        "Capabilities": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Capabilities"
            },
            "maxItems": 1
        },
        "Devices": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Devices"
            }
        },
        "Healthcheck": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Healthcheck"
            },
            "maxItems": 1
        },
        "Host": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Host"
            }
        },
        "Labels": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Labels"
            }
        },
        "Mounts": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Mounts"
            }
        },
        "NetworksAdvanced": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/NetworksAdvanced"
            }
        },
        "Ports": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Ports"
            }
        },
        "Ulimit": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Ulimit"
            }
        },
        "Upload": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Upload"
            }
        },
        "Volumes": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Volumes"
            }
        },
        "BindOptions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/BindOptions"
            },
            "maxItems": 1
        },
        "TmpfsOptions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/TmpfsOptions"
            },
            "maxItems": 1
        },
        "VolumeOptions": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/VolumeOptions"
            },
            "maxItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "Image",
        "Name"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Bridge",
        "/properties/ContainerLogs",
        "/properties/ExitCode",
        "/properties/Gateway",
        "/properties/Id",
        "/properties/IpAddress",
        "/properties/IpPrefixLength",
        "/properties/NetworkData"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}