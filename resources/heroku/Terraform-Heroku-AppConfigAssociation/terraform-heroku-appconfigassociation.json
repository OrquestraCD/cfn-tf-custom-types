{
    "typeName": "Terraform::Heroku::AppConfigAssociation",
    "description": "Provides a Heroku App Config Association resource, making it possible to set/update/remove heroku app config vars independently from\nthe `heroku_app` resource. An example usage scenario could be:\n\n* User has separate git repositories for various micro-services. Multiple micro-services use Kafka.\n* User has a separate repository for kafka terraform files with blue/green support.\n* User builds out new clusters.\n* Prior to this resource's introduction, user would need one `terraform apply` to update state and X number of `terraform apply`\nfor each micro-service to pick up the new kafka clusters. However with this resource, user can do one `terraform apply`\nand let Heroku handle the rolling restarts to pick up the new config vars.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AppId": {
            "type": "string",
            "description": "A Heroku app's `UUID`. Can also be the name of the Heroku app but `UUID` is preferred as it is idempotent."
        },
        "SensitiveVars": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Key": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ]
            },
            "description": "This is the same as `vars`. The main difference between the two\nattributes is `sensitive_vars` outputs are redacted on-screen and replaced by a <sensitive> placeholder, following a terraform\nplan or apply. It is recommended to put private keys, passwords, etc in this argument."
        },
        "Vars": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Key": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ]
            },
            "description": "Map of config vars that are output in plaintext."
        }
    },
    "additionalProperties": false,
    "required": [
        "AppId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}