{
    "typeName": "Terraform::Kubernetes::Ingress",
    "description": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "Metadata": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Annotations": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "Key": {
                                "type": "string"
                            },
                            "Value": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Key",
                            "Value"
                        ]
                    }
                },
                "GenerateName": {
                    "type": "string"
                },
                "Labels": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "Key": {
                                "type": "string"
                            },
                            "Value": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Key",
                            "Value"
                        ]
                    }
                },
                "Name": {
                    "type": "string"
                },
                "Namespace": {
                    "type": "string"
                }
            },
            "required": []
        },
        "Spec": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Backend": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Backend"
                    }
                },
                "Rule": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Rule"
                    }
                },
                "Tls": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Tls"
                    }
                }
            },
            "required": []
        },
        "Backend": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ServiceName": {
                    "type": "string"
                },
                "ServicePort": {
                    "type": "string"
                }
            },
            "required": []
        },
        "Rule": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Host": {
                    "type": "string"
                },
                "Http": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Http"
                    }
                }
            },
            "required": []
        },
        "Tls": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Hosts": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "type": "string"
                    }
                },
                "SecretName": {
                    "type": "string"
                }
            },
            "required": []
        },
        "Http": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Path": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Path"
                    }
                }
            },
            "required": []
        },
        "Path": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Path": {
                    "type": "string"
                },
                "Backend": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "$ref": "#/definitions/Backend"
                    }
                }
            },
            "required": []
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "LoadBalancerIngress": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Hostname": {
                        "type": "string"
                    },
                    "Ip": {
                        "type": "string"
                    }
                }
            }
        },
        "Metadata": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Metadata"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Spec": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Spec"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Backend": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Backend"
            },
            "maxItems": 1
        },
        "Rule": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Rule"
            }
        },
        "Tls": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Tls"
            }
        },
        "Http": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Http"
            },
            "maxItems": 1,
            "minItems": 1
        },
        "Path": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/Path"
            },
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/LoadBalancerIngress"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}