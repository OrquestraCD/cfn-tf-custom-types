{
    "typeName": "Terraform::CloudStack::SecondaryIpaddress",
    "description": "Assigns a secondary IP to a NIC.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/cloudstack/Terraform-CloudStack-SecondaryIpaddress/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IpAddress": {
            "type": "string",
            "description": "The IP address to bind the to NIC. If not supplied\nan IP address will be selected randomly. Changing this forces a new resource\nto be\tcreated."
        },
        "NicId": {
            "type": "string",
            "description": "The NIC ID to which you want to attach the secondary IP\naddress. Changing this forces a new resource to be created (defaults to the\nID of the primary NIC)."
        },
        "VirtualMachineId": {
            "type": "string",
            "description": "The ID of the virtual machine to which you\nwant to attach the secondary IP address. Changing this forces a new resource\nto be created."
        }
    },
    "additionalProperties": false,
    "required": [
        "VirtualMachineId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}