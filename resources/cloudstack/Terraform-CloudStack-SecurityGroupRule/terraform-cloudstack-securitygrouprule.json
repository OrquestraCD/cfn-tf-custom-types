{
    "typeName": "Terraform::CloudStack::SecurityGroupRule",
    "description": "Authorizes and revokes both ingress and egress rulea for a given security group.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/cloudstack/Terraform-CloudStack-SecurityGroupRule/docs/README.md",
    "definitions": {
        "Rule": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CidrList": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A CIDR list to allow access to the given ports."
                },
                "IcmpCode": {
                    "type": "number",
                    "description": "The ICMP code to allow, or `-1` to allow `any`. This\ncan only be specified if the protocol is ICMP. (defaults 0)."
                },
                "IcmpType": {
                    "type": "number",
                    "description": "The ICMP type to allow, or `-1` to allow `any`. This\ncan only be specified if the protocol is ICMP. (defaults 0)."
                },
                "Ports": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ports and/or port ranges to allow. This can only\nbe specified if the protocol is TCP, UDP, ALL or a valid protocol number."
                },
                "Protocol": {
                    "type": "string",
                    "description": "The name of the protocol to allow. Valid options are:\n`tcp`, `udp`, `icmp`, `all` or a valid protocol number."
                },
                "TrafficType": {
                    "type": "string",
                    "description": "The traffic type for the rule. Valid options are:\n`ingress` or `egress`. (defaults ingress)."
                },
                "UserSecurityGroupList": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of security groups to apply\nthe rules to."
                }
            },
            "required": [
                "Protocol"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "Parallelism": {
            "type": "number"
        },
        "Project": {
            "type": "string",
            "description": "The name or ID of the project in which the security\ngroup is created. Changing this forces a new resource to be created."
        },
        "SecurityGroupId": {
            "type": "string",
            "description": "The security group ID for which to create\nthe rules. Changing this forces a new resource to be created."
        },
        "Rule": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Rule"
            },
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "SecurityGroupId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}