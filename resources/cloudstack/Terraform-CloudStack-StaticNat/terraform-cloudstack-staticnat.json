{
    "typeName": "Terraform::CloudStack::StaticNat",
    "description": "Enables static NAT for a given IP address",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "documentationUrl": "https://github.com/iann0036/cfn-tf-custom-types/blob/docs/resources/cloudstack/Terraform-CloudStack-StaticNat/docs/README.md",
    "definitions": {},
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "IpAddressId": {
            "type": "string",
            "description": "The public IP address ID for which static\nNAT will be enabled. Changing this forces a new resource to be created."
        },
        "Project": {
            "type": "string",
            "description": "The name or ID of the project to deploy this\ninstance to. Changing this forces a new resource to be created."
        },
        "VirtualMachineId": {
            "type": "string",
            "description": "The virtual machine ID to enable the\nstatic NAT feature for. Changing this forces a new resource to be created."
        },
        "VmGuestIp": {
            "type": "string",
            "description": "The virtual machine IP address to forward the\nstatic NAT traffic to (useful when the virtual machine has secondary\nNICs or IP addresses). Changing this forces a new resource to be created."
        }
    },
    "additionalProperties": false,
    "required": [
        "IpAddressId",
        "VirtualMachineId"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/Id"
    ],
    "primaryIdentifier": [
        "/properties/tfcfnid"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}