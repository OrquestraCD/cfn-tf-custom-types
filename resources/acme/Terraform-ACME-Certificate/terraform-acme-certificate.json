{
    "typeName": "Terraform::ACME::Certificate",
    "description": "The `acme_certificate` resource can be used to create and manage an ACME TLS\ncertificate.\n\n-> **NOTE:** As the usage model of Terraform generally sees it as being run on\na different server than a certificate would normally be placed on, the\n`acme_certificate` resource only supports DNS challenges.",
    "sourceUrl": "https://github.com/iann0036/cfn-tf-custom-types.git",
    "definitions": {
        "DnsChallenge": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Config": {
                    "type": "array",
                    "insertionOrder": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "MapKey": {
                                "type": "string"
                            },
                            "MapValue": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "MapKey",
                            "MapValue"
                        ]
                    }
                },
                "Provider": {
                    "type": "string"
                }
            },
            "required": [
                "Provider"
            ]
        }
    },
    "properties": {
        "tfcfnid": {
            "description": "Internal identifier for tracking resource changes. Do not use.",
            "type": "string"
        },
        "AccountKeyPem": {
            "type": "string"
        },
        "CertificateDomain": {
            "type": "string"
        },
        "CertificateP12": {
            "type": "string"
        },
        "CertificateP12Password": {
            "type": "string",
            "description": "Password to be used when generating\nthe PFX file stored in [`certificate_p12`](#certificate_p12). Defaults to an\nempty string."
        },
        "CertificatePem": {
            "type": "string"
        },
        "CertificateRequestPem": {
            "type": "string",
            "description": "A pre-created certificate request, such as one\nfrom [`tls_cert_request`][tls-cert-request], or one from an external source,\nin PEM format.  Either this, or the in-resource request options (`common_name`,\n`key_type`, and optionally `subject_alternative_names`) need to be specified."
        },
        "CertificateUrl": {
            "type": "string"
        },
        "CommonName": {
            "type": "string",
            "description": "The certificate's common name, the primary domain that the\ncertificate will be recognized for. Required when not specifying a CSR."
        },
        "Id": {
            "type": "string"
        },
        "IssuerPem": {
            "type": "string"
        },
        "KeyType": {
            "type": "string",
            "description": "The key type for the certificate's private key. Can be one of:\n`P256` and `P384` (for ECDSA keys of respective length) or `2048`, `4096`, and\n`8192` (for RSA keys of respective length). Required when not specifying a\nCSR. The default is `2048` (RSA key of 2048 bits)."
        },
        "MinDaysRemaining": {
            "type": "number"
        },
        "MustStaple": {
            "type": "boolean"
        },
        "PrivateKeyPem": {
            "type": "string"
        },
        "RecursiveNameservers": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "type": "string"
            }
        },
        "SubjectAlternativeNames": {
            "type": "array",
            "insertionOrder": true,
            "items": {
                "type": "string"
            },
            "description": "The certificate's subject alternative names,\ndomains that this certificate will also be recognized for. Only valid when not\nspecifying a CSR."
        },
        "DnsChallenge": {
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/DnsChallenge"
            },
            "minItems": 1
        }
    },
    "additionalProperties": false,
    "required": [
        "AccountKeyPem"
    ],
    "readOnlyProperties": [
        "/properties/tfcfnid",
        "/properties/CertificateDomain",
        "/properties/CertificateP12",
        "/properties/CertificatePem",
        "/properties/CertificateUrl",
        "/properties/Id",
        "/properties/IssuerPem",
        "/properties/PrivateKeyPem"
    ],
    "primaryIdentifier": [
        "/properties/Id"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": []
        },
        "update": {
            "permissions": [
                "s3:GetObject",
                "s3:PutObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "s3:GetObject",
                "s3:DeleteObject",
                "secretsmanager:GetSecretValue"
            ]
        },
        "list": {
            "permissions": []
        }
    }
}